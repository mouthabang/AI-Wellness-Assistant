{"version":3,"file":"component---src-pages-voice-chat-js-7d4387d08a73034f7cff.js","mappings":"oKAEA,MAAMA,EAAqBC,SAAQ,IAAM,kCAA+BC,MAAMC,GAAQA,EAAIH,sBAAqB,CAC3GI,KAAK,IA8FT,UA3FkBC,KAEd,MAAM,EAACC,EAAY,EAACC,IAAkBC,EAAAA,EAAAA,WAAS,GA8B/C,OACIC,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAG,CACAC,MAAM,eAEVF,EAAAA,cAAA,YACIA,EAAAA,cAAA,QAAMG,KAAK,0DAA0DC,IAAI,eAGzEJ,EAAAA,cAAA,OAAKK,UAAU,OACXL,EAAAA,cAAA,OAAKK,UAAU,qBACXL,EAAAA,cAAA,OAAKK,UAAU,gBACXL,EAAAA,cAAA,MAAIK,UAAU,wBACTR,EACKG,EAAAA,cAAA,OAAKK,UAAU,SAAQ,IAACL,EAAAA,cAAA,SAAG,iBAE7BA,EAAAA,cAAA,OAAKK,UAAU,SACXL,EAAAA,cAAA,SAAG,eAEHA,EAAAA,cAAA,SAAG,2BAOvBA,EAAAA,cAACT,EAAkB,CACfe,OAAK,EACLC,OAAQC,IAAA,IAAC,eAAEC,EAAc,cAAEC,EAAa,aAAEC,GAAcH,EAAA,OAEpDR,EAAAA,cAAA,OAAKK,UAAU,qCACXL,EAAAA,cAAA,UAAQK,UAAS,eAAgBR,EAAc,UAAY,IAAMe,GAAG,OAChEZ,EAAAA,cAAA,QAAMa,QAASA,KACXf,GAAgBD,GAEG,GAAfA,EACAY,KAEAC,IAnExCI,eAA4BC,GACxBC,QAAQC,IAAIF,GAEZ,MAAMG,QAAkBC,MAAMJ,GAAUtB,MAAM2B,GAAMA,EAAEC,SACtDL,QAAQC,IAAIC,GACZ,MAAMI,EAAY,IAAIC,KAAK,CAACL,GAAY,YAAa,CAAEM,KAAM,cAG7D,IAAIC,EAAe,IAAIC,SACvBD,EAAaE,OAAO,gBAAiBL,GACrCG,EAAaE,OAAO,aAAc,GAiBtC,CAyCwCC,CAAajB,GACjB,EACDN,UAAU,kBAAiB,QAEjCM,GACGX,EAAAA,cAAA,SAAO6B,QAAM,EAACC,IAAKnB,EAAcoB,UAAQ,EAACC,UAAQ,IAGpD,MAQvB,C","sources":["webpack://ai-financial-awareness/./src/pages/voice-chat.js"],"sourcesContent":["import React, { useState   } from \"react\";\nimport Seo from \"../components/Seo/seo\";\nconst ReactMediaRecorder = dynamic(() => import('react-media-recorder').then((mod) => mod.ReactMediaRecorder), {\n    ssr: false,\n  });\n\nconst VoiceChat = () => {\n\n    const [isRecording, setIsRecording] = useState(false);\n    async function handleSubmit(mediaUrl) {\n        console.log(mediaUrl);\n\n        const audioBlob = await fetch(mediaUrl).then((r) => r.blob());\n        console.log(audioBlob);\n        const audioFile = new File([audioBlob], 'voice.wav', { type: 'audio/wav' });\n      \n\n        let bodyFormData = new FormData();\n        bodyFormData.append(\"client_speech\", audioFile);\n        bodyFormData.append(\"session_id\", \"\");\n {/*\n        let submit = await fetch(\"https://48fa-41-191-207-34.ngrok-free.app/stt\", {\n            method: \"POST\",\n            body: bodyFormData,\n            headers: {\n              'content-type': 'multipart/form-data'\n            }\n        }).then((response) => response.json())\n        .then((data) => {\n            console.log(data);\n            return data;\n        });\n\n        console.log(submit);\n*/}\n\n    }\n\n    return (\n        <>\n            <Seo\n                title=\"Talk to AI\"\n            />\n            <main>\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n                </link>\n\n                <div className=\"p-5\">\n                    <div className=\"content-container\">\n                        <div className=\"text-center \">\n                            <h3 className=\"listening text-white\">\n                                {isRecording\n                                    ? <div className=\"pt-20\"> <p>listening...</p></div>\n                                    :\n                                    <div className=\"pt-20\">\n                                        <p>Hey, Tatolo</p>\n\n                                        <p>How can I help you?</p>\n                                    </div>\n                                }\n                            </h3>\n                        </div>\n\n                    </div>\n                    <ReactMediaRecorder\n                        audio\n                        render={({ startRecording, stopRecording, mediaBlobUrl }) => (\n\n                            <div className=\"flex justify-center items-center \">\n                                <button className={`mic-toggle ${isRecording ? 'clicked' : ''}`} id=\"mic\">\n                                    <span onClick={() => {\n                                        setIsRecording(!isRecording)\n\n                                        if (isRecording == false) {\n                                            startRecording();\n                                        } else {\n                                            stopRecording();\n                                            handleSubmit(mediaBlobUrl);\n                                        }\n                                    }} className=\"material-icons\">mic</span>\n                                </button>\n                                {mediaBlobUrl && (\n                                    <audio hidden src={mediaBlobUrl} controls autoPlay />\n                                )}\n\n                            </div>\n\n                        )}\n                    />\n                </div>\n\n            </main>\n\n        </>\n    )\n}\n\nexport default VoiceChat;"],"names":["ReactMediaRecorder","dynamic","then","mod","ssr","VoiceChat","isRecording","setIsRecording","useState","React","Seo","title","href","rel","className","audio","render","_ref","startRecording","stopRecording","mediaBlobUrl","id","onClick","async","mediaUrl","console","log","audioBlob","fetch","r","blob","audioFile","File","type","bodyFormData","FormData","append","handleSubmit","hidden","src","controls","autoPlay"],"sourceRoot":""}