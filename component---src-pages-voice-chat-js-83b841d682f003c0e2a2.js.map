{"version":3,"file":"component---src-pages-voice-chat-js-83b841d682f003c0e2a2.js","mappings":"kKAmFA,UA/EkBA,KACd,MAAM,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,KACnC,EAACC,EAAW,EAACC,IAAiBF,EAAAA,EAAAA,UAAS,KACvC,EAACG,EAAY,EAACC,IAAkBJ,EAAAA,EAAAA,UAAS,GAyElD,C","sources":["webpack://ai-financial-awareness/./src/pages/voice-chat.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Seo from \"../components/Seo/seo\";\n\n\nconst VoiceChat = () => {\n    const [micState, setMicState] = useState('');\n    const [transcript, setTranscript] = useState(\"\");\n    const [isListening, setIsListening] = useState('');\n \n    const SpeechRecognitionComponent = () => {\n        setIsListening(!isListening);\n        if (isListening == false) {\n            setMicState(transcript);\n        } else {\n            setMicState(\"Converting word to text...\")\n        }\n        \n        const [transcript, setTranscript] = useState(\"\");\n      \n        const startSpeechRecognition = () => {\n          const recognition = new window.webkitSpeechRecognition(); // Create SpeechRecognition instance\n          recognition.lang = \"en-US\"; // Set recognition language\n      \n          // Event listener for when speech is recognized\n          recognition.onresult = (event) => {\n            const last = event.results.length - 1;\n            const recognizedSpeech = event.results[last][0].transcript;\n            setTranscript(recognizedSpeech); // Update state with recognized speech\n          };\n      \n          // Event listener for speech recognition errors\n          recognition.onerror = (event) => {\n            console.error(\"Speech recognition error:\", event.error);\n          };\n      \n          // Start speech recognition\n          recognition.start();\n        };\n\n    return (\n        <>\n            <Seo\n                title=\"Talk to AI\"\n            />\n            <main>\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n                </link>\n\n                <div className=\"p-5\">\n                    <div className=\"content-container\">\n                        <div className=\"text-center \">\n                            <h3 className=\"listening text-white\">\n                                {micState\n                                    ?\n                                    <div className=\"pt-20\"> <p>{micState}</p></div>\n                                    : \n                                    <div className=\"pt-20\">\n                                        <p>Hey, Masekate Mokotjo </p>\n\n                                        <p>How can I help you?</p>\n\n                                    </div>\n                                }\n                            </h3>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center \">\n                        <button className={`mic-toggle ${isListening ? 'clicked' : ''}`} id=\"mic\">\n                            <span onClick={ startSpeechRecognition} className=\"material-icons\">mic</span>\n                        </button>\n\n                    </div>\n\n\n                </div>\n\n            </main>\n\n        </>\n    )\n}\n}\n\nexport default VoiceChat;"],"names":["VoiceChat","micState","setMicState","useState","transcript","setTranscript","isListening","setIsListening"],"sourceRoot":""}