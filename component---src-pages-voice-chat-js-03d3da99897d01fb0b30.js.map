{"version":3,"file":"component---src-pages-voice-chat-js-03d3da99897d01fb0b30.js","mappings":"8KAmGA,UA9FkBA,KACd,MAAM,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,KACnC,EAACC,EAAW,EAACC,IAAiBF,EAAAA,EAAAA,UAAS,KACvC,EAACG,EAAU,EAACC,IAAgBJ,EAAAA,EAAAA,WAAS,IACrC,EAACK,EAAY,EAACC,IAAkBN,EAAAA,EAAAA,WAAS,IACzC,EAACO,EAAe,EAACC,IAAqBR,EAAAA,EAAAA,UAAS,OAE/C,EAACS,EAAU,EAACC,IAAgBV,EAAAA,EAAAA,WAAS,GACrCW,EAAWC,EAAAA,YAwCjB,OACIA,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAG,CACAC,MAAM,eAEVF,EAAAA,cAAA,YACIA,EAAAA,cAAA,QAAMG,KAAK,0DAA0DC,IAAI,eAGrEJ,EAAAA,cAAA,OAAKK,UAAU,qBACXL,EAAAA,cAAA,OAAKK,UAAU,gBACXL,EAAAA,cAAA,MAAIK,UAAU,wBACTd,EAEGS,EAAAA,cAAA,OAAKK,UAAU,SAEXL,EAAAA,cAAA,SAAG,0BAEHA,EAAAA,cAAA,SAAG,wBAIPA,EAAAA,cAAA,OAAKK,UAAU,SAAQ,IAACL,EAAAA,cAAA,SAAId,KAKpCc,EAAAA,cAAA,OAAKK,UAAU,QACVL,EAAAA,cAAA,SAAOM,IAAKP,EAAUQ,IAAKC,EAAAA,OAIxCR,EAAAA,cAAA,OAAKK,UAAU,qCACXL,EAAAA,cAAA,UAAQK,UAAS,eAAgBZ,EAAc,UAAY,IAAMgB,GAAG,OAChET,EAAAA,cAAA,QAAMU,QA/DCC,KAI3B,GAHAjB,GAAgBD,GAChBD,GAAa,GAEM,GAAfC,EAAsB,CACtB,MAAMmB,EAAc,IAAIC,OAAOC,wBAE/BF,EAAYG,KAAO,QACnBH,EAAYI,YAAa,EACzBJ,EAAYK,gBAAiB,EAE7BrB,EAAkBgB,GAGlBA,EAAYM,SAAWC,IACnB,MAAMC,EAAcD,EAAMC,YACpB/B,EAAa8B,EAAME,QAAQD,GAAa,GAAG/B,WACjDC,EAAcD,GACdF,EAAYE,EAAW,EAE3BuB,EAAYU,OAChB,MACIxB,EAAaD,GACbE,EAASwB,QAAQC,OACjB7B,EAAe8B,MACnB,EAsC2DpB,UAAU,kBAAiB,UAOnF,C,uBC9FX,IAAe,IAA0B,iD","sources":["webpack://ai-financial-awareness/./src/pages/voice-chat.js","webpack://ai-financial-awareness/./src/data/recommendations/british/one.mp3"],"sourcesContent":["import React, { useState } from \"react\";\nimport Seo from \"../components/Seo/seo\";\nimport audioSrc from \"../data/recommendations/british/one.mp3\";\n\n\nconst VoiceChat = () => {\n    const [micState, setMicState] = useState('');\n    const [transcript, setTranscript] = useState(\"\");\n    const [showIntro, setshowIntro] = useState(true);\n    const [isListening, setIsListening] = useState(false);\n    const [recognitionApp, setrecognitionApp] = useState(null);\n\n    const [isPlaying, setIsPlaying] = useState(false);\n    const audioRef = React.createRef();\n\n\n    const togglePlay = () => {\n        if (isPlaying) {\n          audioRef.current.pause();\n        } else {\n        }\n        \n      };\n\n    const startSpeechRecognition = () => {\n        setIsListening(!isListening);\n        setshowIntro(false);\n        \n        if (isListening == false) {\n            const recognition = new window.webkitSpeechRecognition(); // Create SpeechRecognition instance\n\n            recognition.lang = \"en-US\"; // Set recognition language\n            recognition.continuous = true;\n            recognition.interimResults = true\n\n            setrecognitionApp(recognition);\n            // Event listener for when speech is recognized\n\n            recognition.onresult = event => {\n                const resultIndex = event.resultIndex;\n                const transcript = event.results[resultIndex][0].transcript;\n                setTranscript(transcript);\n                setMicState(transcript)\n            };\n            recognition.start();\n        } else {\n            setIsPlaying(isPlaying);\n            audioRef.current.play();\n            recognitionApp.stop();\n        }\n        // Start speech recognition\n    };\n\n    return (\n        <>\n            <Seo\n                title=\"Talk to AI\"\n            />\n            <main>\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n                </link>\n\n                    <div className=\"content-container\">\n                        <div className=\"text-center \">\n                            <h3 className=\"listening text-white\">\n                                {showIntro\n                                    ?\n                                    <div className=\"pt-20\">\n\n                                        <p>Hey, Masekate Mokotjo </p>\n\n                                        <p>How can I help you?</p>\n\n                                    </div>\n                                    :\n                                    <div className=\"pt-10\"> <p>{micState}</p>\n\n                                    </div>                                     \n                                }\n                            </h3>\n                            <div className=\"wave\">\n                                 <audio ref={audioRef} src={audioSrc}></audio>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center \">\n                        <button className={`mic-toggle ${isListening ? 'clicked' : ''}`} id=\"mic\">\n                            <span onClick={startSpeechRecognition} className=\"material-icons\">mic</span>\n                        </button>\n\n                    </div>\n\n            </main>\n\n        </>\n    )\n}\n\n\nexport default VoiceChat;","export default __webpack_public_path__ + \"static/one-9d1948f78bf220db3d1033f2e63e4ad8.mp3\";"],"names":["VoiceChat","micState","setMicState","useState","transcript","setTranscript","showIntro","setshowIntro","isListening","setIsListening","recognitionApp","setrecognitionApp","isPlaying","setIsPlaying","audioRef","React","Seo","title","href","rel","className","ref","src","audioSrc","id","onClick","startSpeechRecognition","recognition","window","webkitSpeechRecognition","lang","continuous","interimResults","onresult","event","resultIndex","results","start","current","play","stop"],"sourceRoot":""}