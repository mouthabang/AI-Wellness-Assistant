{"version":3,"file":"component---src-pages-voice-chat-js-6a1ce2409fd0c4329f3e.js","mappings":"oKAuFA,UAnFkBA,KACd,MAAM,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,KACnC,EAACC,EAAW,EAACC,IAAiBF,EAAAA,EAAAA,UAAS,KACvC,EAACG,EAAU,EAACC,IAAgBJ,EAAAA,EAAAA,WAAS,IACrC,EAACK,EAAY,EAACC,IAAkBN,EAAAA,EAAAA,WAAS,IACzC,EAACO,EAAe,EAACC,IAAqBR,EAAAA,EAAAA,UAAS,MA6BrD,OACIS,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAG,CACAC,MAAM,eAEVF,EAAAA,cAAA,YACIA,EAAAA,cAAA,QAAMG,KAAK,0DAA0DC,IAAI,eAGzEJ,EAAAA,cAAA,OAAKK,UAAU,OACXL,EAAAA,cAAA,OAAKK,UAAU,qBACXL,EAAAA,cAAA,OAAKK,UAAU,gBACXL,EAAAA,cAAA,MAAIK,UAAU,wBACTX,EAEDM,EAAAA,cAAA,OAAKK,UAAU,SAEfL,EAAAA,cAAA,SAAG,0BAEHA,EAAAA,cAAA,SAAG,wBAIHA,EAAAA,cAAA,OAAKK,UAAU,SAAQ,IAACL,EAAAA,cAAA,SAAIX,OASxCW,EAAAA,cAAA,OAAKK,UAAU,qCACXL,EAAAA,cAAA,UAAQK,UAAS,eAAgBT,EAAc,UAAY,IAAMU,GAAG,OAChEN,EAAAA,cAAA,QAAMO,QA7DCC,KAI3B,GAHAX,GAAgBD,GAChBD,GAAa,GAEM,GAAfC,EAAsB,CAC1B,MAAMa,EAAc,IAAIC,OAAOC,wBAE/BF,EAAYG,KAAO,QACnBH,EAAYI,YAAa,EACzBJ,EAAYK,gBAAiB,EAE7Bf,EAAkBU,GAGlBA,EAAYM,SAAWC,IACnB,MAAMC,EAAcD,EAAMC,YACpBzB,EAAawB,EAAME,QAAQD,GAAa,GAAGzB,WACjDC,EAAcD,GACdF,EAAYE,EAAW,EAEvBiB,EAAYU,OAChB,MACIrB,EAAesB,MACnB,EAsC2Df,UAAU,kBAAiB,WAUnF,C","sources":["webpack://ai-financial-awareness/./src/pages/voice-chat.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Seo from \"../components/Seo/seo\";\n\n\nconst VoiceChat = () => {\n    const [micState, setMicState] = useState('');\n    const [transcript, setTranscript] = useState(\"\");\n    const [showIntro, setshowIntro] = useState(true);\n    const [isListening, setIsListening] = useState(false);\n    const [recognitionApp, setrecognitionApp] = useState(null);\n\n    const startSpeechRecognition = () => {\n        setIsListening(!isListening);\n        setshowIntro(false);\n       \n        if (isListening == false) {\n        const recognition = new window.webkitSpeechRecognition(); // Create SpeechRecognition instance\n        \n        recognition.lang = \"en-US\"; // Set recognition language\n        recognition.continuous = true;\n        recognition.interimResults = true\n\n        setrecognitionApp(recognition);\n        // Event listener for when speech is recognized\n        \n        recognition.onresult = event => {\n            const resultIndex = event.resultIndex;\n            const transcript = event.results[resultIndex][0].transcript;\n            setTranscript(transcript);\n            setMicState(transcript)\n        }; \n            recognition.start();\n        } else { \n            recognitionApp.stop();\n        }\n        // Start speech recognition\n    };\n\n    return (\n        <>\n            <Seo\n                title=\"Talk to AI\"\n            />\n            <main>\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n                </link>\n\n                <div className=\"p-5\">\n                    <div className=\"content-container\">\n                        <div className=\"text-center \">\n                            <h3 className=\"listening text-white\">\n                                {showIntro\n                                ?  \n                                <div className=\"pt-20\">\n\n                                <p>Hey, Masekate Mokotjo </p>\n\n                                <p>How can I help you?</p>\n\n                                </div>\n                                :\n                                <div className=\"pt-20\"> <p>{micState}</p>\n                                </div>\n                              \n                                }\n\n                               \n                            </h3>\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center \">\n                        <button className={`mic-toggle ${isListening ? 'clicked' : ''}`} id=\"mic\">\n                            <span onClick={startSpeechRecognition} className=\"material-icons\">mic</span>\n                        </button>\n\n                    </div>\n\n\n                </div>\n\n            </main>\n\n        </>\n    )\n}\n\n\nexport default VoiceChat;"],"names":["VoiceChat","micState","setMicState","useState","transcript","setTranscript","showIntro","setshowIntro","isListening","setIsListening","recognitionApp","setrecognitionApp","React","Seo","title","href","rel","className","id","onClick","startSpeechRecognition","recognition","window","webkitSpeechRecognition","lang","continuous","interimResults","onresult","event","resultIndex","results","start","stop"],"sourceRoot":""}