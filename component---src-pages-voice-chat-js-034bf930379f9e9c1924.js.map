{"version":3,"file":"component---src-pages-voice-chat-js-034bf930379f9e9c1924.js","mappings":";yHAIS,SAAWA,EAASC,EAAgBC,EAAiBC,GAAgB,aAE1E,IAAIC,EAAsD,SAA6DC,EAAOC,EAASC,GACrI,MAAO,CACLD,QAASA,EACTC,WAAYA,EACZC,KAAM,yBACNH,MAAOA,EAEX,EAEII,EAAiD,SAAwDJ,EAAOC,EAASC,GAC3H,MAAO,CACLD,QAASA,EACTC,WAAYA,EACZC,KAAM,oBACNH,MAAOA,EAEX,EAEIK,EAAgC,SAAuCL,EAAOM,GAChF,MAAO,CACLA,UAAWA,EACXH,KAAM,WACNH,MAAOA,EAEX,EAEIO,EAAqC,SAA4CC,EAAQF,EAAWG,GACtG,MAAO,CACLA,SAAUA,EACVH,UAAWA,EACXH,KAAM,gBACNK,OAAQA,EAEZ,EAEIE,EAAuB,SAA8BC,EAAMC,EAAkBC,GAC/E,IAAIP,EAAYO,EAAKP,UACnBQ,EAASD,EAAKC,OACdC,EAAeF,EAAKE,aACtB,OAAOD,GAAUF,EAAmBE,GAAUE,KAAKC,KAAKX,EAAYK,GAAQI,EAC9E,EAEIG,EAA0C,SAAiDC,GAC7F,MAAgC,2BAAzBA,EAAgBhB,IACzB,EAEIiB,EAAqC,SAA4CD,GACnF,MAAgC,sBAAzBA,EAAgBhB,IACzB,EAEIkB,EAAkC,SAAyCF,GAC7E,OAAOD,EAAwCC,IAAoBC,EAAmCD,EACxG,EAEIG,EAA4B,SAAmCH,GACjE,MAAgC,aAAzBA,EAAgBhB,IACzB,EAEIoB,EAAiC,SAAwCJ,GAC3E,MAAgC,kBAAzBA,EAAgBhB,IACzB,EAEIqB,EAAyC,SAASA,EAAuCC,EAAkBC,EAAOf,EAAMgB,GAC1H,IAAIR,EAAkBM,EAAiBC,GACvC,YAA2BE,IAApBT,EAAgCQ,EAAeN,EAAgCF,IAAoBG,EAA0BH,GAAmBA,EAAgBnB,MAAQuB,EAA+BJ,GAAmBA,EAAgBX,OAAOW,EAAgBX,OAAOqB,OAAS,GAAKnB,EAAqBC,EAAMa,EAAuCC,EAAkBC,EAAQ,EAAGP,EAAgBb,UAAWqB,GAAeR,EACxa,EAEIW,EAA8C,SAAqDL,EAAkBC,EAAOK,EAAwBC,EAAqBL,GAC3K,YAAkCC,IAA3BG,EAAuC,CAACC,EAAoB9B,WAAYyB,GAAgBN,EAAgCU,GAA0B,CAACA,EAAuB9B,QAAS8B,EAAuB/B,OAASsB,EAA0BS,GAA0B,CAACA,EAAuBzB,UAAWyB,EAAuB/B,OAASuB,EAA+BQ,GAA0B,CAACA,EAAuBzB,UAAYyB,EAAuBtB,SAAUsB,EAAuBvB,OAAOuB,EAAuBvB,OAAOqB,OAAS,IAAM,CAACE,EAAuBzB,UAAWkB,EAAuCC,EAAkBC,EAAQ,EAAGK,EAAuBzB,UAAWqB,GACrqB,EAEIM,EAAiC,SAAwCd,GAC3E,MAAgC,kBAAzBA,EAAgBhB,IACzB,EAEI+B,EAAyC,SAAgDf,GAC3F,MAAgC,0BAAzBA,EAAgBhB,IACzB,EAEIgC,EAAe,SAAsBhB,GACvC,OAAIc,EAA+Bd,IAAoBe,EAAuCf,GACrFA,EAAgBiB,WAErBlB,EAAwCC,IAAoBC,EAAmCD,GAC1FA,EAAgBlB,QAElBkB,EAAgBb,SACzB,EAEI+B,EAAgC,SAAuC1B,EAAML,EAAWM,EAAkBC,GAC5G,IAAIZ,EAAUY,EAAKZ,QACjBD,EAAQa,EAAKb,MACf,OAAIY,IAAqBZ,EAChBA,EAEL,EAAIY,GAAoB,EAAIZ,GAASY,EAAmB,GAAKZ,EAAQ,EAChEY,EAAmBI,KAAKsB,IAAItC,EAAQY,GAAmBD,EAAOL,IAAcL,EAAUK,IAExF,CACT,EAEIiC,EAA2B,SAAkC5B,EAAML,EAAWM,EAAkBC,GAGlG,OAAOD,GAAoBD,EAAOL,IAFpBO,EAAKZ,QAEuCK,IADhDO,EAAKb,MACiEY,EAClF,EAEI4B,EAAmB,SAA0BhC,EAAQiC,GACvD,IAAIC,EAAa1B,KAAK2B,MAAMF,GACxBG,EAAa5B,KAAK6B,KAAKJ,GAC3B,OAAIC,IAAeE,EACVpC,EAAOkC,IAER,GAAKD,EAAiBC,IAAelC,EAAOkC,IAAe,GAAKE,EAAaH,IAAmBjC,EAAOoC,EACjH,EAEIE,EAA2B,SAAkCnC,EAAME,GACrE,IAAIJ,EAAWI,EAAKJ,SAClBH,EAAYO,EAAKP,UACjBE,EAASK,EAAKL,OACZiC,GAAkB9B,EAAOL,GAAaG,GAAYD,EAAOqB,OAAS,GACtE,OAAOW,EAAiBhC,EAAQiC,EAClC,EAEIM,EAA6B,SAAoC5B,GACnE,MAAgC,cAAzBA,EAAgBhB,IACzB,EAEI6C,EAAmC,SAAUC,GAC/C,SAASD,EAAoBrB,GAC3B9B,EAAgBqD,KAAMF,GACtBE,KAAKC,kBAAoB,GACzBD,KAAKE,YAAc,EACnBF,KAAKG,cAAgB1B,CACvB,CAkIA,OAjIA7B,EAAakD,EAAqB,CAAC,CACjCM,IAAKL,EACLjD,MAAO,WACL,OAAOkD,KAAKC,kBAAkBI,OAAOC,WACvC,GACC,CACDF,IAAK,MACLtD,MAAO,SAAamB,GAClB,IAAIsC,EAAYtB,EAAahB,GAC7B,GAAIc,EAA+Bd,IAAoBe,EAAuCf,GAAkB,CAC9G,IAAIO,EAAQwB,KAAKC,kBAAkBO,WAAU,SAAU3B,GACrD,OAAIG,EAAuCf,IAAoBI,EAA+BQ,GACrFA,EAAuBzB,UAAYyB,EAAuBtB,UAAYgD,EAExEtB,EAAaJ,IAA2B0B,CACjD,IACIE,EAAyBT,KAAKC,kBAAkBzB,GAIpD,IAHe,IAAXA,IACFwB,KAAKC,kBAAoBD,KAAKC,kBAAkBS,MAAM,EAAGlC,IAEvDO,EAA+Bd,GAAkB,CACnD,IAAI0C,EAAsBX,KAAKC,kBAAkBD,KAAKC,kBAAkBtB,OAAS,GACjF,QAA+BD,IAA3B+B,GAAwCtC,EAAgCsC,GAAyB,CACnG,QAA4B/B,IAAxBiC,GAAqCd,EAA2Bc,GAClE,MAAM,IAAIC,MAAM,mCAElB,IAAIxD,OAAoCsB,IAAxBiC,EAAoCF,EAAuBzD,WAAaqB,EAA+BsC,GAAuBA,EAAoBvD,UAAYuD,EAAoBpD,SAAW0B,EAAa0B,GACtNE,OAAqCnC,IAAxBiC,EAAoCX,KAAKG,cAAgB9B,EAA+BsC,GAAuBA,EAAoBrD,OAAOqD,EAAoBrD,OAAOqB,OAAS,GAAKgC,EAAoB7D,MACpNA,EAAQkB,EAAwCyC,GAA0BtB,EAA8BoB,EAAWnD,EAAWyD,EAAYJ,GAA0BpB,EAAyBkB,EAAWnD,EAAWyD,EAAYJ,GAC/NK,EAA2B9C,EAAwCyC,GAA0B5D,EAAoDC,EAAOyD,EAAWP,KAAKE,aAAehD,EAA+CJ,EAAOyD,EAAWP,KAAKE,aACjQF,KAAKC,kBAAkBc,KAAKD,EAC9B,CAIA,QAH4BpC,IAAxBiC,GAAqCd,EAA2Bc,IAClEX,KAAKC,kBAAkBc,KAAK5D,EAA8B6C,KAAKgB,SAAST,GAAYA,SAE1D7B,IAAxBiC,GAAqCtC,EAA+BsC,IAAwBA,EAAoBvD,UAAYuD,EAAoBpD,SAAWgD,EAAW,CACxK,IAAIhD,EAAWgD,EAAYI,EAAoBvD,UAC3C6D,GAASN,EAAoBrD,OAAOqB,OAAS,GAAKgC,EAAoBpD,SACtEoB,EAASb,KAAKoD,IAAI,EAAG,EAAIpD,KAAK6B,KAAKpC,EAAW0D,IAC9CE,EAAW5D,GAAYoB,EAAS,GAAKsC,EACrC3D,EAASqD,EAAoBrD,OAAOoD,MAAM,EAAG/B,GACjD,GAAIwC,EAAW,EACb,IAAK,IAAIC,EAAI,EAAGA,EAAIzC,EAAQyC,GAAK,EAAG,CAClC,IAAIC,EAASF,EAAWC,EAAI,EAC5B9D,EAAO8D,GAAKT,EAAoBrD,OAAO8D,EAAI,IAAM,EAAIC,GAAUV,EAAoBrD,OAAO8D,GAAKC,CACjG,CAEFrB,KAAKC,kBAAkBD,KAAKC,kBAAkBtB,OAAS,GAAKtB,EAAmCC,EAAQqD,EAAoBvD,UAAWG,EACxI,CACF,CACF,KAAO,CACL,IAAI+D,EAAStB,KAAKC,kBAAkBO,WAAU,SAAU3B,GACtD,OAAOI,EAAaJ,GAA0B0B,CAChD,IACIgB,GAAsC,IAAZD,EAAgBtB,KAAKC,kBAAkBD,KAAKC,kBAAkBtB,OAAS,GAAKqB,KAAKC,kBAAkBqB,EAAS,GAC1I,QAAgC5C,IAA5B6C,GAAyClD,EAA+BkD,IAA4BtC,EAAasC,GAA2BA,EAAwBhE,SAAWgD,EACjL,OAAO,EAET,IAAIiB,EAA4BxD,EAAwCC,GAAmBpB,EAAoDoB,EAAgBnB,MAAOmB,EAAgBlB,QAASiD,KAAKE,aAAehC,EAAmCD,GAAmBf,EAA+Ce,EAAgBnB,MAAOyD,EAAWP,KAAKE,aAAejC,EAC9W,IAAgB,IAAZqD,EACFtB,KAAKC,kBAAkBc,KAAKS,OACvB,CACL,GAAInD,EAA+BJ,IAAoBsC,EAAYtC,EAAgBV,SAAW0B,EAAae,KAAKC,kBAAkBqB,IAChI,OAAO,EAETtB,KAAKC,kBAAkBwB,OAAOH,EAAQ,EAAGE,EAC3C,CACF,CACA,OAAO,CACT,GACC,CACDpB,IAAK,QACLtD,MAAO,SAAeW,GACpB,IAAIe,EAAQwB,KAAKC,kBAAkBO,WAAU,SAAU3B,GACrD,OAAOI,EAAaJ,GAA0BpB,CAChD,IACA,GAAIe,EAAQ,EAAG,CACb,IAAIkD,EAA4B1B,KAAKC,kBAAkBS,MAAMlC,EAAQ,GACjEmD,EAAgCD,EAA0B,GAC1D7B,EAA2B8B,IAC7BD,EAA0BE,QAAQzE,EAA8BmB,EAAuC0B,KAAKC,kBAAmBzB,EAAQ,EAAGmD,EAA8BvE,UAAW4C,KAAKG,eAAgBwB,EAA8BvE,YAExO4C,KAAKC,kBAAoByB,CAC3B,CACF,GACC,CACDtB,IAAK,WACLtD,MAAO,SAAkBW,GACvB,GAAsC,IAAlCuC,KAAKC,kBAAkBtB,OACzB,OAAOqB,KAAKG,cAEd,IAAI0B,EAAmB7B,KAAKC,kBAAkBO,WAAU,SAAUvC,GAChE,OAAOgB,EAAahB,GAAmBR,CACzC,IACIqB,EAAsBkB,KAAKC,kBAAkB4B,GAC7CC,IAA6C,IAAtBD,EAA0B7B,KAAKC,kBAAkBtB,OAASkD,GAAoB,EACrGhD,EAAyBmB,KAAKC,kBAAkB6B,GACpD,QAA+BpD,IAA3BG,GAAwCgB,EAA2BhB,UAAoDH,IAAxBI,IAAsCX,EAAgCW,IAAwBA,EAAoB9B,WAAaS,GAChO,OAAOD,EAAqBC,EAAMa,EAAuC0B,KAAKC,kBAAmB6B,EAAsB,EAAGjD,EAAuBzB,UAAW4C,KAAKG,eAAgBtB,GAEnL,QAA+BH,IAA3BG,GAAwCT,EAA0BS,UAAoDH,IAAxBI,IAAsCX,EAAgCW,IACtK,OAAOD,EAAuB/B,MAEhC,QAA+B4B,IAA3BG,GAAwCR,EAA+BQ,UAAoDH,IAAxBI,IAAsCX,EAAgCW,IAAwBD,EAAuBzB,UAAYyB,EAAuBtB,SAAWE,GACxQ,OAAIA,EAAOoB,EAAuBzB,UAAYyB,EAAuBtB,SAC5DqC,EAAyBnC,EAAMoB,GAEjCA,EAAuBvB,OAAOuB,EAAuBvB,OAAOqB,OAAS,GAE9E,QAA+BD,IAA3BG,GAAwCV,EAAgCU,UAAoDH,IAAxBI,IAAsCX,EAAgCW,IAC5K,OAAOD,EAAuB/B,MAEhC,QAA4B4B,IAAxBI,GAAqCd,EAAwCc,GAAsB,CACrG,IAAIiD,EAAwBnD,EAA4CoB,KAAKC,kBAAmB6B,EAAqBjD,EAAwBC,EAAqBkB,KAAKG,eACrK6B,EAAyBtF,EAAeqF,EAAuB,GAC/D3E,EAAY4E,EAAuB,GACnClF,EAAQkF,EAAuB,GACjC,OAAO7C,EAA8B1B,EAAML,EAAWN,EAAOgC,EAC/D,CACA,QAA4BJ,IAAxBI,GAAqCZ,EAAmCY,GAAsB,CAChG,IAAImD,EAAyBrD,EAA4CoB,KAAKC,kBAAmB6B,EAAqBjD,EAAwBC,EAAqBkB,KAAKG,eACtK+B,EAAyBxF,EAAeuF,EAAwB,GAChEE,EAAaD,EAAuB,GACpCE,EAASF,EAAuB,GAClC,OAAO7C,EAAyB5B,EAAM0E,EAAYC,EAAQtD,EAC5D,CACA,OAAOkB,KAAKG,aACd,KAEKL,CACT,CAzIuC,CAyIrCO,OAAOC,UAEL+B,EAAqC,SAA4CnD,GACnF,MAAO,CACLA,WAAYA,EACZjC,KAAM,gBAEV,EAEIqF,EAA6C,SAAoDpD,GACnG,MAAO,CACLA,WAAYA,EACZjC,KAAM,wBAEV,EAEIsF,EAA8C,SAAqDzF,EAAOC,GAC5G,MAAO,CACLA,QAASA,EACTE,KAAM,yBACNH,MAAOA,EAEX,EAEI0F,EAAyC,SAAgD1F,EAAOC,GAClG,MAAO,CACLA,QAASA,EACTE,KAAM,oBACNH,MAAOA,EAEX,EAEI2F,EAAiC,SAAwC7E,EAAQR,EAAWS,GAC9F,MAAO,CACLT,UAAWA,EACXQ,OAAQA,EACRC,aAAcA,EACdZ,KAAM,YAEV,EAEAR,EAAQqD,oBAAsBA,EAC9BrD,EAAQ4F,mCAAqCA,EAC7C5F,EAAQ6F,2CAA6CA,EACrD7F,EAAQ8F,4CAA8CA,EACtD9F,EAAQ+F,uCAAyCA,EACjD/F,EAAQgG,+BAAiCA,EACzChG,EAAQU,8BAAgCA,EACxCV,EAAQY,mCAAqCA,CAEhD,CAhUkEqF,CAAQjG,EAAS,EAAQ,MAAyC,EAAQ,MAA0C,EAAQ,wFCDxL,MCAMkG,EAAW,IAAIC,QCStBC,EAAmB,IAAID,QAUhBE,EAAgBC,IACzB,MAAMC,GCnBiCC,EDmBqBF,ECnBW,IACpEE,EACHC,QAAS,EAAGC,UACDC,UACH,MAAM,MAAEC,EAAK,MAAEC,GAAU,IAAIC,eACvBC,QAAeL,EAAK,UAAW,CAAEM,KAAMJ,GAAS,CAACA,IAEvD,OADAV,EAASe,IAAIJ,EAAOE,GACbF,CAAK,EAGpBK,WAAY,EAAGR,UACJC,MAAOK,IACV,MAAMD,EAASb,EAASiB,IAAIH,GAC5B,QAAe/E,IAAX8E,EACA,MAAM,IAAI5C,MAAM,0CAEduC,EAAK,aAAc,CAAEK,UAAS,EAG5CK,YAAa,EAAGV,UACL,IAAMA,EAAK,iBApBgB,IAACF,EDoBvC,OAAQa,IACJ,MAAMC,EAZqB,CAACD,IAChC,GAAIjB,EAAiBmB,IAAIF,GAErB,OAAOjB,EAAiBe,IAAIE,GAEhC,MAAMC,EAAkB,IAAIE,IAE5B,OADApB,EAAiBa,IAAII,EAAQC,GACtBA,CAAe,EAKMG,CAA2BJ,GACnDA,EAAOK,iBAAiB,WAAW,EAAIC,KAAMC,MACzC,MAAM,GAAEC,GAAOD,EACf,GAAW,OAAPC,GAAeP,EAAgBC,IAAIM,GAAK,CACxC,MAAM,OAAEC,EAAM,QAAEC,GAAYT,EAAgBH,IAAIU,GAChDP,EAAgBU,OAAOH,QACD5F,IAAlB2F,EAAQK,MACRF,EAAQH,EAAQM,QAGhBJ,EAAO,IAAI3D,MAAMyD,EAAQK,MAAML,SAEvC,CACH,IFnCoB,CAACP,GACK,mBAAjBA,EAAOc,MEmCbC,CAAcf,IACdA,EAAOc,QAEX,MAAMzB,EAAO,CAAC2B,EAAQC,EAAS,KAAMC,EAAgB,KAC1C,IAAIC,SAAQ,CAACT,EAASD,KACzB,MAAMD,GAAK,IAAAY,sBAAqBnB,GAChCA,EAAgBL,IAAIY,EAAI,CAAEC,SAAQC,YACnB,OAAXO,EACAjB,EAAOqB,YAAY,CAAEb,KAAIQ,UAAUE,GAGnClB,EAAOqB,YAAY,CAAEb,KAAIQ,SAAQC,UAAUC,EAC/C,IAGFI,EAAS,CAACN,EAAQC,EAAQC,EAAgB,MAC5ClB,EAAOqB,YAAY,CAAEb,GAAI,KAAMQ,SAAQC,UAAUC,EAAc,EAEnE,IAAIK,EAAY,CAAC,EACjB,IAAK,MAAOjF,EAAKkF,KAAYC,OAAOC,QAAQxC,GACxCqC,EAAY,IAAKA,EAAW,CAACjF,GAAMkF,EAAQ,CAAEnC,OAAMiC,YAEvD,MAAO,IAAKC,EAAW,CAC1B,yBEvDI,SAAW5I,EAASgJ,EAAoBC,EAASC,GAAqB,aAE3E,IAAIC,EAAiB,SAAwBC,EAAMC,GACjD,YAAkBpH,IAAdoH,EACKD,EAEFC,EAAUC,QAAO,SAAUC,EAAcC,GAC9C,GAAiB,eAAbA,EAA2B,CAC7B,IAAIC,EAAOF,EAAaG,OAAO,GAAGC,cAC9BC,EAAOL,EAAatF,MAAM,GAC9B,MAAO,GAAG4F,OAAOJ,GAAMI,OAAOD,EAChC,CACA,MAAiB,YAAbJ,EACKP,EAAQM,GAEA,6BAAbC,EACK,GAAGK,OAAOX,EAAkBK,GAAe,KAAKM,OAAON,GAEzDA,CACT,GAAGH,EACL,EACIU,EAAa,SAAoBC,GACnC,IAAIC,EAAaD,EAASX,KAAOW,EAASV,UAAUY,KAAI,SAAUT,GAChE,MAAO,MAAMK,OAAOL,EAAU,SAChC,IAAGU,KAAK,IACR,OAAO,IAAIC,OAAO,SAASN,OAAOG,EAAY,KAAM,IACtD,EACII,EAAkB,SAAyBC,EAAQC,GAIrD,IAHA,IAAIC,EAAkB,gCAClBC,EAAY,GACZC,EAAmBF,EAAgBG,KAAKL,GAChB,OAArBI,GAA2B,CAChC,IAAIV,EAAW,CACbV,UAAW,GACXD,KAAMqB,EAAiB,IAEzB,QAA4BxI,IAAxBwI,EAAiB,GAGnB,IAFA,IAAIE,EAAiB,eACjBC,EAAuBD,EAAeD,KAAKD,EAAiB,IAChC,OAAzBG,GACLb,EAASV,UAAU/E,KAAKsG,EAAqB,GAAG3G,MAAM,GAAI,IAC1D2G,EAAuBD,EAAeD,KAAKD,EAAiB,IAGhED,EAAUlG,KAAKyF,GACfU,EAAmBF,EAAgBG,KAAKL,EAC1C,CACA,IAAIQ,EAAmBL,EAAUlB,QAAO,SAAUwB,EAAOf,GACvD,OAAOe,EAAMb,KAAI,SAAUc,GACzB,MAAoB,iBAATA,EACFA,EAAKC,MAAMlB,EAAWC,IAAWT,QAAO,SAAU2B,EAAMC,EAAKnJ,GAClE,OAAc,IAAVA,EACK,CAACmJ,GAENnB,EAASX,QAAQkB,EACZ,GAAGT,OAAOb,EAAmBiC,GAAO,CAAC9B,EAAemB,EAAWP,EAASX,MAAOW,EAASV,WAAY6B,IAEtG,GAAGrB,OAAOb,EAAmBiC,GAAO,CAAC,SAAUE,GACpD,OAAOhC,EAAegC,EAAOpB,EAASX,MAAOW,EAASV,UACxD,EAAG6B,GACL,GAAG,IAEE,CAACH,EACV,IAAGzB,QAAO,SAAU2B,EAAMF,GACxB,MAAO,GAAGlB,OAAOb,EAAmBiC,GAAOjC,EAAmB+B,GAChE,GAAG,GACL,GAAG,CAACV,IACJ,OAAO,SAAUe,GACf,OAAOP,EAAiBvB,QAAO,SAAU+B,EAAeC,GACtD,MACS,GAAGzB,OAAOb,EAAmBqC,GADP,iBAApBC,EAC2C,CAACA,GAEH,CAACA,EAAgBF,IACvE,GAAG,IAAIlB,KAAK,GACd,CACF,EACIqB,EAAU,SAAiBC,GAC7B,IAAIC,EAAkBC,UAAUxJ,OAAS,QAAsBD,IAAjByJ,UAAU,GAAmBA,UAAU,GAAK,CAAC,EACvFC,OAA+B1J,IAAlBuJ,EAASI,UAAqB3J,EAAYmI,EAAgBoB,EAASI,KAAMH,GACtFI,OAAqC5J,IAArBuJ,EAAS5D,aAAwB3F,EAAYmI,EAAgBoB,EAAS5D,QAAS6D,GACnG,SAASK,IACP,IAAIC,EAA2BL,UAAUxJ,OAAS,QAAsBD,IAAjByJ,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAChGM,EAAgBN,UAAUxJ,OAAS,EAAIwJ,UAAU,QAAKzJ,EAEtDf,OADuCe,IAAlB+J,IAAgCD,aAAoC5H,YAA2ClC,IAAlC8J,EAAyBH,MAAkE,cAA5CG,EAAyBH,KAAK3H,OAAO,IAC1J,CAC5BgI,MAAOF,EACPX,kBAAmB,CAAC,GAClB,CACFa,MAAOD,EACPZ,kBAAmBW,GAErBE,EAAQ/K,EAAK+K,MACbb,EAAoBlK,EAAKkK,kBACvBc,OAAwBjK,IAAlB4J,EAA8B,IAAI1H,MAAU,IAAIA,MAAM0H,EAAcT,IAU9E,OATc,OAAVa,IACFC,EAAID,MAAQA,QAEKhK,IAAf0J,IACFO,EAAIN,KAAOD,EAAWP,SAEAnJ,IAApBuJ,EAASW,SACXD,EAAIC,OAASX,EAASW,QAEjBD,CACT,CACA,OAAOJ,CACT,EAEA9L,EAAQuL,QAAUA,CAErB,CAjHkEtF,CAAQjG,EAAS,EAAQ,MAA6C,EAAQ,MAAY,EAAQ,sCCQrKoM,EAAOpM,QAAU,CAACqM,EAAKC,KACrB,GAAmB,iBAARD,EAAkB,MAAM,IAAIE,UAAU,qBACjD,OAAOF,EAAIG,OACRC,QAAQ,kBAAmB,SAC3BA,QAAQ,OAAOC,GAAK,QAAQC,KAAKD,GAAKA,EAAI,MAC1CD,QAAQ,WAAY,IACpBA,QAAQ,UAAUC,GAAKJ,GAAWA,EAAQM,SAAW,IAAMF,IAC3DG,aAAa,4OCTX,MAAMC,GAAO,aAAa,CAC7BC,aAAc,EAAGrG,UACN,IAAMA,EAAK,gBAEtBsG,OAAQ,EAAGtG,UACA,CAACuG,EAAaC,IACVxG,EAAK,SAAU,CAAEuG,cAAaC,cAG7CC,OAAQ,EAAGzG,UACAC,MAAOsG,EAAaG,EAAYC,WAC7B3G,EAAK,SAAU,CAAEuG,cAAaG,aAAYC,eAAeA,EAAYpD,KAAI,EAAGqD,YAAaA,IAAQ,IChB7GC,EAAO,IAAIC,KAAK,CCDA,22JDCU,CAAEhN,KAAM,0CAClCiN,EAAMC,IAAIC,gBAAgBJ,GAC1BK,EDkBc,CAACH,IACjB,MAAMI,EAAS,IAAIC,OAAOL,GAC1B,OAAOX,EAAKe,EAAO,ECpBmBE,CAAKN,GAClCV,EAAea,EAAkCb,aACjDtG,EAAUmH,EAAkCnH,QAC5CS,EAAa0G,EAAkC1G,WAC/C8F,EAASY,EAAkCZ,OAC3C5F,EAAcwG,EAAkCxG,YAChD+F,EAASS,EAAkCT,OACxDO,IAAIM,gBAAgBP,mLEHpB,MAAMQ,EAAa,IAAIC,IACVpB,GAAO,OAAa,CAC7BE,OAAQ,EAAGtG,UACAC,MAAOwH,EAAWjB,KACrB,MAAMkB,QAAqB1H,EAAK,SAAU,CAAEyH,YAAWjB,cAEvD,OADAe,EAAWjG,OAAOmG,GACXC,CAAY,EAG3BC,YAAa,EAAG3H,UACLC,MAAO2H,EAAUlB,KACpB,MAAMe,GAAY,IAAAI,iBAAgBN,GAElC,MAAO,CAAEE,YAAWnH,WADDN,EAAK,cAAe,CAAEyH,YAAWG,WAAUlB,eACpC,EAGlCoB,SAAU,EAAG9H,UACDM,GACGN,EAAK,WAAY,CAAEM,QAAQ,CAACA,MCxBzCuG,EAAO,IAAIC,KAAK,CCDA,qhLDCU,CAAEhN,KAAM,0CAClCiN,EAAMC,IAAIC,gBAAgBJ,GAC1BkB,ED0Bc,CAAChB,IACjB,MAAMI,EAAS,IAAIC,OAAOL,GAC1B,OAAOX,EAAKe,EAAO,EC5BEE,CAAWN,GAGvBT,GAFUyB,EAAiBhI,QACdgI,EAAiBvH,WACrBuH,EAAiBzB,QAC1BqB,EAAcI,EAAiBJ,YAE/BG,GADcC,EAAiBrH,YACpBqH,EAAiBD,UACzCd,IAAIM,gBAAgBP,GEXb,MCAMiB,EAAiC,CAAC9G,EAAU,MACrD,IACI,OAAO,IAAI+G,aAAa/G,EAAS,2BACrC,CACA,MAAOsE,GAKH,OAHAA,EAAIN,KAAO,GACXM,EAAItE,QAAUA,EACdsE,EAAI9C,KAAO,2BACJ8C,CACX,GCVS0C,EAA0B,KACnC,IACI,OAAO,IAAID,aAAa,GAAI,oBAChC,CACA,MAAOzC,GAIH,OAFAA,EAAIN,KAAO,EACXM,EAAI9C,KAAO,oBACJ8C,CACX,iBCTG,MAAM2C,EAAajL,OAAOiL,YAAc,eCA/C,MAAMC,EAAO,OACPC,EAAW9G,IACb,MAAMA,CAAK,ECFR,MCAM+G,EAAyBC,IAClCA,EAAShH,MAAM,IAAI9D,MAAM,wDAClB,QC4BL,EC7B+C,oBAAX+K,OAAyB,KAAOA,OD8BpEC,EE/BqC,EAACC,EAAOC,KAC/C,MAAMC,EAAgB,OAEtB,OAAQC,IACJ,MAAMC,EAAY,IAAKC,KACnB,MAAMC,EAAcH,EAHL,CAACE,GAA4B,mBAAZA,EAAK,GAGFE,CAAeF,GAAQJ,EAAW,CAAEO,KAAMH,EAAK,KAAQJ,KAAcI,IACxG,YAAoBxN,IAAhByN,EACOA,EAEJJ,CACV,EAID,OAHAE,EAAU5L,OAAOiL,YAAc,KAAM,CACjCW,UAAW,IAAIC,KAAS,CAAGC,YAAaF,KAAaC,OAElDL,EAAMI,EAAU,CAC1B,EFgByBK,EG9BvB,SAAeC,GAalB,OAZKlM,OAAOiL,aACW,mBAARiB,GACPA,EAAIC,WACJD,EAAIC,UAAUnM,OAAOiL,aACrBiB,EAAIC,UAAUlB,GAAciB,EAAIC,UAAUnM,OAAOiL,mBAC1CiB,EAAIC,UAAUnM,OAAOiL,cAG5BiB,EAAIjB,GAAciB,EAAIlM,OAAOiL,mBACtBiB,EAAIlM,OAAOiL,cAGnBiB,CACX,INXO,SAAoBb,GACvB,OAAIA,EACIA,EAASW,MAAQX,EAAShH,OAASgH,EAASe,SACrCf,EAEJ,CACHe,UAAWf,EAASe,UAAYlB,GAAMmB,KAAKhB,GAC3ChH,OAAQgH,EAAShH,OAAS8G,GAASkB,KAAKhB,GACxCW,MAAOX,EAASW,MAAQd,GAAMmB,KAAKhB,IAGpC,CACHe,SAAUlB,EACV7G,MAAO8G,EACPa,KAAMd,EAEd,IGaaoB,GFjCuB,EAAClB,EAAuBE,EAAQC,KAU9D,EEsBwBgB,CAAqBnB,EAAuB,EAAQG,GIhCnD,EAACH,EAAuBE,EAAQC,IACpD,CAACiB,EAAa9D,IAAY6C,GAAuBF,IACpD,GAAe,OAAXC,QAA+CjN,IAA5BiN,EAAOmB,iBAC1B,OAAOrB,EAAsBC,GAEjC,MAAMqB,EAAmB,IAAIpB,EAAOmB,kBAAkBE,GAAYtB,EAASW,KAAKW,KAChF,IACID,EAAiBE,QAAQJ,EAAa9D,EAC1C,CACA,MAAOJ,GACH+C,EAAShH,MAAMiE,EACnB,CACA,MAAO,IAAMoE,EAAiBpJ,YAAY,IJqBzBuJ,CAAgBzB,EAAuB,EAAQG,IAClEuB,EKlCoC,CAACvB,GAA0B,CAACwB,EAAmB1G,IAAQkF,GAAuBF,GAAa0B,EAAkB,IAAK1B,EAAUW,KAAOvP,GAAU4O,EAASW,KAAK3F,EAAI5J,QLkC5KuQ,CAA2BzB,GAClD0B,EMnCwC,CAAC1B,GAA0B,CAACwB,EAAmBG,IAAmB3B,GAAuBF,IACnIA,EAASW,KAAKkB,GACPH,EAAkB1B,MNiCI8B,CAA+B5B,GASnD6B,GO5CkB,EAACN,EAAsBR,EAAWW,KAQ5D,EP4BoBI,CAAgBP,EAAsBR,EAAWW,GQpCzC,EAAC7B,EAAuBE,EAAQC,KAW3D,ER0BqB+B,CAAkBlC,EAAuB,EAAQG,GSrCzC,EAACH,EAAuBE,EAAQC,KAa7D,ETyBuBgC,CAAoBnC,EAAuB,EAAQG,GUtC9C,EAACH,EAAuBE,EAAQC,KA4B5D,EVWsBiC,CAAmBpC,EAAuB,EAAQG,GWvCzC,EAACH,EAAuBE,EAAQC,KAW/D,EX6ByBkC,CAAsBrC,EAAuB,EAAQG,GYxCvD,EAACH,EAAuBE,EAAQC,KAavD,EZ4BiBmC,CAActC,EAAuB,EAAQG,GazCpC,CAACA,IAa3B,Eb6BoBoC,CAAiBpC,Gc1CV,CAACA,IAa5B,Ed8BqBqC,CAAkBrC,Ge3CrB,CAACA,GACd,CAAChO,EAAQX,EAAM8L,IAAY6C,GAAuBF,IACrD,MAAMwC,EAAYC,GAAUzC,EAASW,KAAK8B,GAE1C,OADAvQ,EAAOuG,iBAAiBlH,EAAMiR,EAAUnF,GACjC,IAAMnL,EAAOwQ,oBAAoBnR,EAAMiR,EAAUnF,EAAQ,IfwCtDsF,CAASzC,kBgB3C3B,MAAM0C,GAA0C,MAA1CA,GAAkE,MAAlEA,GAA4F,MCcrFC,IDb4B,IAAAvG,SAAQ,CAC7C3D,QAAS,4DACTuE,OAAQ0F,KAE8B,IAAAtG,SAAQ,CAC9C3D,QAAS,4EACTuE,OAAQ0F,KAE+B,IAAAtG,SAAQ,CAC/C3D,QAAS,8EACTuE,OAAQ0F,KAE4B,IAAAtG,SAAQ,CAC5C3D,QAAS,8HACTuE,OAAQ0F,IEbqB,IAAIrK,ICHc,EAACuK,EAAiBC,EAAgBC,IAC1EtL,MAAOuL,IACV,MAAM3E,EAAO,IAAIwE,EAAgB,CAACE,GAAU,CAAEzR,KAAM,0CAC9CiN,EAAMuE,EAAerE,gBAAgBJ,GAC3C,UACU2E,EAAsBzE,EAChC,CACA,QACIuE,EAAehE,gBAAgBP,EACnC,GFMqC0E,CAAoC3E,KAAME,IGdhE,+1DHeV0E,EIhBwC,EAACC,EAAgBC,EAAmBtB,EAAIuB,IAClF,CAACC,EAA6BC,EAASnG,EAAU,CAAC,KACrD,MAAMoG,EAAmB,IAAIF,EAA4BC,EAAS,mCAAoC,IAC/FnG,EACHqG,iBAAkB,WAClBC,eAAgB,EAChBC,gBAAiB,IAEfvL,EAAkB,IAAIE,IACtBkB,EAAc4J,EAAkBhL,EAAiBoL,EAAiB1L,MAClE0I,EAAcsB,EAAG0B,EAAiB1L,KAAM,UAA1BgK,CAAqCqB,EAAe/K,IACxEoL,EAAiB1L,KAAKmB,QACtB,IAAI2K,EAAQ,WAwDZ,OAvDAhK,OAAOiK,iBAAiBL,EAAkB,CACtCM,MAAO,CACH,GAAA7L,GACI,OAAOR,UACH4L,EAAc,CAAC,aAAcO,GAC7BA,EAAQ,SACDpK,EAAY,CACfL,OAAQ,UAGpB,GAEJrB,KAAM,CACF,GAAAG,GACI,MAAM,IAAIhD,MAAM,4DACpB,GAEJgJ,OAAQ,CACJ,GAAAhG,GACI,OAAOR,MAAOsM,IACVV,EAAc,CAAC,YAAaO,GAC5BA,EAAQ,YACDpK,EAAY,CACfL,OAAQ,SACRC,OAAQ,CAAE2K,gBACX,CAACA,IAEZ,GAEJC,OAAQ,CACJ,GAAA/L,GACI,OAAOR,UACH4L,EAAc,CAAC,UAAWO,GAC1BA,EAAQ,YACDpK,EAAY,CACfL,OAAQ,WAGpB,GAEJ8K,KAAM,CACF,GAAAhM,GACI,OAAOR,UACH4L,EAAc,CAAC,SAAU,aAAcO,GACvCA,EAAQ,UACR,UACUpK,EAAY,CAAEL,OAAQ,QAChC,CACA,QACIqH,GACJ,EAER,KAGDgD,CAAgB,EJpDeU,EKhBf9L,GACpB,EAAGK,KAAMC,MACZ,MAAM,GAAEC,GAAOD,EACf,GAAW,OAAPC,EAAa,CACb,MAAMwL,EAAiB/L,EAAgBH,IAAIU,GAC3C,QAAuB5F,IAAnBoR,EAA8B,CAC9B,MAAM,OAAEvL,EAAM,QAAEC,GAAYsL,EAC5B/L,EAAgBU,OAAOH,QACD5F,IAAlB2F,EAAQK,MACRF,EAAQH,EAAQM,QAGhBJ,EAAO,IAAI3D,MAAMyD,EAAQK,MAAML,SAEvC,CACJ,ICfgC,CAACa,GAC9B,CAACnB,EAAiBN,IACd,CAACY,EAASW,EAAgB,KACtB,IAAIC,SAAQ,CAACT,EAASD,KACzB,MAAMD,EAAKY,EAAqBnB,GAChCA,EAAgBL,IAAIY,EAAI,CAAEC,SAAQC,YAClCf,EAAK0B,YAAY,CAAEb,QAAOD,GAAWW,EAAc,INUiC+K,CAAyB,EAAA7K,sBAAuBuI,GOhBvH,CAACuC,EAAgBC,KAC1C,IAAKD,EAAeE,SAASD,GACzB,MAAM,IAAIrP,MAAM,4BAA4BoP,EACvCtJ,KAAKyJ,GAAkB,IAAIA,OAC3BxJ,KAAK,uBAAuBsJ,MACrC,kBCLG,MCAMG,EAA0B,IAAIC,QAC9BC,EAA+B,IAAI1N,QACnC2N,EAAmB,IAAI3N,QACvB4N,EAAgC,IAAI5N,QACpC6N,EAAoB,IAAI7N,QACxB8N,EAAgB,IAAI9N,QACpB+N,EAAkB,IAAI/N,QACtBgO,EAAiB,IAAIhO,QAErBiO,EAA0C,IAAIjO,QAC9CkO,EAAyB,IAAIlO,QCVpC0C,EAAU,CACZ,SAAAyL,GACI,OAAOzL,CACX,GCSE0L,EAAyB,uPAClBC,EAAwB,CAACC,EAAQhH,KAC1C,MAAMiH,EAAmB,GACzB,IAAIC,EAAgCF,EAAOhI,QAAQ,SAAU,IACzDvE,EAASyM,EAA8BC,MAAML,GACjD,KAAkB,OAAXrM,GAAiB,CACpB,MAAM2M,EAAgB3M,EAAO,GAAGjE,MAAM,GAAI,GACpC6Q,EAAiC5M,EAAO,GACzCuE,QAAQ,cAAe,IACvBA,QAAQoI,EAAe,IAAInH,IAAImH,EAAepH,GAAKsH,YACxDL,EAAiBpQ,KAAKwQ,GACtBH,EAAgCA,EAA8B1Q,MAAMiE,EAAO,GAAGhG,QAAQuK,QAAQ,SAAU,IACxGvE,EAASyM,EAA8BC,MAAML,EACjD,CACA,MAAO,CAACG,EAAiBxK,KAAK,KAAMyK,EAA8B,ECvBhEK,EAA8BC,IAChC,QAA6BhT,IAAzBgT,IAAuCC,MAAMC,QAAQF,GACrD,MAAM,IAAI1I,UAAU,sFACxB,EAEE6I,EAAuBC,IACzB,IFJ2B,CAACC,IAC5B,IAEI,IADc,IAAIC,MAAMD,EAAezM,EAE3C,CACA,MACI,OAAO,CACX,CACA,OAAO,CAAI,EEJN2M,CAAgBH,GACjB,MAAM,IAAI9I,UAAU,8DAExB,GAAgC,OAA5B8I,EAActF,WAAyD,iBAA5BsF,EAActF,UACzD,MAAM,IAAIxD,UAAU,6DACxB,ECdSkJ,EAAiB,CAACxL,EAAKtG,KAChC,MAAMtD,EAAQ4J,EAAI9C,IAAIxD,GACtB,QAAc1B,IAAV5B,EACA,MAAM,IAAI8D,MAAM,kDAEpB,OAAO9D,CAAK,ECLHqV,EAAqB,CAACzO,EAAK0O,KACpC,MAAMC,EAAmBV,MAAMW,KAAK5O,GAAK6O,OAAOH,GAChD,GAAIC,EAAiB1T,OAAS,EAC1B,MAAMiC,MAAM,oCAEhB,GAAgC,IAA5ByR,EAAiB1T,OACjB,MAAMiC,MAAM,yBAEhB,MAAO4R,GAAmBH,EAE1B,OADA3O,EAAIe,OAAO+N,GACJA,CAAe,ECRbC,EAA0C,CAACC,EAAexB,EAAQyB,EAAQC,KACnF,MAAMC,EAA0BX,EAAeQ,EAAexB,GACxD4B,EAAqBX,EAAmBU,GAA0BE,GAA2BA,EAAuB,KAAOJ,GAAUI,EAAuB,KAAOH,IAIzK,OAHqC,IAAjCC,EAAwBG,MACxBN,EAAcjO,OAAOyM,GAElB4B,CAAkB,ECNhBG,EAAgCC,GAClChB,EAAevB,EAAiBuC,GCD9BC,EAA4BD,IACrC,GAAI9C,EAAwBpM,IAAIkP,GAC5B,MAAM,IAAItS,MAAM,oCAEpBwP,EAAwBgD,IAAIF,GAC5BD,EAA6BC,GAAWG,SAASC,GAAkBA,GAAc,IAAM,ECP9EC,EAAsBL,GACxB,SAAUA,ECCRM,GAA6BN,IACtC,IAAK9C,EAAwBpM,IAAIkP,GAC7B,MAAM,IAAItS,MAAM,gCAEpBwP,EAAwB3L,OAAOyO,GAC/BD,EAA6BC,GAAWG,SAASC,GAAkBA,GAAc,IAAO,ECJ/EG,GAAyC,CAACP,EAAWQ,MACzDH,EAAmBL,IAAcQ,EAAaC,OAAOC,GAAqC,IAArBA,EAAYZ,QAClFQ,GAA0BN,EAC9B,ECNEW,GAAkB,CACpBC,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBC,QAAS,KACTC,aAAc,GACdC,aAAc,IACdC,sBAAuB,ICPdC,GAAmB,CAACC,EAAiBC,IACvCD,EAAgBnF,UAAYoF,ECD1BC,GAAuDC,IAChE,IACIA,EAAkBC,cAAc,IAAIC,aAAa,GAAI,GAAI,EAC7D,CACA,MACI,OAAO,CACX,CACA,OAAO,CAAI,ECPFC,GAAuB,IAAM,IAAIvJ,aAAa,GAAI,kBCClDwJ,GAAuCC,IACnB,IAAEC,EAA/BD,EAAYC,gBAAmBA,EAY5BD,EAAYC,eAXHC,IACJ,IACI,OAAOD,EAAe3R,KAAK0R,EAAaE,EAC5C,CACA,MAAOpM,GACH,GAAiB,KAAbA,EAAIN,KACJ,MAAMsM,KAEV,MAAMhM,CACV,GAEsB,ECZ5B,GAAkB,CACpBqM,iBAAkB,GCHTC,IAA8B,qBAC9BC,IAA8BD,GCA9BE,GAAqBjC,GAAc9C,EAAwBpM,IAAIkP,GCGtE,GAAkB,CACpBnJ,OAAQ,KACR+J,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WAEvBqB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,GCXLC,GAA2BtC,GAC7BhB,EAAe5B,EAA8B4C,GCD3CuC,GAA4BC,GAC9BxD,EAAe1B,EAA+BkF,GCQ5CC,GAA4C,CAACzC,EAAW0C,KACjE,MAAM,aAAElC,GAAiB8B,GAAwBtC,GACjDQ,EAAaL,SAASO,GAAgBA,EAAYP,SAAQ,EAAEnC,MACnD0E,EAAM1F,SAASgD,IAChByC,GAA0CzE,EAAQ,IAAI0E,EAAO1C,GACjE,MAEJ,MAAM2C,EClB6B,CAAC3C,GAC7B,iBAAkBA,EDiBL4C,CAAwB5C,GACtC,CAEEA,EAAUqC,cAEZhC,EAAmBL,GACfvB,MAAMW,KAAKY,EAAUnM,WAAWzJ,UExBZ,CAAC4V,GACxB,cAAeA,GAAa,SAAUA,EFwBnC6C,CAAmB7C,GACf,CAACA,EAAU8C,EAAG9C,EAAU+C,OAAQ/C,EAAUgD,UAAWhD,EAAUiD,MG1B7C,CAACjD,GAC1B,WAAYA,EH0BLkD,CAAqBlD,GACjB,CAACA,EAAUmD,QI5BP,CAACnD,KACd,cAAeA,IAAc,SAAUA,EJ4B9BoD,CAAWpD,GACP,CAACA,EAAUiD,MK9BL,CAACjD,GACtB,WAAYA,GAAa,cAAeA,EL8BzBqD,CAAiBrD,GACb,CAACA,EAAU+C,OAAQ/C,EAAUgD,WMhCzB,CAAChD,GACxB,QAASA,ENgCUsD,CAAmBtD,GACf,CAACA,EAAUuD,KACX,GAC9B,IAAK,MAAMf,KAAcG,EAAa,CAClC,MAAMa,EAAwBjB,GAAyBC,QACzBhX,IAA1BgY,GACAA,EAAsBhD,aAAaL,SAAQ,EAAEnC,KAAYyE,GAA0CzE,EAAQ0E,IAEnH,CACIT,GAAkBjC,IAClBM,GAA0BN,EAC9B,EO3CSyD,GAAwBzH,IACjCyG,GAA0CzG,EAAQ0H,YAAa,GAAG,ECFzDC,GAAsBC,QACPpY,IAAhBoY,GACmB,iBAAhBA,GACiB,iBAAhBA,IAA6C,aAAhBA,GAA8C,gBAAhBA,GAAiD,aAAhBA,GCH/FC,GAAeC,GACjB,YAAaA,ECAXC,GAA+BC,GACjCH,GAAYG,EAAiB,ICF3BC,GAAqB,CAACzT,EAAK0T,EAAShF,EAAWiF,KACxD,IAAK,MAAMC,KAAQ5T,EACf,GAAI0O,EAAUkF,GAAO,CACjB,GAAID,EACA,OAAO,EAEX,MAAMzW,MAAM,iDAChB,CAGJ,OADA8C,EAAI0P,IAAIgE,IACD,CAAI,ECTFG,GAAuC,CAAC7D,EAAcxC,GAASyB,EAAQW,GAAgB+D,KAChGF,GAAmBzD,EAAc,CAACxC,EAAQyB,EAAQW,IAAiBkE,GAA0BA,EAAsB,KAAOtG,GAAUsG,EAAsB,KAAO7E,GAAQ0E,EAAiB,ECDjLI,GAAwC,CAAC/E,GAAgBxB,EAAQyB,EAAQW,GAAgB+D,KAClG,MAAMxE,EAA0BH,EAAc9O,IAAIsN,QAClBxS,IAA5BmU,EACAH,EAAchP,IAAIwN,EAAQ,IAAIvG,IAAI,CAAC,CAACgI,EAAQW,MAG5C6D,GAAmBtE,EAAyB,CAACF,EAAQW,IAAiBP,GAA2BA,EAAuB,KAAOJ,GAAQ0E,EAC3I,ECRSK,GAA0BC,GAC5B,WAAYA,ECAVC,GAA0C,CAACC,EAAuBC,EAA4BnF,EAAQC,KAC/G,GAAI8E,GAAuBI,GAA6B,CACpD,MAAMC,EAAiCD,EAA2BE,OAAOpF,GAEzE,OADAiF,EAAsB3U,QAAQ6U,EAAgCpF,EAAQ,GAC/D,CAACoF,EAAgCpF,EAAQ,EACpD,CAEA,OADAkF,EAAsB3U,QAAQ4U,EAA4BnF,EAAQC,GAC3D,CAACkF,EAA4BnF,EAAQC,EAAM,ECRzCqF,GAA8B,CAACC,EAAwBhH,EAAQyB,KACxE,IAAK,MAAM6E,KAAyBU,EAChC,GAAIV,EAAsB,KAAOtG,GAAUsG,EAAsB,KAAO7E,EAEpE,OADAuF,EAAuBzT,OAAO+S,GACvBA,EAGf,OAAO,IAAI,ECNFW,GAAiC,CAACjF,EAAWI,KAEtD,IADuBL,EAA6BC,GAChCzO,OAAO6O,GACvB,MAAM,IAAI1S,MAAM,uCACpB,ECHSwX,GAA2C,CAAC1F,EAAexB,EAAQyB,KAC5E,MAAME,EAA0BX,EAAeQ,EAAexB,GACxD4B,EAAqBX,EAAmBU,GAA0BE,GAA2BA,EAAuB,KAAOJ,IAIjI,OAHqC,IAAjCE,EAAwBG,MACxBN,EAAcjO,OAAOyM,GAElB4B,CAAkB,ECPhBuF,GAA+C,CAACR,EAAuBC,EAA4BnF,EAAQC,KAChH8E,GAAuBI,GACvBD,EAAsBlU,WAAWmU,EAA2BE,OAAOpF,GAAQD,EAAQ,GAGnFkF,EAAsBlU,WAAWmU,EAA4BnF,EAAQC,EACzE,ECLS0F,GAAsBpF,GACxBhB,EAAe3B,EAAkB2C,GCD/BqF,GAAuB7C,GACzBxD,EAAezB,EAAmBiF,GCFhC8C,GAAkBtF,GACpBtC,EAAe5M,IAAIkP,GCDjBuF,GAAsBvF,IACvB9C,EAAwBpM,IAAIkP,GCF3BwF,GAAuC,CAACC,EAAoBC,IAC9D,IAAI3T,SAAST,IAKhB,GAA0C,OAAtCoU,EACApU,GAAQ,OAEP,CACD,MAAMqU,EAAWF,EAAmBG,sBAAsB,IAAK,EAAG,GAC5DC,EAAQJ,EAAmBK,aAE3BC,EAAON,EAAmBO,aAAa,EAAG,EAAG,OAC7CC,EAAcF,EAAKnE,eAAe,GACxCqE,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjB,MAAMjI,EAASyH,EAAmBS,qBAClClI,EAAOnH,OAASkP,EAChB/H,EAAOkE,MAAO,EACdlE,EAAOhO,QAAQ2V,GAAU3V,QAAQyV,EAAmB/B,aACpD1F,EAAOhO,QAAQ6V,GACf7H,EAAOvN,WAAWoV,GAElBF,EAASQ,eAAkBlL,IACvB,MAAMmL,EAAUnL,EAAMoL,YAAYzE,eAAe,GAC7CnD,MAAMnF,UAAUgN,KAAKrW,KAAKmW,GAAUG,GAAsB,IAAXA,IAC/CjV,GAAQ,GAGRA,GAAQ,GAEZ0M,EAAOtB,OACPiJ,EAASQ,eAAiB,KAC1BnI,EAAOvN,WAAWkV,GAClBA,EAASlV,WAAWgV,EAAmB/B,YAAY,EAEvD1F,EAAOtM,OACX,KCtCK8U,GAAyB,CAACC,EAAQC,KAC3C,MAAMC,EAAS,IAAI5V,IACnB,IAAK,MAAM6V,KAASH,EAChB,IAAK,MAAMzG,KAAa4G,EAAO,CAC3B,MAAMC,EAAQF,EAAOjW,IAAIsP,GACzB2G,EAAOnW,IAAIwP,OAAqBxU,IAAVqb,EAAsB,EAAIA,EAAQ,EAC5D,CAEJF,EAAOxG,SAAQ,CAAC0G,EAAO7G,IAAc0G,EAAQ1G,EAAW6G,IAAO,ECRtDC,GAAqBC,GACvB,YAAaA,ECAXC,GAAiC7F,IAC1C,MAAMT,EAAc,IAAI3P,IACxBoQ,EAAgBnR,QAAU,CAAEA,GAEjB,CAAC0T,EAAajE,EAAS,EAAGC,EAAQ,KACrC,MAAMuH,EAAcH,GAAkBpD,GAAe1T,EAAQ0T,EAAajE,EAAQC,GAAS1P,EAAQ0T,EAAajE,GAE1GyH,EAA2BxG,EAAYhQ,IAAIgT,GASjD,YARiClY,IAA7B0b,EACAxG,EAAYlQ,IAAIkT,EAAa,CAAC,CAAEhE,QAAOD,YAGnCyH,EAAyBzG,OAAO0G,GAAeA,EAAWzH,QAAUA,GAASyH,EAAW1H,SAAWA,KACnGyH,EAAyBrZ,KAAK,CAAE6R,QAAOD,WAGxCwH,CAAW,EAdA,CAgBvB9F,EAAgBnR,QAAQwJ,KAAK2H,IAChCA,EAAgB1Q,WAAa,CAAEA,GACpB,CAAC2W,EAAqB3H,EAAQC,KAEjC,GADAjP,EAAW4W,MAAMlG,QACW3V,IAAxB4b,EACA1G,EAAY4G,aAEX,GAAmC,iBAAxBF,EACZ,IAAK,MAAO1D,EAAawD,KAA6BxG,EAAa,CAC/D,MAAM6G,EAAsBL,EAAyB7H,QAAQ8H,GAAeA,EAAW1H,SAAW2H,IAC/D,IAA/BG,EAAoB9b,OACpBiV,EAAYnP,OAAOmS,GAGnBhD,EAAYlQ,IAAIkT,EAAa6D,EAErC,MAEC,GAAI7G,EAAY5P,IAAIsW,GACrB,QAAe5b,IAAXiU,EACAiB,EAAYnP,OAAO6V,OAElB,CACD,MAAMF,EAA2BxG,EAAYhQ,IAAI0W,GACjD,QAAiC5b,IAA7B0b,EAAwC,CACxC,MAAMK,EAAsBL,EAAyB7H,QAAQ8H,GAAeA,EAAW1H,SAAWA,IAAW0H,EAAWzH,QAAUA,QAAmBlU,IAAVkU,KACxG,IAA/B6H,EAAoB9b,OACpBiV,EAAYnP,OAAO6V,GAGnB1G,EAAYlQ,IAAI4W,EAAqBG,EAE7C,CACJ,CAEJ,IAAK,MAAO7D,EAAawD,KAA6BxG,EAClDwG,EAAyB/G,SAASgH,IAC1BL,GAAkBpD,GAClBvC,EAAgBnR,QAAQ0T,EAAayD,EAAW1H,OAAQ0H,EAAWzH,OAGnEyB,EAAgBnR,QAAQ0T,EAAayD,EAAW1H,OACpD,GAER,EA3CqB,CA6C1B0B,EAAgB1Q,WAAW,ECvC5B+W,GAA0C,CAACxJ,EAAQ0F,EAAajE,EAAQgI,KAC1E,MAAM,aAAEjH,EAAY,cAAEhB,GAAkB+C,GAAyBmB,IAC3D,QAAEgE,GAAYpF,GAAwBtE,GACtC2J,EAAiB5H,EAA6B/B,GAC9CoC,EAAiBwH,IACnB,MAAMzG,EAAkBiE,GAAmBpH,GACrC6J,EAAmBxC,GAAoB3B,GAC7C,GAAIkE,EAAU,CACV,MAAME,EAAoB5C,GAAyC1F,EAAexB,EAAQyB,GAC1F4E,GAAqC7D,EAAcxC,EAAQ8J,GAAmB,GACzEL,GAAcnC,GAAetH,IAC9BmD,EAAgBnR,QAAQ6X,EAAkBpI,EAElD,KACK,CACD,MAAMqI,ECxCqC,EAACtH,EAAcxC,EAAQyB,IACnER,EAAmBuB,GAAe8D,GAA0BA,EAAsB,KAAOtG,GAAUsG,EAAsB,KAAO7E,IDuCrGsI,CAAwCvH,EAAcxC,EAAQyB,GACxF8E,GAAsC/E,EAAesI,GAAmB,GACnEL,GAAcnC,GAAetH,IAC9BmD,EAAgB1Q,WAAWoX,EAAkBpI,EAErD,GAEJ,QAAIwE,GAAmByD,EAAS,CAAChE,EAAajE,IAAUuE,GAAqBA,EAAiB,KAAON,GAAeM,EAAiB,KAAOvE,IAAQ,KAChJkI,EAAezH,IAAIE,GACf6B,GAAkBjE,GAClBqG,GAAqC7D,EAAcxC,EAAQ,CAACyB,EAAQW,IAAgB,GAGpFmE,GAAsC/E,EAAe,CAACxB,EAAQyB,EAAQW,IAAgB,IAEnF,EAEC,EAoBV4H,GAA0B,CAAChK,EAAQyJ,EAAW/D,EAAajE,EAAQC,KACrE,MAAO1E,EAAU4M,GAnBoB,EAAC5J,EAAQ0F,EAAajE,EAAQC,KACnE,MAAM,aAAEc,EAAY,cAAEhB,GAAkB8C,GAAwBoB,GAC1DY,EAAwBS,GAA4BvE,EAAad,GAAQ1B,EAAQyB,GACvF,GAA8B,OAA1B6E,EAEA,MAAO,CADwB/E,EAAwCC,EAAexB,EAAQyB,EAAQC,GACvE,IAAI,GAEvC,MAAO,CAAC4E,EAAsB,IAAI,EAAK,EAYV2D,CAAiCjK,EAAQ0F,EAAajE,EAAQC,GAO3F,GANiB,OAAb1E,IACAiK,GAA+BjH,EAAQhD,IACnC4M,GAAaH,GAAcnC,GAAetH,IAC1CmH,GAA6CC,GAAmBpH,GAASoH,GAAmB1B,GAAcjE,EAAQC,IAGtHuC,GAAkByB,GAAc,CAChC,MAAM,aAAElD,GAAiB8B,GAAwBoB,GACjDnD,GAAuCmD,EAAalD,EACxD,GAEE0H,GAA2B,CAAClK,EAAQyJ,EAAW/D,EAAajE,KAC9D,MAAOzE,EAAU4M,GAvBqB,EAAC5J,EAAQ0F,EAAajE,KAC5D,MAAM,aAAEe,EAAY,cAAEhB,GAAkB+C,GAAyBmB,GAC3DY,EAAwBS,GAA4BvE,EAAcxC,EAAQyB,GAChF,GAA8B,OAA1B6E,EAEA,MAAO,CADwBY,GAAyC1F,EAAexB,EAAQyB,GAChE,IAAI,GAEvC,MAAO,CAAC6E,EAAsB,IAAI,EAAK,EAgBV6D,CAAkCnK,EAAQ0F,EAAajE,GACnE,OAAbzE,IACAiK,GAA+BjH,EAAQhD,IACnC4M,GAAaH,GAAcnC,GAAetH,IAC1CoH,GAAmBpH,GAAQvN,WAAW4U,GAAoB3B,GAAcjE,GAEhF,EElGG,MAAM2I,GACT,WAAAC,CAAYxU,GACR/G,KAAKwb,KAAO,IAAIvX,IAAI8C,EACxB,CACA,QAAIiM,GACA,OAAOhT,KAAKwb,KAAKxI,IACrB,CACA,OAAAxN,GACI,OAAOxF,KAAKwb,KAAKhW,SACrB,CACA,OAAA6N,CAAQoI,EAAUC,EAAU,MACxB,OAAO1b,KAAKwb,KAAKnI,SAAQ,CAACvW,EAAOsD,IAAQqb,EAAStY,KAAKuY,EAAS5e,EAAOsD,EAAKJ,OAChF,CACA,GAAA4D,CAAIiC,GACA,OAAO7F,KAAKwb,KAAK5X,IAAIiC,EACzB,CACA,GAAA7B,CAAI6B,GACA,OAAO7F,KAAKwb,KAAKxX,IAAI6B,EACzB,CACA,IAAA8V,GACI,OAAO3b,KAAKwb,KAAKG,MACrB,CACA,MAAAre,GACI,OAAO0C,KAAKwb,KAAKle,QACrB,ECtBJ,MAAM,GAAkB,CACpBwW,aAAc,EAEd1E,iBAAkB,WAClB2E,sBAAuB,WACvB1E,eAAgB,EAChBC,gBAAiB,EACjBsM,cAAe,CAAC,EAChBC,iBAAkB,CAAC,GCVhB,SAASC,GAAgBjH,EAEhCkH,EAAQ3b,EAAK4b,EAAeC,GACxB,GAA2C,mBAAhCpH,EAAYiH,gBAEY,IAA3BC,EAAO3b,GAAK8b,aACZH,EAAO3b,GAAO,IAAIsU,aAAa,MAEnCG,EAAYiH,gBAAgBC,EAAO3b,GAAM4b,EAAeC,OAGvD,CACD,MAAM9C,EAActE,EAAYC,eAAekH,GAE/C,GAA+B,IAA3BD,EAAO3b,GAAK8b,WACZH,EAAO3b,GAAO+Y,EAAYzY,MAAMub,EAAcA,EAAe,SAE5D,CACD,MAAME,EAAc,IAAIzH,aAAayE,EAAYpP,OAAQkS,EAAevH,aAAa0H,kBAAmB,KACxGL,EAAO3b,GAAKsD,IAAIyY,EACpB,CACJ,CACJ,CCtBO,MAAM1H,GAAgB,CAACI,EAAakH,EAAQ3b,EAAK4b,EAAeC,KAC1B,mBAA9BpH,EAAYJ,cAEY,IAA3BsH,EAAO3b,GAAK8b,YACZrH,EAAYJ,cAAcsH,EAAO3b,GAAM4b,EAAeC,GAM3B,IAA3BF,EAAO3b,GAAK8b,YACZrH,EAAYC,eAAekH,GAAetY,IAAIqY,EAAO3b,GAAM6b,EAEnE,ECbSI,GAAqB,CAACC,EAAGC,KAClC,MAAMC,EAAS,GACf,IAAK,IAAIpb,EAAI,EAAGA,EAAIkb,EAAGlb,GAAK,EAAG,CAC3B,MAAMqb,EAAQ,GACR9d,EAAsB,iBAAN4d,EAAiBA,EAAIA,EAAEnb,GAC7C,IAAK,IAAIsb,EAAI,EAAGA,EAAI/d,EAAQ+d,GAAK,EAC7BD,EAAM1b,KAAK,IAAI2T,aAAa,MAEhC8H,EAAOzb,KAAK0b,EAChB,CACA,OAAOD,CAAM,ECJXG,GAAgBvZ,MAAOwZ,EAAOC,EAAgBC,EAA2B/T,EAASgU,EAAoBC,EAAsBC,KAG9H,MAAMte,EAA4B,OAAnBke,EAAkE,IAAxC/e,KAAK6B,KAAKid,EAAM1N,QAAQvQ,OAAS,KAAake,EAAele,OAChGue,EAAwBnU,EAAQ+K,aAAe/K,EAAQsG,eACvD8N,EAAyBJ,EAAmBhX,QAAO,CAACqX,EAAKtgB,IAAUsgB,EAAMtgB,GAAO,GAChFugB,EAA6C,IAA3BF,EAClB,KACAL,EAA0B5D,aAAaiE,EAAwBxe,EAAQme,EAA0BjT,YACvG,QAA6BnL,IAAzBse,EACA,MAAM,IAAIpc,MAAM,sCAEpB,MAAM0c,EAAuB9H,GAAwBoH,GAC/CW,OChB8B,EAACT,EAA2BF,KAChE,MAAMY,EAAqBtL,EAAepB,EAAwBgM,GAC5DW,EAAyBnF,GAAmBsE,GAClD,OAAO1K,EAAesL,EAAoBC,EAAuB,EDa7BC,CAAyBZ,EAA2BF,GAClF5E,EAASqE,GAAmBtT,EAAQsG,eAAgBtG,EAAQ+K,cAC5D8G,EAAUyB,GAAmBtT,EAAQuG,gBAAiByN,GACtDhW,EAAa4K,MAAMW,KAAKsK,EAAM7V,WAAW4U,QAAQ5V,QAAO,CAAC6B,EAAQ/B,KAAS,IAAM+B,EAAQ,CAAC/B,GAAO,IAAI6O,aAAa,QAAS,CAAC,GACjI,IAAK,IAAItT,EAAI,EAAGA,EAAIzC,EAAQyC,GAAK,IAAK,CAClC,GAAI2H,EAAQsG,eAAiB,GAAwB,OAAnBwN,EAC9B,IAAK,IAAIH,EAAI,EAAGA,EAAI3T,EAAQsG,eAAgBqN,GAAK,EAC7C,IAAK,IAAIiB,EAAI,EAAGA,EAAI5U,EAAQ+K,aAAc6J,GAAK,EAC3C7B,GAAgBe,EAAgB7E,EAAO0E,GAAIiB,EAAGA,EAAGvc,QAIX1C,IAA9Cse,EAAqBtL,sBAAyD,OAAnBmL,GAC3DG,EAAqBtL,qBAAqB2B,SAAQ,EAAGxN,QAAQrH,KACzDsd,GAAgBe,EAAgB9V,EAAYlB,EAAMqX,EAAwB1e,EAAO4C,EAAE,IAG3F,IAAK,IAAIsb,EAAI,EAAGA,EAAI3T,EAAQsG,eAAgBqN,GAAK,EAC7C,IAAK,IAAIiB,EAAI,EAAGA,EAAIZ,EAAmBL,GAAIiB,GAAK,EAEX,IAA7B/C,EAAQ8B,GAAGiB,GAAGzB,aACdtB,EAAQ8B,GAAGiB,GAAK,IAAIjJ,aAAa,MAI7C,IACI,MAAMkJ,EAAyB5F,EAAOtR,KAAI,CAACkM,EAAOpU,IACQ,IAAlD8e,EAAqB5J,aAAalV,GAAOwU,KAClC,GAEJJ,IAELiL,EAAmBZ,EAAiC7b,EAAI0b,EAA0BjT,WAAYiT,EAA0BjT,YAAY,IAAM0T,EAAsBO,QAAQF,EAAwBhD,EAAS7T,KAC/M,GAAwB,OAApBsW,EACA,IAAK,IAAIX,EAAI,EAAGqB,EAAkC,EAAGrB,EAAI3T,EAAQuG,gBAAiBoN,GAAK,EAAG,CACtF,IAAK,IAAIiB,EAAI,EAAGA,EAAIZ,EAAmBL,GAAIiB,GAAK,EAC5ClJ,GAAc4I,EAAiBzC,EAAQ8B,GAAIiB,EAAGI,EAAkCJ,EAAGvc,GAEvF2c,GAAmChB,EAAmBL,EAC1D,CAEJ,IAAKmB,EACD,KAER,CACA,MAAOnZ,GACHkY,EAAMoB,cAAc,IAAIC,WAAW,iBAAkB,CACjDC,MAAOxZ,EAAMwZ,MACbC,SAAUzZ,EAAMyZ,SAChBC,OAAQ1Z,EAAM0Z,OACd/Z,QAASK,EAAML,WAEnB,KACJ,CACJ,CACA,OAAOgZ,CAAe,EEzEpB,GAAkB,CACpBrH,EAAG,EACHlC,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBkC,OAAQ,EACRC,UAAW,IACXC,KAAM,EACNlZ,KAAM,WCTJ,GAAkB,CACpB6W,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvB1E,eAAgB,GCJd,GAAkB,CACpByE,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBzE,gBAAiB,GCAf,GAAkB,CACpBwE,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBsC,OAAQ,GCRN,GAAkB,CACpBtM,OAAQ,KACR+J,aAAc,EACd1E,iBAAkB,cAClB2E,sBAAuB,WACvBsK,sBAAsB,GCLbC,GAAqBC,IAC9B,MAAM,MAAElb,EAAK,MAAEC,GAAU,IAAIC,eAC7B,OAAO,IAAI0B,SAAST,IAChB,MAAMga,EAAkB,KACpBlb,EAAMmb,UAAY,KAClBpb,EAAMqb,QACNpb,EAAMob,QACNla,GAAS,EAEblB,EAAMmb,UAAY,IAAMD,IACxB,IACInb,EAAM8B,YAAYoZ,EAAa,CAACA,GACpC,CACA,MAEA,CACA,QACIC,GACJ,IACF,ECnBA,GAAkB,CACpB1K,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvB4K,UAAW,EACXC,aAAc,GCJZC,GAA4B,CAAClK,EAAsBmK,EAAkBnM,KACvE,MAAMoM,EAAkBD,EAAiBnM,GACzC,QAAwBjU,IAApBqgB,EACA,MAAMpK,IAEV,OAAOoK,CAAe,ECNpB,GAAkB,CACpBC,OAAQ,KACRlL,aAAc,EACd1E,iBAAkB,cAClB2E,sBAAuB,WACvBkL,KAAM,GACNhe,MAAO,GACPie,QAAS,IACTC,WAAY,ICPV,GAAkB,CACpBrL,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBoC,KAAM,GCLG,GAA0B,IAAM,IAAI/K,aAAa,GAAI,qBCArDgU,GAA2B,IAAM,IAAIhU,aAAa,GAAI,sBCC7D,GAAkB,CACpB0I,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,YCDdsL,GAAe,CAACC,EAAUC,EAAgBC,EAAaC,EAAmBC,EAAWC,EAASC,EAASC,EAAaC,EAAclN,EAAOD,KAClJ,MAAMoN,EAAcnN,EAAMjU,OAC1B,IAAIyC,EAAIye,EACR,IAAK,IAAInD,EAAI,EAAGA,EAAIqD,EAAarD,GAAK,EAAG,CACrC,IAAIH,EAAIiD,EAAY,GAAK5M,EAAM8J,GAC/B,IAAK,IAAIiB,EAAI,EAAGA,EAAI+B,EAAW/B,GAAK,EAAG,CACnC,MAAMrB,EAAKlb,EAAIuc,EAAMmC,EAAe,EACpCvD,GAAKiD,EAAY7B,GAAKgC,EAAQrD,GAC9BC,GAAK+C,EAAS3B,GAAKiC,EAAQtD,EAC/B,CACA,IAAK,IAAIqB,EAAI+B,EAAW/B,EAAI8B,EAAmB9B,GAAK,EAChDpB,GAAKiD,EAAY7B,GAAKgC,EAASve,EAAIuc,EAAMmC,EAAe,GAE5D,IAAK,IAAInC,EAAI+B,EAAW/B,EAAI4B,EAAgB5B,GAAK,EAC7CpB,GAAK+C,EAAS3B,GAAKiC,EAASxe,EAAIuc,EAAMmC,EAAe,GAEzDH,EAAQve,GAAKwR,EAAM8J,GACnBkD,EAAQxe,GAAKmb,EACbnb,EAAKA,EAAI,EAAM0e,EAAe,EAC9BnN,EAAO+J,GAAKH,CAChB,CACA,OAAOnb,CAAC,ECxBN,GAAkB,CACpB0S,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,YCHdiM,GAAsB1L,IAE/B,MAAM2L,EAAc,IAAIC,YAAY,CAAC,WAAY,GAAI,WAAY,UAAW,GAAI,OAAQ,MAAO,OAAQ,QAAS,WAAY,EAAG,IAC/H,IAEI,MAAMC,EAAU7L,EAAc8L,gBAAgBH,EAAYlW,QAAQ,SAGlE,YAAgBrL,IAAZyhB,IAGJA,EAAQE,OAAM,UAGP,EACX,CACA,MAEA,CACA,OAAO,CAAK,ECjBV,GAAkB,CACpBrL,iBAAkB,GCHTsL,GAA8B,CAACjM,EAAiBtL,EAASwX,KAClE,MAAMzjB,EAAQiM,EAAQwX,QACR7hB,IAAV5B,GAAuBA,IAAUuX,EAAgBkM,KACjDlM,EAAgBkM,GAAUzjB,EAC9B,ECHS0jB,GAA+B,CAACnM,EAAiBtL,KAC1DuX,GAA4BjM,EAAiBtL,EAAS,gBACtDuX,GAA4BjM,EAAiBtL,EAAS,oBACtDuX,GAA4BjM,EAAiBtL,EAAS,wBAAwB,ECJrE0X,GAAuDC,GACJ,mBAA9CA,EAAmBC,uBCDxBC,GAAuC,CAACvM,EAAiBtL,EAAS2M,KAC3E,MAAM5Y,EAAQiM,EAAQ2M,QACRhX,IAAV5B,GAAuBA,IAAUuX,EAAgBqB,GAAY5Y,QAC7DuX,EAAgBqB,GAAY5Y,MAAQA,EACxC,ECJS+jB,GAA6DC,IAC/B,IAAElc,EAAzCkc,EAA+Blc,OAAUA,EAQtCkc,EAA+Blc,MAPvB,CAACmc,EAAO,EAAG1K,EAAS,EAAG9Y,KAC1B,GAAyB,iBAAbA,GAAyBA,EAAW,GAAM8Y,EAAS,GAAK0K,EAAO,EACvE,MAAM,IAAIC,WAAW,qCAGzBpc,EAAMzB,KAAK2d,EAAgCC,EAAM1K,EAAQ9Y,EAAS,EAElC,ECT/B0jB,GAA4DH,IAC/B,IAAElR,EAAxCkR,EAA+BlR,MAASA,EAOrCkR,EAA+BlR,KANvB,CAACmR,EAAO,KACX,GAAIA,EAAO,EACP,MAAM,IAAIC,WAAW,oCAEzBpR,EAAKzM,KAAK2d,EAAgCC,EAAK,EAEhB,ECR9BG,GAAoB,CAACC,EAAatX,IACvB,OAAhBsX,EACO,IAEJrjB,KAAKoD,IAAI,IAAKpD,KAAKsjB,IAAI,MAAOtjB,KAAKsB,IAAI,EAAGtB,KAAKujB,MAAMvjB,KAAKwjB,KAAKH,EAActX,OCH3E0X,GAAqCne,MAAO4Z,EAAsBwE,KAC3E,MAAMC,OCFkC,CAACD,GAClC,IAAIvc,SAAQ,CAACT,EAASD,KACzB,MAAM,MAAElB,EAAK,MAAEC,GAAU,IAAIC,eAC7BF,EAAMob,UAAY,EAAGra,WACjBf,EAAMqb,QACNpb,EAAMob,QACNla,EAAQJ,EAAK,EAEjBf,EAAMqe,eAAiB,EAAGtd,WACtBf,EAAMqb,QACNpb,EAAMob,QACNna,EAAOH,EAAK,EAGhBd,EAAM6B,YAAYqc,EAAwB,IDZFG,CAA6BH,GACzE,OAAO,IAAIxE,EAAqByE,EAA8B,EEArDG,GAA+B,CAACtN,EAAevL,KACxD,MAAM8Y,EAAyBvN,EAAcwN,qBAO7C,OANAtB,GAA6BqB,EAAwB9Y,GACrD6X,GAAqCiB,EAAwB9Y,EAAS,KACtE6X,GAAqCiB,EAAwB9Y,EAAS,UACtE6X,GAAqCiB,EAAwB9Y,EAAS,aACtE6X,GAAqCiB,EAAwB9Y,EAAS,QACtEuX,GAA4BuB,EAAwB9Y,EAAS,QACtD8Y,CAAsB,ECTpBE,GAAkC,CAACzN,EAAevL,KAC3D,MAAMiZ,EAA4B1N,EAAc2N,sBAAsBlZ,EAAQuG,iBAO9E,OAHAkR,GAA6BwB,EAA2BjZ,GCNrB,CAACmZ,IACpC,MAAMpO,EAAeoO,EAAoB5S,gBAEzC/J,OAAO4c,eAAeD,EAAqB,eAAgB,CACvDte,IAAK,IAAMkQ,EACXpQ,IAAM5G,IACF,GAAIA,IAAUgX,EACV,MAAM,IACV,IAIRvO,OAAO4c,eAAeD,EAAqB,mBAAoB,CAC3Dte,IAAK,IAAM,WACXF,IAAM5G,IACF,GAAc,aAAVA,EACA,MAAM,IACV,IAIRyI,OAAO4c,eAAeD,EAAqB,wBAAyB,CAChEte,IAAK,IAAM,WACXF,IAAM5G,IACF,GAAc,aAAVA,EACA,MAAM,IACV,GAEN,EDpBFslB,CAAwBJ,GACjBA,CAAyB,EEVvBK,GAAuB,CAACC,EAAUC,KAC3CD,EAASpf,QAAUqf,EAAYrf,QAAQwJ,KAAK6V,GAC5CD,EAAS3e,WAAa4e,EAAY5e,WAAW+I,KAAK6V,GAC3CD,GCDEE,GAAwB,CAAClO,EAAevL,KACjD,MAAM0Z,EAAkBnO,EAAcoO,YAAY3Z,EAAQ6V,cAG1D,OAFA4B,GAA6BiC,EAAiB1Z,GAC9C6X,GAAqC6B,EAAiB1Z,EAAS,aACxD0Z,CAAe,ECJbE,GAAuB,CAACrO,EAAevL,KAChD,MAAM6Z,EAAiBtO,EAAc0E,aAGrC,OAFAwH,GAA6BoC,EAAgB7Z,GAC7C6X,GAAqCgC,EAAgB7Z,EAAS,QACvD6Z,CAAc,ECHzB,SAASC,GAAOC,EAAGC,GACf,MAAMC,EAAcD,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC3C,MAAO,EAAED,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAAMC,GAAcF,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAAMC,EACrF,CAIA,SAASC,GAAmBC,EAAaC,GACrC,IAAIxe,EAAS,CAAC,EAAG,GACjB,IAAK,IAAIvD,EAAI8hB,EAAYvkB,OAAS,EAAGyC,GAAK,EAAGA,GAAK,EALjC2hB,EAMaI,EAA1Bxe,EALG,EADOme,EAMQne,GALZ,GAAKoe,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAAID,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IAMtDpe,EAAO,IAAMue,EAAY9hB,GAPjC,IAAkB0hB,EAAGC,EASjB,OAAOpe,CACX,CACO,MClBMye,GAAkC,CAAC9O,EAAe+O,EAAYnG,EAAuBC,IACvF7I,EAAcwE,sBAAsBuK,EAAYnG,EAAuBC,GCDrE,GAA0B,IAAM,IAAI/R,aAAa,GAAI,qBCE5D,GAAkB,CACpB4J,iBAAkB,GCAhB,GAAkB,CACpBlB,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBkC,OAAQ,EACRC,UAAW,IACXoN,kBAAc5kB,EACdzB,KAAM,QCTJ,GAAkB,CACpB6W,aAAc,EACd1E,iBAAkB,cAClB2E,sBAAuB,WACvBwP,eAAgB,IAChBC,eAAgB,IAChBC,cAAe,EACfC,cAAe,UACfC,YAAa,IACbC,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,aAAc,aACdC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,YAAa,EACbC,cAAe,GClBb,GAAkB,CACpB/F,sBAAsB,GCDpB,GAAkB,CACpBvK,aAAc,EAKd1E,iBAAkB,WAClB2E,sBAAuB,WACvB0C,IAAK,GCRI4N,GAAqB,IAAM,IAAIjZ,aAAa,GAAI,gBCAvD,GAAkB,CACpB0I,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBuQ,MAAO,KACPC,WAAY,QCLHC,GAAiB,CAAC3P,EAAa9K,EAAQiS,SAEZtd,IAAhCmW,EAAYiH,gBACLjH,EAAYC,eAAekH,GAAe,IAErDnH,EAAYiH,gBAAgB/R,EAAQiS,GAC7BjS,EAAO,ICNL0a,GAAaH,IACtB,GAAc,OAAVA,EACA,OAAO,EAEX,MAAM3lB,EAAS2lB,EAAM3lB,OACrB,OAAIA,EAAS,GAAM,EAC0B,IAAlC2lB,EAAMxmB,KAAK2B,MAAMd,EAAS,IAE9B2lB,EAAM3lB,EAAS,EAAI,GAAK2lB,EAAM3lB,EAAS,KAAO,CAAC,ECR7C+lB,GAAqB,CAACC,EAAQC,EAAUC,EAAcC,KAC/D,IAAItY,EAAYmY,EAChB,MAAQnY,EAAUuY,eAAeH,IAC7BpY,EAAYjH,OAAOyf,eAAexY,GAEtC,MAAM,IAAE5I,EAAG,IAAEF,GAAQ6B,OAAO0f,yBAAyBzY,EAAWoY,GAChErf,OAAO4c,eAAewC,EAAQC,EAAU,CAAEhhB,IAAKihB,EAAajhB,GAAMF,IAAKohB,EAAaphB,IAAO,ECNlFwhB,GAA8B,CAACxP,EAAY5Y,EAAOM,KAC3D,IACIsY,EAAWyP,eAAeroB,EAAOM,EACrC,CACA,MAAOuL,GACH,GAAiB,IAAbA,EAAIN,KACJ,MAAMM,EAEVuc,GAA4BxP,EAAY5Y,EAAOM,EAAY,KAC/D,GCTSgoB,GAAoE9Q,IAC7E,MAAM+Q,EAA8B/Q,EAAcgR,mBAClD,IACID,EAA4BzgB,OAAO,EACvC,CACA,MAAO+D,GACH,OAAOA,aAAeqY,UAC1B,CACA,OAAO,CAAK,ECRHuE,GAAiEjR,IAC1E,MAAME,EAAoBF,EAAc4E,aAAa,EAAG,EAAG,OACrDmM,EAA8B/Q,EAAc8E,qBAClDiM,EAA4Btb,OAASyK,EACrC6Q,EAA4BzgB,QAC5BygB,EAA4BzV,OAC5B,IAEI,OADAyV,EAA4BzV,QACrB,CACX,CACA,MACI,OAAO,CACX,GCZS4V,GAAmElR,IAC5E,MAAM+Q,EAA8B/Q,EAAcgR,mBAClD,IACID,EAA4BzV,MAAM,EACtC,CACA,MAAOjH,GACH,OAAOA,aAAeqY,UAC1B,CACA,OAAO,CAAK,ECPHyE,GAAyD,CAAC3E,EAAgCxM,KACnG,MAAMsO,EAAiBtO,EAAc0E,aACrC8H,EAA+B5d,QAAQ0f,GACvC,MAAM8C,EAAqB,CAAE/hB,GAClB,KAEHA,EAAWR,KAAK2d,EAAgC8B,GAChD9B,EAA+B1S,oBAAoB,QAASsX,EAAmB,EAJ5D,CAMxB5E,EAA+Bnd,YAClCmd,EAA+B3c,iBAAiB,QAASuhB,GACzDrD,GAAqBvB,EAAgC8B,GACrD9B,EAA+BlR,KAAO,CAAEA,IACpC,IAAI+V,GAAY,EAChB,MAAO,CAAC5E,EAAO,KACX,GAAI4E,EACA,IACI/V,EAAKzM,KAAK2d,EAAgCC,EAC9C,CACA,MACI6B,EAAezM,KAAKgP,eAAe,EAAGpE,EAC1C,MAGAnR,EAAKzM,KAAK2d,EAAgCC,GAC1C4E,GAAY,CAChB,CAEP,EAhBqC,CAgBnC7E,EAA+BlR,KAAK,EC7B9BgW,GAAoB,CAAChoB,EAAQ0V,IAC9BnF,IACJ,MAAM0X,EAAa,CAAE/oB,MAAOc,GAK5B,OAJA2H,OAAOiK,iBAAiBrB,EAAO,CAC3B2X,cAAeD,EACfjoB,OAAQioB,IAEiB,mBAAlBvS,EACAA,EAAcnQ,KAAKvF,EAAQuQ,GAE/BmF,EAAcyS,YAAY5iB,KAAKvF,EAAQuQ,EAAM,ECoMtD6X,GC9MmD,CAAC7O,GAC/C,CAACzD,EAAcxC,GAASyB,EAAQC,EAAOU,GAAgB+D,KAC1DF,EAAmBzD,EAAad,GAAQ,CAAC1B,EAAQyB,EAAQW,IAAiBkE,GAA0BA,EAAsB,KAAOtG,GAAUsG,EAAsB,KAAO7E,GAAQ0E,EAAiB,ED4M7J4O,CAA0C9O,IAChF+O,GE/MoD,CAAC/O,GAChD,CAACzE,EAAeE,GAAQ1B,EAAQyB,EAAQW,GAAgB+D,KAC3D,MAAMxE,EAA0BH,EAAc9O,IAAIsN,QAClBxS,IAA5BmU,EACAH,EAAchP,IAAIwN,EAAQ,IAAIvG,IAAI,CAAC,CAACgI,EAAQC,EAAOU,MAGnD6D,EAAmBtE,EAAyB,CAACF,EAAQC,EAAOU,IAAiBP,GAA2BA,EAAuB,KAAOJ,GAAUI,EAAuB,KAAOH,GAAOyE,EACzL,EFuMqC8O,CAA2ChP,IAClFiP,GGhNsD,CAACjU,GAClD,CAACuB,EAAcxC,EAAQyB,EAAQC,IAC3BT,EAAmBuB,EAAad,IAAS4E,GAA0BA,EAAsB,KAAOtG,GAAUsG,EAAsB,KAAO7E,IH8MvG0T,CAA6ClU,GACtFmU,GAAyB,IAAI1jB,QAC7B2jB,GIlNoC,CAACD,GAC/BpT,IAAgB,IAAIsT,EAAI,OAAwD,QAAhDA,EAAKF,EAAuB1iB,IAAIsP,UAA+B,IAAPsT,EAAgBA,EAAK,CAAC,EJiN7FC,CAA2BH,IAClDI,IKnNgCC,GLmNQ,IAAI1iB,IKnNE2iB,GLmNK,IAAIhkB,QKlNlD,CAACikB,EAAQzd,KACZ,MAAM0d,EAAmBF,GAAYhjB,IAAIijB,GACzC,QAAyBnoB,IAArBooB,EACA,OAAOA,EAEX,MAAMC,EAAcJ,GAAa/iB,IAAIijB,GACrC,QAAoBnoB,IAAhBqoB,EACA,OAAOA,EAEX,IACI,MAAMC,EAAwB5d,IAC9B,OAAI4d,aAAiC/hB,SACjC0hB,GAAajjB,IAAImjB,EAAQG,GAClBA,EACF3G,OAAM,KAAM,IACZ4G,MAAMC,IACPP,GAAaliB,OAAOoiB,GACpBD,GAAYljB,IAAImjB,EAAQK,GACjBA,OAGfN,GAAYljB,IAAImjB,EAAQG,GACjBA,EACX,CACA,MAEI,OADAJ,GAAYljB,IAAImjB,GAAQ,IACjB,CACX,IA5B6B,IAACF,GAAcC,GLoNpD,MAAM,GMpN+C,oBAAXjb,OAAyB,KAAOA,ONqNpEwb,GOjNyC,EAACT,EAAiB/R,IACtD,CAACL,EAAevL,KACnB,MAAM2X,EAAqBpM,EAAc8S,iBAIzC,GAFA5G,GAA6BE,EAAoB3X,KAE3CA,EAAQkL,YAAclL,EAAQmL,aAChC,MAAMS,IAUV,OARA2L,GAA4BI,EAAoB3X,EAAS,WACzDuX,GAA4BI,EAAoB3X,EAAS,eACzDuX,GAA4BI,EAAoB3X,EAAS,eACzDuX,GAA4BI,EAAoB3X,EAAS,yBAEpD2d,EAAgBjG,IAAqD,IAAMA,GAAoDC,MClBhF,CAACA,IACzDA,EAAmBC,uBAA0BlE,IACzC,MAAM4K,EAAqB,IAAIC,WAAW7K,EAAM9d,QAChD+hB,EAAmB6G,sBAAsBF,GACzC,MAAM1oB,EAASb,KAAKoD,IAAImmB,EAAmB1oB,OAAQ+hB,EAAmB1M,SACtE,IAAK,IAAI5S,EAAI,EAAGA,EAAIzC,EAAQyC,GAAK,EAC7Bqb,EAAMrb,GAAqC,UAA/BimB,EAAmBjmB,GAAK,KAExC,OAAOqb,CAAK,CACf,EDUO+K,CAA6C9G,GAE1CA,CAAkB,EPgMA+G,CAAgCf,GAAiB/R,IAC5E+S,GStNoC,CAAClS,GAC/BtC,IACJ,MAAMoK,EAAuB9H,EAAwBtC,GACrD,GAAsC,OAAlCoK,EAAqBqK,SACrB,MAAM,IAAI/mB,MAAM,mEAEpB,OAAO0c,EAAqBqK,QAAQ,ETgNfC,CAA2BpS,IAClDqS,GUvNuC,EAACrS,EAAyBkS,EAAsBlP,IAClFpV,MAAO8P,EAAW4J,EAA2BzI,KAChD,MAAMiJ,EAAuB9H,EAAwBtC,SAC/CjO,QAAQ6iB,IAAIxK,EAAqB5J,aAClChN,KAAI,CAACkN,EAAahB,IAAUjB,MAAMW,KAAKsB,GAAalN,KAAItD,OAAQ8N,EAAQyB,MACzE,MAAMoV,EAAoBL,EAAqBxW,GACzC8W,QAAgCD,EAAkBxf,OAAO2I,EAAQ4L,GACjElG,EAAc1D,EAAUhE,QAAQ0H,YACjC4B,EAAetH,IAAYgC,IAAc0D,GAAgB4B,EAAetF,IACzE8U,EAAwB9kB,QAAQmR,EAAiB1B,EAAQC,EAC7D,MAEC7M,QAAO,CAACkiB,EAAsBC,IAAsB,IAAID,KAAyBC,IAAoB,IAAI,EV2MtFC,CAA8B3S,GAAyBkS,GAAsBlP,IACvG4P,GWvN2C,EAACjB,EAA0B7O,EAAoBuP,IACrF,KACH,MAAMQ,EAA8B,IAAIzlB,QAqBxC,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAMwL,EAA6BD,EAA4BzkB,IAAIkZ,GACnE,YAAmCpe,IAA/B4pB,EACOrjB,QAAQT,QAAQ8jB,GAxBRllB,OAAOwZ,EAAOE,KACrC,IAAI4D,EAAqBpI,EAAmBsE,GAG5C,IAD2CxI,GAAiBsM,EAAoB5D,GACvC,CACrC,MAAM/T,EAAU,CACZ+K,aAAc4M,EAAmB5M,aACjC1E,iBAAkBsR,EAAmBtR,iBACrC2E,sBAAuB2M,EAAmB3M,sBAC1CC,QAAS0M,EAAmB1M,QAC5BC,YAAayM,EAAmBzM,YAChCC,YAAawM,EAAmBxM,YAChCC,sBAAuBuM,EAAmBvM,uBAE9CuM,EAAqByG,EAAyBrK,EAA2B/T,EAC7E,CAGA,OAFAsf,EAA4B3kB,IAAIoZ,EAA2B4D,SACrDmH,EAAwBjL,EAAOE,EAA2B4D,GACzDA,CAAkB,EAQd6H,CAAmB3L,EAAOE,EACrC,EACH,EXwL0B0L,CAAkCrB,GAA0B7O,GAAoBuP,IAC7GY,IYxNiCC,GZwNShY,EYvNpCxB,IACJ,MAAMoF,EAAgBoU,GAAa9kB,IAAIsL,GACvC,QAAsBxQ,IAAlB4V,EACA,MAAM,KAEV,OAAO,CAAe,GANQ,IAACoU,GZyNvC,MAAMC,Ga1NoD,CAAChd,GACxC,OAAXA,EACO,KAEPA,EAAOoZ,eAAe,uBACfpZ,EAAOid,oBAEXjd,EAAOoZ,eAAe,6BAA+BpZ,EAAOkd,0BAA4B,KbmNtDC,CAA2C,IAClFC,Gc3N2C,CAACJ,GACtCK,GAC4C,OAAzCL,GAAiDK,aAAoBL,EdyNhDM,CAAkCN,IAChEO,GAA2B,IAAItmB,QAC/BumB,Ge7NsC,CAACvD,GAClC,MACH,WAAArK,CAAY6N,GACRppB,KAAKopB,mBAAqBA,EAC1BppB,KAAKqpB,WAAa,IAAIzmB,OAC1B,CACA,gBAAAuB,CAAiBlH,EAAMiR,EAAUnF,GAC7B,GAAiB,OAAbmF,EAAmB,CACnB,IAAIob,EAAuBtpB,KAAKqpB,WAAWzlB,IAAIsK,QAClBxP,IAAzB4qB,IACAA,EAAuB1D,EAAkB5lB,KAAMkO,GACvB,mBAAbA,GACPlO,KAAKqpB,WAAW3lB,IAAIwK,EAAUob,IAGtCtpB,KAAKopB,mBAAmBjlB,iBAAiBlH,EAAMqsB,EAAsBvgB,EACzE,CACJ,CACA,aAAAiV,CAAc7P,GACV,OAAOnO,KAAKopB,mBAAmBpL,cAAc7P,EACjD,CACA,mBAAAC,CAAoBnR,EAAMiR,EAAUnF,GAChC,MAAMugB,EAAoC,OAAbpb,OAAoBxP,EAAYsB,KAAKqpB,WAAWzlB,IAAIsK,GACjFlO,KAAKopB,mBAAmBhb,oBAAoBnR,OAA+ByB,IAAzB4qB,EAAqC,KAAOA,EAAsBvgB,EACxH,GfqMuB,CAA6B6c,IACtD2D,GgB9N6C,CAAC5d,GACjC,OAAXA,EACO,KAEPA,EAAOoZ,eAAe,gBACfpZ,EAAO6d,aAEX7d,EAAOoZ,eAAe,sBAAwBpZ,EAAO8d,mBAAqB,KhBuN/CC,CAAoC,IACpEC,GiB/NoC,CAACJ,GAC/BP,GACqC,OAAlCO,GAA0CP,aAAoBO,EjB6NhDK,CAA2BL,IAClD,GkBhOiC,CAAC5d,GAC5Bqd,GACc,OAAXrd,GAA+C,mBAArBA,EAAOke,WAA4Bb,aAAoBrd,EAAOke,UlB8N7EC,CAAwB,IAC5CC,GmBjOkC,CAACpe,GAC7Bqd,GACc,OAAXrd,GAAgD,mBAAtBA,EAAOqe,YAA6BhB,aAAoBrd,EAAOqe,WnB+N7EC,CAAyB,IAC9CrR,GoBlOiD,CAACjN,GACrC,OAAXA,EACO,KAEJA,EAAOoZ,eAAe,oBAAsBpZ,EAAOue,iBAAmB,KpB8NvCC,CAAwC,IAC5EC,G5D9EoC,EAACC,EAAyBC,EAA0B5D,EAAiB6D,EAA6B5V,EAAsByK,EAA0B/T,EAAyBmf,EAAuBC,EAActB,EAAwBV,EAAkBkB,EAAsB3P,EAAmB+P,EAAoBhB,EAA6BnQ,IACnX,cAAwBuQ,EAC3B,WAAA5N,CAAYrM,EAAS4L,EAAUzG,EAAiB0T,GAC5C2C,MAAMrW,GACNrU,KAAK2qB,SAAWzb,EAChBlP,KAAK4qB,iBAAmBvW,EACxB,MAAMC,EAAgBmU,EAAiBvZ,GAEnCya,EAAqBrV,KACrB,IACIoS,EAAgBhO,IAAsC,IAC3CA,GAAqCpE,EAAesE,MAEnEsB,GAA8B7F,GAElC9D,EAAiB7M,IAAI1D,KAAMqU,GAC3B1D,EAAgBjN,IAAI1D,KAAM,IAAI2K,KACR,WAAlBuE,EAAQK,OAAsBuL,GAC9B3H,EAAyBnT,MAE7BqqB,EAAwBrqB,KAAM+nB,EAAmB1T,EACrD,CACA,gBAAIP,GACA,OAAO9T,KAAK4qB,iBAAiB9W,YACjC,CACA,gBAAIA,CAAahX,GACbkD,KAAK4qB,iBAAiB9W,aAAehX,CACzC,CACA,oBAAIsS,GACA,OAAOpP,KAAK4qB,iBAAiBxb,gBACjC,CACA,oBAAIA,CAAiBtS,GACjBkD,KAAK4qB,iBAAiBxb,iBAAmBtS,CAC7C,CACA,yBAAIiX,GACA,OAAO/T,KAAK4qB,iBAAiB7W,qBACjC,CACA,yBAAIA,CAAsBjX,GACtBkD,KAAK4qB,iBAAiB7W,sBAAwBjX,CAClD,CACA,WAAIoS,GACA,OAAOlP,KAAK2qB,QAChB,CACA,kBAAItb,GACA,OAAOrP,KAAK4qB,iBAAiBvb,cACjC,CACA,mBAAIC,GACA,OAAOtP,KAAK4qB,iBAAiBtb,eACjC,CAEA,OAAApM,CAAQ0T,EAAajE,EAAS,EAAGC,EAAQ,GAErC,GAAID,EAAS,GAAKA,GAAU3S,KAAK4qB,iBAAiBtb,gBAC9C,MAAMqF,IAEV,MAAML,EAAgBmU,EAAiBzoB,KAAK2qB,UACtChQ,EAAYoO,EAA4BzU,GAC9C,GAAI0F,EAAkBpD,IAAgBmT,EAAmBnT,GACrD,MAAMwI,IAEV,GAAIrI,GAAYH,GAAc,CAC1B,MAAMkB,EAA6BQ,GAAmB1B,GACtD,IACI,MAAMyD,EAAazC,GAAwC5X,KAAK4qB,iBAAkB9S,EAA4BnF,EAAQC,GAChHiY,EAAYpS,GAAmBzY,OACjC2a,GAAakQ,IACb7qB,KAAK4qB,iBAAiBjnB,cAAc0W,GAEb,WAAvBra,KAAKkP,QAAQK,QAAuBsb,GAAapS,GAAmB7B,IACpEzD,EAAyByD,EAEjC,CACA,MAAOjO,GAEH,GAAiB,KAAbA,EAAIN,KACJ,MAAM+W,IAEV,MAAMzW,CACV,CAGA,GAFmC2hB,EAAyBtqB,KAAM4W,EAAajE,EAAQC,EAAO+H,GAE9D,CAC5B,MAAMhB,EAAS8Q,EAAa,CAACzqB,MAAO4W,GACpC8C,GAAuBC,EAAQ4Q,EAA4B5P,GAC/D,CACA,OAAO/D,CACX,CACA,MAAMmE,EAAmBxC,GAAoB3B,GAM7C,GAA8B,iBAA1BmE,EAAiBlV,MAAyD,OAA9BkV,EAAiB+P,SAC7D,MAAMzf,IAEV,IACIrL,KAAK4qB,iBAAiB1nB,QAAQ6X,EAAkBpI,IAC5CgI,GAAalC,GAAmBzY,QAChCA,KAAK4qB,iBAAiBjnB,WAAWoX,EAAkBpI,EAE3D,CACA,MAAOhK,GAEH,GAAiB,KAAbA,EAAIN,KACJ,MAAM+W,IAEV,MAAMzW,CACV,CAGA,GAFoC+R,GAAwC1a,KAAM4W,EAAajE,EAAQgI,GAEtE,CAC7B,MAAMhB,EAAS8Q,EAAa,CAACzqB,MAAO4W,GACpC8C,GAAuBC,EAAQ4Q,EAA4B5P,GAC/D,CACJ,CACA,UAAAhX,CAAW2W,EAAqB3H,EAAQC,GACpC,IAAImY,EACJ,MAAMzW,EAAgBmU,EAAiBzoB,KAAK2qB,UACtChQ,EAAYoO,EAA4BzU,GAC9C,QAA4B5V,IAAxB4b,EACAyQ,EA1KY,EAAC7Z,EAAQyJ,KACjC,MAAMqQ,EAA+BxV,GAAwBtE,GACvD6Z,EAAe,GACrB,IAAK,MAAM7T,KAAoB8T,EAA6BpQ,QACpD3D,GAA4BC,GAC5BgE,GAAwBhK,EAAQyJ,KAAczD,GAG9CkE,GAAyBlK,EAAQyJ,KAAczD,GAEnD6T,EAAahqB,KAAKmW,EAAiB,IAGvC,OADA8T,EAA6BpQ,QAAQJ,QAC9BuQ,CAAY,EA6JQE,CAAoBjrB,KAAM2a,QAExC,GAAmC,iBAAxBL,EAAkC,CAC9C,GAAIA,EAAsB,GAAKA,GAAuBta,KAAKsP,gBACvD,MAAMqF,IAEVoW,EAjKiB,EAAC7Z,EAAQyJ,EAAWhI,KACjD,MAAMqY,EAA+BxV,GAAwBtE,GACvD6Z,EAAe,GACrB,IAAK,MAAM7T,KAAoB8T,EAA6BpQ,QACpD1D,EAAiB,KAAOvE,IACpBsE,GAA4BC,GAC5BgE,GAAwBhK,EAAQyJ,KAAczD,GAG9CkE,GAAyBlK,EAAQyJ,KAAczD,GAEnD6T,EAAahqB,KAAKmW,EAAiB,IACnC8T,EAA6BpQ,QAAQnW,OAAOyS,IAGpD,OAAO6T,CAAY,EAkJQG,CAAyBlrB,KAAM2a,EAAWL,EAC7D,KACK,CACD,QAAe5b,IAAXiU,IAAyBA,EAAS,GAAKA,GAAU3S,KAAKsP,iBACtD,MAAMqF,IAEV,GAAIoC,GAAYuD,SAAkC5b,IAAVkU,IAAwBA,EAAQ,GAAKA,GAAS0H,EAAoBjL,gBACtG,MAAMsF,IAGV,GADAoW,EAzJsB,EAAC7Z,EAAQyJ,EAAW/D,EAAajE,EAAQC,KAC3E,MAAMoY,EAA+BxV,GAAwBtE,GAC7D,OAAOS,MAAMW,KAAK0Y,EAA6BpQ,SAC1CrI,QAAQ2E,KAAqBA,EAAiB,KAAON,QAC1ClY,IAAXiU,GAAwBuE,EAAiB,KAAOvE,QACtCjU,IAAVkU,GAAuBsE,EAAiB,KAAOtE,KAC/ClM,KAAKwQ,IACFD,GAA4BC,GAC5BgE,GAAwBhK,EAAQyJ,KAAczD,GAG9CkE,GAAyBlK,EAAQyJ,KAAczD,GAEnD8T,EAA6BpQ,QAAQnW,OAAOyS,GACrCA,EAAiB,KAC1B,EA0IyBiU,CAA8BnrB,KAAM2a,EAAWL,EAAqB3H,EAAQC,GAC/D,IAAxBmY,EAAapsB,OACb,MAAMygB,GAEd,CAEA,IAAK,MAAMxI,KAAemU,EAAc,CACpC,MAAMpR,EAAS8Q,EAAa,CAACzqB,MAAO4W,GACpC8C,GAAuBC,EAAQ6Q,EACnC,CACJ,G4DpEqBY,EqBnOiBC,GrBmOwC/a,EqBlO3E,CAAC4C,EAAW6U,EAAmB1T,KAClC,MAAMX,EAAe,GACrB,IAAK,IAAItS,EAAI,EAAGA,EAAIiT,EAAgBhF,eAAgBjO,GAAK,EACrDsS,EAAa3S,KAAK,IAAI4J,KAE1B0gB,GAA0B3nB,IAAIwP,EAAW,CACrCQ,eACAkH,QAAS,IAAIjQ,IACb+H,cAAe,IAAI9P,QACnB+kB,SAAUI,GACZ,GCRoC,EAAC/B,EAAqCE,EAAsCtO,EAAyCwO,EAAwC/N,EAA8C7C,EAAyB+Q,EAAsBtT,EAA8BqF,EAAoBnB,EAAoBhC,EAAmBqD,EAAgBC,KAC7Y,MAAM6S,EAAqB,IAAI1oB,QAC/B,MAAO,CAACsO,EAAQ0F,EAAajE,EAAQC,EAAO+H,KACxC,MAAM,aAAEjH,EAAY,cAAEhB,GAAkB8C,EAAwBoB,IAC1D,QAAEgE,GAAYpF,EAAwBtE,GACtC2J,EAAiB5H,EAA6B/B,GAC9CoC,EAAiBwH,IACnB,MAAMhD,EAA6BQ,EAAmB1B,GAChDiB,EAAwBS,EAAmBpH,GACjD,GAAI4J,EAAU,CACV,MAAME,EAAoBvI,EAAwCC,EAAexB,EAAQyB,EAAQC,GACjGoT,EAAoCtS,EAAcxC,EAAQ8J,GAAmB,GACxEL,GAAcnC,EAAetH,IAC9B0G,EAAwCC,EAAuBC,EAA4BnF,EAAQC,GAEnG6F,EAAmB7B,IACnBzD,EAAyByD,EAEjC,KACK,CACD,MAAMoE,EAAoBoL,EAAuC1S,EAAcxC,EAAQyB,EAAQC,GAC/FsT,EAAqCxT,EAAeE,EAAOoI,GAAmB,GACzEL,GAAcnC,EAAetH,IAC9BmH,EAA6CR,EAAuBC,EAA4BnF,EAAQC,GAE5G,MAAM2Y,EAAWhF,EAAqB3P,GACtC,GAAiB,IAAb2U,EACIpW,EAAkByB,IAClBnD,GAAuCmD,EAAalD,OAGvD,CACD,MAAM8X,EAAoBF,EAAmB1nB,IAAIgT,QACvBlY,IAAtB8sB,GACAC,aAAaD,GAEjBF,EAAmB5nB,IAAIkT,EAAa8U,YAAW,KACvCvW,EAAkByB,IAClBnD,GAAuCmD,EAAalD,EACxD,GACU,IAAX6X,GACP,CACJ,GAEJ,QAAIpU,EAAmByD,EAAS,CAAChE,EAAajE,EAAQC,IAASsE,GAAqBA,EAAiB,KAAON,GAAeM,EAAiB,KAAOvE,GAAUuE,EAAiB,KAAOtE,IAAO,KACxLiI,EAAezH,IAAIE,GACf6B,EAAkBjE,GAClB8U,EAAoCtS,EAAcxC,EAAQ,CAACyB,EAAQC,EAAOU,IAAgB,GAG1F4S,EAAqCxT,EAAeE,EAAO,CAAC1B,EAAQyB,EAAQW,IAAgB,IAEzF,EAEC,CACf,EtByKgHqY,CAA+B3F,GAAqCE,GAAsCtO,GAAyCwO,GAAwC/N,GAA8C7C,GAAyB+Q,GAAsBtT,EAA8BqF,GAAoBnB,GAAoBhC,GAAmBqD,GAAgBC,IAAqBiO,GuBlOzd,EAACkF,EAAevT,EAA8C7C,EAAyB8C,EAAoBC,EAAqBpD,IACtKwF,GACG,CAACzH,EAAW6G,KACf,MAAM8R,EAAeD,EAAchoB,IAAIsP,GACvC,QAAqBxU,IAAjBmtB,EAA4B,CAC5B,IAAKlR,GAAaxF,EAAkBjC,GAAY,CAC5C,MAAM2E,EAAwBS,EAAmBpF,IAC3C,QAAE0H,GAAYpF,EAAwBtC,GAC5C,IAAK,MAAMP,KAAUiI,EACjB,GAAI3D,GAA4BtE,GAAS,CACrC,MAAMmF,EAA6BQ,EAAmB3F,EAAO,IAC7D0F,EAA6CR,EAAuBC,EAA4BnF,EAAO,GAAIA,EAAO,GACtH,KACK,CACD,MAAMmZ,EAA8BvT,EAAoB5F,EAAO,IAC/DkF,EAAsBlU,WAAWmoB,EAA6BnZ,EAAO,GACzE,CAER,CACAiZ,EAAcloB,IAAIwP,EAAW6G,EACjC,MAEI6R,EAAcloB,IAAIwP,EAAW2Y,EAAe9R,EAChD,EvB2MghBgS,CAAmCnb,EAAgByH,GAA8C7C,GAAyB8C,GAAoBC,GAAqBpD,IAAoBR,GAAsByK,GAA0B,GwBlOxtB,EAACxH,EAAyCgU,EAAepW,EAAyB8C,EAAoBC,EAAqBkQ,EAAkBtT,EAAmB4T,IAChM,CAAC7V,EAAW6G,KACf,MAAM8R,EAAeD,EAAchoB,IAAIsP,GACvC,QAAqBxU,IAAjBmtB,EACA,MAAM,IAAIjrB,MAAM,qCAEpB,MAAM0T,EAAgBmU,EAAiBvV,EAAUhE,SAC3CyL,EAAYoO,EAA4BzU,GAC9C,GAAIuX,IAAiB9R,GAEjB,GADA6R,EAAcnnB,OAAOyO,IAChByH,GAAaxF,EAAkBjC,GAAY,CAC5C,MAAM2E,EAAwBS,EAAmBpF,IAC3C,QAAE0H,GAAYpF,EAAwBtC,GAC5C,IAAK,MAAMP,KAAUiI,EACjB,GAAI3D,GAA4BtE,GAAS,CACrC,MAAMmF,EAA6BQ,EAAmB3F,EAAO,IAC7DiF,EAAwCC,EAAuBC,EAA4BnF,EAAO,GAAIA,EAAO,GACjH,KACK,CACD,MAAMmZ,EAA8BvT,EAAoB5F,EAAO,IAC/DkF,EAAsB3U,QAAQ4oB,EAA6BnZ,EAAO,GACtE,CAER,OAGAiZ,EAAcloB,IAAIwP,EAAW2Y,EAAe9R,EAChD,ExBuMoxBiS,CAA4BpU,GAAyChH,EAAgB4E,GAAyB8C,GAAoBC,GAAqBkQ,GAAkBtT,GAAmB4T,IyBjOt7B,EAACG,EAA0B1T,EAAyBtD,IAC3E,SAASuY,EAAawB,EAAOC,GAChC,MAAMhZ,EAAY6D,GAAYmV,GAAYA,EAAWha,EAAegX,EAA0BgD,GAC9F,GCLmB,CAAChZ,GACjB,cAAeA,EDIdiZ,CAAYjZ,GACZ,MAAO,GAEX,GAAI+Y,EAAM,KAAO/Y,EACb,MAAO,CAAC+Y,GAEZ,GAAIA,EAAM/b,SAASgD,GACf,MAAO,GAEX,MAAM,QAAE0H,GAAYpF,EAAwBtC,GAC5C,OAAOvB,MAAMW,KAAKsI,GACblU,KAAKwQ,GAAqBuT,EAAa,IAAIwB,EAAO/Y,GAAYgE,EAAiB,MAC/EnR,QAAO,CAACqmB,EAAcC,IAAiBD,EAAa9lB,OAAO+lB,IAAe,GACnF,EzBiNk/BC,CAAmBpD,GAA0B1T,GAAyBtD,GAAiBiX,GAAwBV,GAAkBkB,GAAsB,GAAmBI,GAAoBhB,GAA6BnQ,IqBnOpqC,IAACyS,GrBoO9C,MAAMkB,GnG3NuC,EAACC,EAAuBpE,EAA4BzT,EAAsBwS,EAA0BsB,EAAkBM,IACxJ,cAA2ByD,EAC9B,WAAAjR,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK5Y,MAAoB9K,GACzC2X,EAAqByG,EAAyB7S,EAAemY,GAEnE/B,MAAMxb,GAAS,EAAOwR,EADSqI,EAA4BzU,GAAiB8T,IAA+B,MAE3GpoB,KAAK0sB,oBAAsBhM,CAC/B,CACA,WAAI1M,GACA,OAAOhU,KAAK0sB,oBAAoB1Y,OACpC,CACA,WAAIA,CAAQlX,GACRkD,KAAK0sB,oBAAoB1Y,QAAUlX,CACvC,CACA,qBAAI6vB,GACA,OAAO3sB,KAAK0sB,oBAAoBC,iBACpC,CACA,eAAI1Y,GACA,OAAOjU,KAAK0sB,oBAAoBzY,WACpC,CACA,eAAIA,CAAYnX,GAEZ,MAAMmX,EAAcjU,KAAK0sB,oBAAoBzY,YAE7C,GADAjU,KAAK0sB,oBAAoBzY,YAAcnX,IACjCA,EAAQkD,KAAK0sB,oBAAoBxY,aAEnC,MADAlU,KAAK0sB,oBAAoBzY,YAAcA,EACjCU,GAEd,CACA,eAAIT,GACA,OAAOlU,KAAK0sB,oBAAoBxY,WACpC,CACA,eAAIA,CAAYpX,GAEZ,MAAMoX,EAAclU,KAAK0sB,oBAAoBxY,YAE7C,GADAlU,KAAK0sB,oBAAoBxY,YAAcpX,IACjCkD,KAAK0sB,oBAAoBzY,YAAcnX,GAEzC,MADAkD,KAAK0sB,oBAAoBxY,YAAcA,EACjCS,GAEd,CACA,yBAAIR,GACA,OAAOnU,KAAK0sB,oBAAoBvY,qBACpC,CACA,yBAAIA,CAAsBrX,GACtBkD,KAAK0sB,oBAAoBvY,sBAAwBrX,CACrD,CACA,oBAAA8vB,CAAqBnQ,GACjBzc,KAAK0sB,oBAAoBE,qBAAqBnQ,EAClD,CACA,qBAAA8K,CAAsB9K,GAClBzc,KAAK0sB,oBAAoBnF,sBAAsB9K,EACnD,CACA,qBAAAoQ,CAAsBpQ,GAClBzc,KAAK0sB,oBAAoBG,sBAAsBpQ,EACnD,CACA,sBAAAkE,CAAuBlE,GACnBzc,KAAK0sB,oBAAoB/L,uBAAuBlE,EACpD,GmG+JwBqQ,CAA8B1C,GAAsBhC,GAA4BzT,GAAsBwS,GAA0BsB,GAAkBM,IAE5KgE,GAAmB,IAAI1c,QACvB2c,G2BvO4C,CAACrhB,GAChC,OAAXA,EACO,KAEPA,EAAOoZ,eAAe,eACfpZ,EAAOshB,YAEX,K3BgO0BC,CAAmC,IAClEC,I4BxO4CC,G5BwOoB,IAAIlN,YAAY,G4BvO1EpjB,IACJswB,GAAY,GAAKtwB,EACVswB,GAAY,KAHsB,IAACA,G5ByOlD,MAAMC,G6BzOiD,EAACF,EAA6BxY,IACzEE,IACJA,EAAYiH,gBAAkB,CAAClF,EAAa0W,EAAuBC,EAAuB,KACtF,MAAMtR,EAAekR,EAA4BI,GAC3CvR,EAAgBmR,EAA4BG,GAClD,GAAItR,GAAiBnH,EAAYG,iBAC7B,MAAML,IAEV,MAAM6Y,EAAoB3Y,EAAYlW,OAChCwa,EAActE,EAAYC,eAAekH,GACzCyR,EAAoB7W,EAAYjY,OACtC,IAAK,IAAIyC,EAAI6a,EAAe,GAAKA,EAAe,EAAG7a,EAAI6a,EAAeuR,GAAqBpsB,EAAIqsB,EAAmBrsB,GAAK,EACnHwV,EAAYxV,GAAK+X,EAAY/X,EAAI6a,EACrC,EAEJpH,EAAYJ,cAAgB,CAACvD,EAAQoc,EAAuBC,EAAuB,KAC/E,MAAMtR,EAAekR,EAA4BI,GAC3CvR,EAAgBmR,EAA4BG,GAClD,GAAItR,GAAiBnH,EAAYG,iBAC7B,MAAML,IAEV,MAAM6Y,EAAoB3Y,EAAYlW,OAChCwa,EAActE,EAAYC,eAAekH,GACzC0R,EAAexc,EAAOvS,OAC5B,IAAK,IAAIyC,EAAI6a,EAAe,GAAKA,EAAe,EAAG7a,EAAI6a,EAAeuR,GAAqBpsB,EAAIssB,EAActsB,GAAK,EAC9G+X,EAAY/X,EAAI6a,GAAgB/K,EAAO9P,EAC3C,CACH,E7B8MiCusB,CAAwCR,GAA6BxY,IACzGiZ,G8B1O4D,CAACT,GACvDtY,IACJA,EAAYiH,gBAAkB,CAAEA,GACrB,CAAClF,EAAa0W,EAAuBC,EAAuB,KAC/D,MAAMtR,EAAekR,EAA4BI,GAC3CvR,EAAgBmR,EAA4BG,GAClD,GAAIrR,EAAepH,EAAYlW,OAC3B,OAAOmd,EAAgB3Y,KAAK0R,EAAa+B,EAAaoF,EAAeC,EACzE,EANsB,CAQ3BpH,EAAYiH,iBACfjH,EAAYJ,cAAgB,CAAEA,GACnB,CAACvD,EAAQoc,EAAuBC,EAAuB,KAC1D,MAAMtR,EAAekR,EAA4BI,GAC3CvR,EAAgBmR,EAA4BG,GAClD,GAAIrR,EAAepH,EAAYlW,OAC3B,OAAO8V,EAActR,KAAK0R,EAAa3D,EAAQ8K,EAAeC,EAClE,EANoB,CAQzBpH,EAAYJ,cAAc,E9BuNgBoZ,CAAmDV,IAClGW,G9FtOsC,EAACf,EAAkBrG,EAAiBrb,EAAyB2hB,EAA8BrE,EAAsCoF,EAAyCV,EAAmCO,KACrP,IAAI9Q,EAA4B,KAChC,OAAO,MAAMmQ,EACT,WAAA1R,CAAYxS,GACR,GAA6C,OAAzC4f,EACA,MAAM,IAAI/nB,MAAM,uDAEpB,MAAM,OAAEjC,EAAM,iBAAEqW,EAAgB,WAAEnL,GAAe,IAAK,MAAoBd,GACxC,OAA9B+T,IACAA,EAA4B,IAAI6L,EAAqC,EAAG,EAAG,QAM/E,MAAM9T,EAA+C,OAAjCmY,GAChBtG,EAAgBqH,EAAyCA,GACvD,IAAIf,EAA6B,CAAEruB,SAAQqW,mBAAkBnL,eAC7DiT,EAA0B5D,aAAalE,EAAkBrW,EAAQkL,GAEvE,GAAqC,IAAjCgL,EAAYG,iBACZ,MAAM3J,IAiBV,MAb2C,mBAAhCwJ,EAAYiH,iBACnBuR,EAAkCxY,GAClCD,GAAoCC,IAG9B6R,EAAgBnS,IAAqD,IAAMA,GAAoDM,MACrI+Y,EAA6C/Y,GAEjDkY,EAAiB3Z,IAAIyB,GAKdA,CACX,CACA,OAAQxU,OAAO2tB,aAAaC,GACxB,OAAsB,OAAbA,GAAyC,iBAAbA,GAAyB1oB,OAAOyf,eAAeiJ,KAAchB,EAAYzgB,WAC1GugB,EAAiB/oB,IAAIiqB,EAC7B,EACH,E8F0L0BC,CAA6BnB,GAAkBrG,GAAiB,GAAyBsG,GAA8BrE,G+B1O/F,CAACqE,GAC7C,KACH,GAAqC,OAAjCA,EACA,OAAO,EAEX,IACI,IAAIA,EAA6B,CAAEruB,OAAQ,EAAGkL,WAAY,OAC9D,CACA,MACI,OAAO,CACX,CACA,OAAO,CAAI,E/B+NyKskB,CAAwCnB,IAA+BK,GAAmCO,IAEhSQ,GgC7OmC,CAACzL,GAC/B,CAACrO,EAAewM,KACnB,MAAM8B,EAAiBD,EAAqBrO,EAAe,CACvDR,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBoC,KAAM,IAEV2K,EAA+B5d,QAAQ0f,GAAgB1f,QAAQoR,EAAcsC,aAC7E,MAAMjT,EAAa,KACfmd,EAA+B1S,oBAAoB,QAASzK,GAC5Dmd,EAA+Bnd,WAAWif,GAC1CA,EAAejf,YAAY,EAE/Bmd,EAA+B3c,iBAAiB,QAASR,EAAW,EhC+NhD0qB,CAA0B1L,IAChD2L,GiC9OwC,EAAC5G,EAAsBjS,EAA0B+C,IACpFpV,MAAOsS,EAAYoH,EAA2B/B,KACjD,MAAMrE,EAAwBjB,EAAyBC,SACjDzQ,QAAQ6iB,IAAInW,MAAMW,KAAKoE,EAAsBhD,cAAchN,KAAItD,OAAQ8N,EAAQyB,MACjF,MAAMoV,EAAoBL,EAAqBxW,GACzC8W,QAAgCD,EAAkBxf,OAAO2I,EAAQ4L,GAClEtE,EAAetH,IAChB8W,EAAwB9kB,QAAQ6X,EAAkBpI,EACtD,IACD,EjCqOsB4b,CAA+B7G,GAAsBjS,GAA0B+C,IAC1GgW,GkC/OiC,CAACF,GAC7B,CAACxR,EAA2BpH,EAAYqF,IACpCuT,EAAyB5Y,EAAYoH,EAA2B/B,GlC6OrD0T,CAAwBH,IAC5CI,GmC1OkD,EAACN,EAAqB1H,EAAiBiI,EAA6DC,EAA2DC,EAA2DzJ,EAAkEG,EAA+DC,EAAiEsJ,EAAqDC,EAAoDtJ,IACljB,CAACnR,EAAevL,KACnB,MAAMsc,EAA8B/Q,EAAc8E,qBAkClD,OAjCAoH,GAA6B6E,EAA6Btc,GAC1D6X,GAAqCyE,EAA6Btc,EAAS,gBAC3EuX,GAA4B+E,EAA6Btc,EAAS,UAElEuX,GAA4B+E,EAA6Btc,EAAS,QAClEuX,GAA4B+E,EAA6Btc,EAAS,WAClEuX,GAA4B+E,EAA6Btc,EAAS,aAE7D2d,EAAgBiI,GAA6D,IAAMA,EAA4Dra,MChBxF,CAAC+Q,IACjEA,EAA4BzgB,MAAQ,CAAEA,IAClC,IAAIoqB,GAAc,EAClB,MAAO,CAACjO,EAAO,EAAG1K,EAAS,EAAG9Y,KAC1B,GAAIyxB,EACA,MAAM,KAEVpqB,EAAMzB,KAAKkiB,EAA6BtE,EAAM1K,EAAQ9Y,GACtDyxB,GAAc,CAAI,CAEzB,EATmC,CASjC3J,EAA4BzgB,MAAM,EDO7BqqB,CAAqD5J,GAGpDqB,EAAgBkI,GAA2D,IAAMA,EAA0Dta,MAC5Iwa,EAAoDzJ,GAGnDqB,EAAgBmI,GAA2D,IAAMA,EAA0Dva,MAC5Iya,EAAmD1J,EAA6B/Q,GAG/EoS,EAAgBtB,GAAkE,IAAMA,EAAiE9Q,MAC1JuM,GAA0DwE,GAGzDqB,EAAgBnB,GAA+D,IAAMA,EAA8DjR,MACpJmR,EAAuDJ,EAA6B/Q,GAGnFoS,EAAgBlB,GAAiE,IAAMA,EAAgElR,MACxJ2M,GAAyDoE,GAG7D+I,EAAoB9Z,EAAe+Q,GAC5BA,CAA2B,EnCsMA6J,CAAyCd,GAAqB1H,IqChP5BpS,IACxE,MAAM+Q,EAA8B/Q,EAAc8E,qBAClDiM,EAA4BzgB,QAC5B,IACIygB,EAA4BzgB,OAChC,CACA,MACI,OAAO,CACX,CACA,OAAO,CAAK,ICT0D0P,IACtE,MAAM+Q,EAA8B/Q,EAAc8E,qBAC5C5E,EAAoBF,EAAc4E,aAAa,EAAG,EAAG,OAC3DmM,EAA4Btb,OAASyK,EACrC,IACI6Q,EAA4BzgB,MAAM,EAAG,EACzC,CACA,MACI,OAAO,CACX,CACA,OAAO,CAAI,ICV2D0P,IACtE,MAAM+Q,EAA8B/Q,EAAc8E,qBAClDiM,EAA4BzgB,QAC5B,IACIygB,EAA4BzV,MAChC,CACA,MACI,OAAO,CACX,CACA,OAAO,CAAI,GvCuO6RwV,GAAkEG,GAA+DC,IwChP1WH,IAC3B,IAAEzgB,EAAtCygB,EAA4BzgB,OAAUA,EAanCygB,EAA4BzgB,MAZpB,CAACmc,EAAO,EAAG1K,EAAS,EAAG9Y,KAC1B,MAAMwM,EAASsb,EAA4Btb,OAErColB,EAA2B,OAAXplB,EAAkBsM,EAASvY,KAAKsjB,IAAIrX,EAAOxM,SAAU8Y,GAE5D,OAAXtM,GAAmBolB,EAAgBplB,EAAOxM,SAAW,GAAM8nB,EAA4BnW,QAAQrF,WAC/FjF,EAAMzB,KAAKkiB,EAA6BtE,EAAM,EAAG,GAGjDnc,EAAMzB,KAAKkiB,EAA6BtE,EAAMoO,EAAe5xB,EACjE,EAE6B,GCd+B,CAACmnB,GAC9D,CAACW,EAA6B/Q,KACjC,MAAM8a,EAAkB9a,EAAc4E,aAAa,EAAG,EAAG,OACd,OAAvCmM,EAA4Btb,SAC5Bsb,EAA4Btb,OAASqlB,GAEzC1K,EAAmBW,EAA6B,UAAWzhB,GAAQ,KAC/D,MAAM9G,EAAQ8G,EAAIT,KAAKkiB,GACvB,OAAOvoB,IAAUsyB,EAAkB,KAAOtyB,CAAK,IAC/C4G,GAAS5G,GACF4G,EAAIP,KAAKkiB,EAAuC,OAAVvoB,EAAiBsyB,EAAkBtyB,IAClF,EzCqOwhBuyB,CAAyD3K,IAAqBe,IAC1mB6J,G0CjPgC,EAACC,EAAuBjB,IACnD,CAACxR,EAA2BpH,EAAYqF,KAChBwU,EAAsB7Z,GAC9B8Z,OAAOzU,GACnBuT,EAAyB5Y,EAAYoH,EAA2B/B,I1C6OtD0U,C2CjPkB,CAACha,GAChCC,IACJ,MAAMgB,EAAwBjB,EAAyBC,GACvD,GAAuC,OAAnCgB,EAAsBiR,SACtB,MAAM,IAAI/mB,MAAM,oEAEpB,OAAO8V,EAAsBiR,QAAQ,E3C2OG+H,CAA4Bja,IAA2B6Y,IACjGqB,G4CjPoD,EAACnB,EAAmBE,EAAmCpW,EAAoBgX,EAAkBzH,IAC5I,KACH,MAAM+H,EAAuC,IAAIhtB,QACjD,IAAIgC,EAAQ,KACRgL,EAAO,KAwCX,MAAO,CACH,SAAIhL,CAAM9H,GACN8H,EAAQ9H,CACZ,EACA,QAAI8S,CAAK9S,GACL8S,EAAO9S,CACX,EACA,MAAAyL,CAAOqU,EAAOE,GACV,MAAM+S,EAAsCD,EAAqChsB,IAAIkZ,GACrF,YAA4Cpe,IAAxCmxB,EACO5qB,QAAQT,QAAQqrB,GAjDCzsB,OAAOwZ,EAAOE,KAC9C,IAAIuI,EAA8B/M,EAAmBsE,GAKrD,MAAMkT,EAA8C1b,GAAiBiR,EAA6BvI,GAClG,IAAKgT,EAA6C,CAC9C,MAAM/mB,EAAU,CACZgB,OAAQsb,EAA4Btb,OACpC+J,aAAcuR,EAA4BvR,aAC1C1E,iBAAkBiW,EAA4BjW,iBAC9C2E,sBAAuBsR,EAA4BtR,sBAEnDqB,KAAMiQ,EAA4BjQ,KAClCC,QAASgQ,EAA4BhQ,QACrCC,UAAW+P,EAA4B/P,UACvCC,aAAc8P,EAA4B9P,aAAazY,OAE3DuoB,EAA8BqJ,EAAkC5R,EAA2B/T,GAC7E,OAAVnE,GACAygB,EAA4BzgB,SAASA,GAE5B,OAATgL,GACAyV,EAA4BzV,KAAKA,EAEzC,CAWA,OAVAggB,EAAqClsB,IAAIoZ,EAA2BuI,GAC/DyK,QAMKtB,EAAkB1R,EAA2BF,EAAMrH,aAAc8P,EAA4B9P,oBAJ7F+Z,EAAiBxS,EAA2BF,EAAMrH,aAAc8P,EAA4B9P,oBAMhGsS,EAAwBjL,EAAOE,EAA2BuI,GACzDA,CAA2B,EAcvB0K,CAA4BnT,EAAOE,EAC9C,EACH,E5CuLmCkT,CAA2CxB,GAAmBE,GAAmCpW,GAAoBgX,GAAkBzH,IAC7KoI,G6ClPiC,EAACC,EAA0BhH,EAA0BiH,EAAiBC,EAA0B/tB,EAAoCC,EAA4CC,EAA6CC,EAAwCC,EAAgCtF,EAA+BE,EAAoCksB,EAA+BrE,IACna,CAAChS,EAAWmd,EAAmCtV,EAAkB+P,EAAW,KAAMwF,EAAW,QAEhG,MAAM7xB,EAAesc,EAAiBje,MAChCyzB,EAAsB,IAAI,EAAAzwB,oBAAoBrB,GAC9C+xB,EAAqBH,EAAoCD,EAAyBG,GAAuB,KACzG7a,EAAa,CACf,gBAAIjX,GACA,OAAOA,CACX,EACA,YAAIqsB,GACA,OAAoB,OAAbA,EAAoB/P,EAAiB+P,SAAWA,CAC3D,EACA,YAAIwF,GACA,OAAoB,OAAbA,EAAoBvV,EAAiBuV,SAAWA,CAC3D,EACA,SAAIxzB,GACA,OAAOie,EAAiBje,KAC5B,EACA,SAAIA,CAAMA,GACNie,EAAiBje,MAAQA,EAEzB4Y,EAAWyP,eAAeroB,EAAOoW,EAAUhE,QAAQuhB,YACvD,EACA,mBAAAC,CAAoBxxB,GAEhB,GAAoD,mBAAzC6b,EAAiB2V,oBACG,OAAvBF,GACAD,EAAoBI,MAAMzd,EAAUhE,QAAQuhB,aAEhDF,EAAoBnd,IAAI/Q,EAAmCnD,IAC3D6b,EAAiB2V,oBAAoBxxB,OAEpC,CACD,MAAM0xB,EAAoBjf,MAAMW,KAAKie,GAAqBM,MAC/B,OAAvBL,GACAD,EAAoBI,MAAMzd,EAAUhE,QAAQuhB,aAEhDF,EAAoBnd,IAAI/Q,EAAmCnD,IAC3D,MAAM4xB,EAAmBnf,MAAMW,KAAKie,GAAqBM,MACzD9V,EAAiBgW,sBAAsB7xB,GACnC0xB,IAAsBE,QAAyCpyB,IAArBoyB,IACZ,2BAA1BA,EAAiB7zB,KACjB8d,EAAiBiW,6BAA6BF,EAAiBh0B,MAAOg0B,EAAiB/zB,SAExD,sBAA1B+zB,EAAiB7zB,KACtB8d,EAAiBkW,wBAAwBH,EAAiBh0B,MAAOg0B,EAAiB/zB,SAEnD,aAA1B+zB,EAAiB7zB,KACtB8d,EAAiBoK,eAAe2L,EAAiBh0B,MAAOg0B,EAAiB1zB,WAE1C,kBAA1B0zB,EAAiB7zB,MACtB8d,EAAiBmW,oBAAoBJ,EAAiBxzB,OAAQwzB,EAAiB1zB,UAAW0zB,EAAiBvzB,UAGvH,CACA,OAAOmY,CACX,EACA,qBAAAqb,CAAsB7xB,GAMlB,OAL2B,OAAvBsxB,GACAD,EAAoBI,MAAMzd,EAAUhE,QAAQuhB,aAEhDF,EAAoBnd,IAAI9Q,EAA2CpD,IACnE6b,EAAiBgW,sBAAsB7xB,GAChCwW,CACX,EACA,4BAAAsb,CAA6Bl0B,EAAOC,GAEhC,GAAc,IAAVD,EACA,MAAM,IAAIkkB,WAGd,IAAKmQ,OAAOC,SAASr0B,IAAYA,EAAU,EACvC,MAAM,IAAIikB,WAEd,MAAMyP,EAAcvd,EAAUhE,QAAQuhB,YAWtC,OAV2B,OAAvBD,GACAD,EAAoBI,MAAMF,GAGiB,IAA3C9e,MAAMW,KAAKie,GAAqB5xB,SAChC4xB,EAAoBnd,IAAIjW,EAA8BsB,EAAcgyB,IACpE1V,EAAiBoK,eAAe1mB,EAAcgyB,IAElDF,EAAoBnd,IAAI7Q,EAA4CzF,EAAOC,IAC3Ege,EAAiBiW,6BAA6Bl0B,EAAOC,GAC9C2Y,CACX,EACA,uBAAAub,CAAwBn0B,EAAOC,GAC3B,MAAM0zB,EAAcvd,EAAUhE,QAAQuhB,YAWtC,OAV2B,OAAvBD,GACAD,EAAoBI,MAAMF,GAGiB,IAA3C9e,MAAMW,KAAKie,GAAqB5xB,SAChC4xB,EAAoBnd,IAAIjW,EAA8BsB,EAAcgyB,IACpE1V,EAAiBoK,eAAe1mB,EAAcgyB,IAElDF,EAAoBnd,IAAI5Q,EAAuC1F,EAAOC,IACtEge,EAAiBkW,wBAAwBn0B,EAAOC,GACzC2Y,CACX,EACA,eAAA2b,CAAgBzzB,EAAQR,EAAWS,GAM/B,OAL2B,OAAvB2yB,GACAD,EAAoBI,MAAMzd,EAAUhE,QAAQuhB,aAEhDF,EAAoBnd,IAAI3Q,EAA+B7E,EAAQR,EAAWS,IAC1Ekd,EAAiBsW,gBAAgBzzB,EAAQR,EAAWS,GAC7C6X,CACX,EACA,cAAAyP,CAAeroB,EAAOM,GAMlB,OAL2B,OAAvBozB,GACAD,EAAoBI,MAAMzd,EAAUhE,QAAQuhB,aAEhDF,EAAoBnd,IAAIjW,EAA8BL,EAAOM,IAC7D2d,EAAiBoK,eAAeroB,EAAOM,GAChCsY,CACX,EACA,mBAAAwb,CAAoB5zB,EAAQF,EAAWG,GAEnC,MAAM+zB,EAAkBh0B,aAAkBoX,aAAepX,EAAS,IAAIoX,aAAapX,GAMnF,GAAsC,OAAlCisB,GAAiF,uBAAvCA,EAA8B1jB,KAA+B,CACvG,MAAM9I,EAAUK,EAAYG,EACtBsM,EAAaqJ,EAAUhE,QAAQrF,WAC/B0nB,EAAczzB,KAAK6B,KAAKvC,EAAYyM,GACpC2nB,EAAa1zB,KAAK2B,MAAM1C,EAAU8M,GAClC4nB,EAA6BD,EAAaD,EAC1CG,EAAqB,IAAIhd,aAAa+c,GAC5C,IAAK,IAAIrwB,EAAI,EAAGA,EAAIqwB,EAA4BrwB,GAAK,EAAG,CACpD,MAAM7B,GAAmB+xB,EAAgB3yB,OAAS,GAAKpB,IAAcg0B,EAAcnwB,GAAKyI,EAAazM,GAC/FoC,EAAa1B,KAAK2B,MAAMF,GACxBG,EAAa5B,KAAK6B,KAAKJ,GAC7BmyB,EAAmBtwB,GACf5B,IAAeE,EACT4xB,EAAgB9xB,IACf,GAAKD,EAAiBC,IAAe8xB,EAAgB9xB,IACnD,GAAKE,EAAaH,IAAmB+xB,EAAgB5xB,EACtE,CAC2B,OAAvB8wB,GACAD,EAAoBI,MAAMzd,EAAUhE,QAAQuhB,aAEhDF,EAAoBnd,IAAI/V,EAAmCq0B,EAAoBt0B,EAAWG,IAC1Fwd,EAAiBmW,oBAAoBQ,EAAoBt0B,EAAWG,GACpE,MAAMo0B,EAAmBH,EAAa3nB,EAClC8nB,EAAmB50B,GACnBmoB,EAA4BxP,EAAYgc,EAAmBA,EAAmB/yB,OAAS,GAAIgzB,GAE/FzM,EAA4BxP,EAAY4b,EAAgBA,EAAgB3yB,OAAS,GAAI5B,EACzF,MAE+B,OAAvByzB,GACAD,EAAoBI,MAAMzd,EAAUhE,QAAQuhB,aAEhDF,EAAoBnd,IAAI/V,EAAmCi0B,EAAiBl0B,EAAWG,IACvFwd,EAAiBmW,oBAAoBI,EAAiBl0B,EAAWG,GAErE,OAAOmY,CACX,GAKJ,OAHAya,EAAgBzsB,IAAIgS,EAAYqF,GAChCmO,EAAyBxlB,IAAIgS,EAAYxC,GACzCgd,EAAyBxa,EAAY8a,GAC9B9a,CAAU,E7C2EAkc,E8CnPsBC,G9CmPiCrhB,E8ClPrE,CAACkF,EAAY8a,KAChBqB,GAA2BnuB,IAAIgS,EAAY,CAAEhC,aAAc,IAAI/I,IAAO+H,cAAe,IAAI9P,QAAW+kB,SAAU6I,GAAqB,G9CiP3BtH,GAA0BzY,G+CnPjG8f,IAC9B,CACH,MAAAf,CAAO9Z,GACH,IAAK,MAAMzX,KAAmBsyB,EAC1B,GAA6B,2BAAzBtyB,EAAgBhB,KAAmC,CACnD,MAAM,QAAEF,EAAO,MAAED,GAAUmB,EAC3ByX,EAAWsb,6BAA6Bl0B,EAAOC,EACnD,MACK,GAA6B,sBAAzBkB,EAAgBhB,KAA8B,CACnD,MAAM,QAAEF,EAAO,MAAED,GAAUmB,EAC3ByX,EAAWub,wBAAwBn0B,EAAOC,EAC9C,MACK,GAA6B,cAAzBkB,EAAgBhB,KAAsB,CAC3C,MAAM,UAAEG,EAAS,OAAEQ,EAAM,aAAEC,GAAiBI,EAC5CyX,EAAW2b,gBAAgBzzB,EAAQR,EAAWS,EAClD,MACK,GAA6B,aAAzBI,EAAgBhB,KAAqB,CAC1C,MAAM,UAAEG,EAAS,MAAEN,GAAUmB,EAC7ByX,EAAWyP,eAAeroB,EAAOM,EACrC,KACK,IAA6B,kBAAzBa,EAAgBhB,KAKrB,MAAM,IAAI2D,MAAM,sCAL+B,CAC/C,MAAM,SAAErD,EAAQ,UAAEH,EAAS,OAAEE,GAAWW,EACxCyX,EAAWwb,oBAAoB5zB,EAAQF,EAAWG,EACtD,CAGA,CAER,K/CuN+K,EAAA8E,mCAAoC,EAAAC,2CAA4C,EAAAC,4CAA6C,EAAAC,uCAAwC,EAAAC,+BAAgC,EAAAtF,8BAA+B,EAAAE,mCAAoCksB,GAA+BrE,I8CnPhb,IAAC2M,G9CoP/C,MAAMC,G3FrOgD,EAAC1H,EAAsBuF,EAAqCM,EAAkB8B,EAAyBrD,EAAmCjG,EAAkBM,EAA6BnD,IACpO,cAAoCwE,EACvC,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzCsc,EAA8BqJ,EAAkCpa,EAAemY,GAC/E9R,EAAYoO,EAA4BzU,GACxC0d,EAAkCrX,EAAYgV,IAAwC,KAC5FjF,MAAMxb,GAAS,EAAOmW,EAA6B2M,GACnDhyB,KAAKiyB,+BAAiCD,EACtChyB,KAAKkyB,oBAAqB,EAC1BlyB,KAAKmyB,aAAwC,OAAzB1F,EAAc1iB,OAClC/J,KAAKoyB,6BAA+B/M,EACpCrlB,KAAKqyB,SAAW,KAEhBryB,KAAKsyB,cAAgBrC,EAAiBjwB,KAAM2a,EAAW0K,EAA4B9P,aAAcL,GAA4BD,GACjI,CACA,UAAIlL,GACA,OAAI/J,KAAKkyB,mBACE,KAEJlyB,KAAKoyB,6BAA6BroB,MAC7C,CACA,UAAIA,CAAOjN,GAGP,GAFAkD,KAAKoyB,6BAA6BroB,OAASjN,EAE7B,OAAVA,EAAgB,CAChB,GAAIkD,KAAKmyB,aACL,MAAMJ,IAEV/xB,KAAKmyB,cAAe,CACxB,CACJ,CACA,QAAI/c,GACA,OAAOpV,KAAKoyB,6BAA6Bhd,IAC7C,CACA,QAAIA,CAAKtY,GACLkD,KAAKoyB,6BAA6Bhd,KAAOtY,CAC7C,CACA,WAAIuY,GACA,OAAOrV,KAAKoyB,6BAA6B/c,OAC7C,CACA,WAAIA,CAAQvY,GACRkD,KAAKoyB,6BAA6B/c,QAAUvY,CAChD,CACA,aAAIwY,GACA,OAAOtV,KAAKoyB,6BAA6B9c,SAC7C,CACA,aAAIA,CAAUxY,GACVkD,KAAKoyB,6BAA6B9c,UAAYxY,CAClD,CACA,WAAIy1B,GACA,OAAOvyB,KAAKqyB,QAChB,CACA,WAAIE,CAAQz1B,GACR,MAAM01B,EAAmC,mBAAV11B,EAAuB8oB,EAAkB5lB,KAAMlD,GAAS,KACvFkD,KAAKoyB,6BAA6BG,QAAUC,EAC5C,MAAMC,EAAgBzyB,KAAKoyB,6BAA6BG,QACxDvyB,KAAKqyB,SAA6B,OAAlBI,GAA0BA,IAAkBD,EAAkB11B,EAAQ21B,CAC1F,CACA,gBAAIld,GACA,OAAOvV,KAAKsyB,aAChB,CACA,KAAA1tB,CAAMmc,EAAO,EAAG1K,EAAS,EAAG9Y,GAKxB,GAJAyC,KAAKoyB,6BAA6BxtB,MAAMmc,EAAM1K,EAAQ9Y,GACV,OAAxCyC,KAAKiyB,iCACLjyB,KAAKiyB,+BAA+BrtB,WAAqBlG,IAAbnB,EAAyB,CAACwjB,EAAM1K,GAAU,CAAC0K,EAAM1K,EAAQ9Y,IAE9E,WAAvByC,KAAKkP,QAAQK,MAAoB,CACjC4D,EAAyBnT,MACzB,MAAM0yB,EAA8B,KAChC1yB,KAAKoyB,6BAA6BhkB,oBAAoB,QAASskB,GAC3Dvd,GAAkBnV,OAClBwT,GAA0BxT,KAC9B,EAEJA,KAAKoyB,6BAA6BjuB,iBAAiB,QAASuuB,EAChE,CACJ,CACA,IAAA9iB,CAAKmR,EAAO,GACR/gB,KAAKoyB,6BAA6BxiB,KAAKmR,GACK,OAAxC/gB,KAAKiyB,iCACLjyB,KAAKiyB,+BAA+BriB,KAAOmR,EAEnD,G2FiJiC4R,CAAuCvI,GAAsBuF,GAAqCM,GAAkB,GAAyBvB,GAAmCjG,GAAkBM,GAA6BnD,IAElQgN,GgDtP+C,EAACxI,EAAsByI,EAAoCle,EAAsBod,EAAyBe,EAAkCrK,EAAkBM,EAA6BlB,IACrO,cAAmCuC,EACtC,WAAA7O,CAAYrM,EAAS4E,GACjB,MAAMQ,EAAgBmU,EAAiBvZ,GACjCyL,EAAYoO,EAA4BzU,GACxCye,EAA6BD,EAAiCxe,EAAeR,EAAc6G,GAEjG+P,MAAMxb,GAAS,EAAO6jB,EADiBpY,EAAYkY,EAAmChL,GAA2B,MAEjH7nB,KAAKgzB,mCAAqCrY,EAC1C3a,KAAKizB,4BAA8BF,CACvC,CACA,gBAAIjf,GACA,OAAO9T,KAAKizB,4BAA4Bnf,YAC5C,CACA,gBAAIA,CAAahX,GAGb,GAAIkD,KAAKgzB,mCACL,MAAMjB,IAGV,GAAIj1B,EAAQkD,KAAKizB,4BAA4BC,gBACzC,MAAMve,IAEV3U,KAAKizB,4BAA4Bnf,aAAehX,CACpD,CACA,oBAAIsS,GACA,OAAOpP,KAAKizB,4BAA4B7jB,gBAC5C,CACA,oBAAIA,CAAiBtS,GAEjB,GAAIkD,KAAKgzB,mCACL,MAAMjB,IAEV/xB,KAAKizB,4BAA4B7jB,iBAAmBtS,CACxD,CACA,mBAAIo2B,GACA,OAAOlzB,KAAKizB,4BAA4BC,eAC5C,GhDgNgCC,CAAsC/I,IiDtP3BvC,IAC/C,MAAMuL,EAAsC,IAAIxwB,QAOhD,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAMuW,EAAqCD,EAAoCxvB,IAAIkZ,GACnF,YAA2Cpe,IAAvC20B,EACOpuB,QAAQT,QAAQ6uB,GAVAjwB,OAAOwZ,EAAOE,KAC7C,MAAMiW,EAA6BjW,EAA0BlG,YAG7D,OAFAwc,EAAoC1vB,IAAIoZ,EAA2BiW,SAC7DlL,EAAwBjL,EAAOE,EAA2BiW,GACzDA,CAA0B,EAQtBO,CAA2B1W,EAAOE,EAC7C,EACH,GjDsOmInI,GAAsB,GkDtPvG,EAACgO,EAAsB+B,IACnE,CAACpQ,EAAeR,EAAcyf,KACjC,MAAMR,EAA6Bze,EAAcsC,YAEjD,GAAImc,EAA2Bjf,eAAiBA,EAC5C,IACIif,EAA2Bjf,aAAeA,CAC9C,CACA,MAEA,CAGAyf,GAAqF,aAAhDR,EAA2B3jB,mBAChE2jB,EAA2B3jB,iBAAmB,YAGC,IAA/C2jB,EAA2BG,iBAC3B3tB,OAAO4c,eAAe4Q,EAA4B,kBAAmB,CACjEj2B,MAAOgX,IAIf,MAAM0f,EAAW7Q,EAAqBrO,EAAe,CACjDR,eACA1E,iBAAkB2jB,EAA2B3jB,iBAC7C2E,sBAAuBgf,EAA2Bhf,sBAClDoC,KAAM,IA2BV,OAzBAuO,EAAmB8O,EAAU,gBAAiB5vB,GAAQ,IAAMA,EAAIT,KAAKqwB,KAAY9vB,GAAS5G,IACtF4G,EAAIP,KAAKqwB,EAAU12B,GACnB,IACIi2B,EAA2Bjf,aAAehX,CAC9C,CACA,MAAO6L,GAEH,GAAI7L,EAAQi2B,EAA2BG,gBACnC,MAAMvqB,CAEd,KAEJ+b,EAAmB8O,EAAU,oBAAqB5vB,GAAQ,IAAMA,EAAIT,KAAKqwB,KAAY9vB,GAAS5G,IAC1F4G,EAAIP,KAAKqwB,EAAU12B,GACnBi2B,EAA2B3jB,iBAAmBtS,CAAK,IAEvD4nB,EAAmB8O,EAAU,yBAA0B5vB,GAAQ,IAAMA,EAAIT,KAAKqwB,KAAY9vB,GAAS5G,IAC/F4G,EAAIP,KAAKqwB,EAAU12B,GACnBi2B,EAA2Bhf,sBAAwBjX,CAAK,IAE5DyI,OAAO4c,eAAeqR,EAAU,kBAAmB,CAC/C5vB,IAAK,IAAMmvB,EAA2BG,kBAG1CM,EAAStwB,QAAQ6vB,GACVS,CAAQ,ElDgMgKC,CAAwC9Q,GAAsB+B,IAAqB+D,GAAkBM,GAA6BlB,IACnT6L,GmDtP+C,EAAClF,EAAmB5M,EAA8BtJ,EAAoBgX,EAAkBzH,IAClI,KACH,MAAM8L,EAAkC,IAAI/wB,QAqC5C,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAM8W,EAAiCD,EAAgC/vB,IAAIkZ,GAC3E,YAAuCpe,IAAnCk1B,EACO3uB,QAAQT,QAAQovB,GAxCJxwB,OAAOwZ,EAAOE,KACzC,IAAI+E,EAAyBvJ,EAAmBsE,GAKhD,MAAMiX,EAAyCzf,GAAiByN,EAAwB/E,GACxF,IAAK+W,EAAwC,CACzC,MAAM9qB,EAAU,CACZiN,EAAG6L,EAAuB7L,EAAElZ,MAC5BgX,aAAc+N,EAAuB/N,aACrC1E,iBAAkByS,EAAuBzS,iBACzC2E,sBAAuB8N,EAAuB9N,sBAC9CkC,OAAQ4L,EAAuB5L,OAAOnZ,MACtCoZ,UAAW2L,EAAuB3L,UAAUpZ,MAC5CqZ,KAAM0L,EAAuB1L,KAAKrZ,MAClCG,KAAM4kB,EAAuB5kB,MAEjC4kB,EAAyBD,EAA6B9E,EAA2B/T,EACrF,CAeA,OAdA4qB,EAAgCjwB,IAAIoZ,EAA2B+E,GAC1DgS,SAOKrF,EAAkB1R,EAA2BF,EAAM5G,EAAG6L,EAAuB7L,SAC7EwY,EAAkB1R,EAA2BF,EAAM3G,OAAQ4L,EAAuB5L,cAClFuY,EAAkB1R,EAA2BF,EAAM1G,UAAW2L,EAAuB3L,iBACrFsY,EAAkB1R,EAA2BF,EAAMzG,KAAM0L,EAAuB1L,cAThFmZ,EAAiBxS,EAA2BF,EAAM5G,EAAG6L,EAAuB7L,SAC5EsZ,EAAiBxS,EAA2BF,EAAM3G,OAAQ4L,EAAuB5L,cACjFqZ,EAAiBxS,EAA2BF,EAAM1G,UAAW2L,EAAuB3L,iBACpFoZ,EAAiBxS,EAA2BF,EAAMzG,KAAM0L,EAAuB1L,aAQnF0R,EAAwBjL,EAAOE,EAA2B+E,GACzDA,CAAsB,EAQlBiS,CAAuBlX,EAAOE,EACzC,EACH,EnDuM8BiX,CAAsCvF,GAAmB5M,GAA8BtJ,GAAoBgX,GAAkBzH,IAC9JmM,GoDxPoC,CAAC1N,GAChC,CAACpT,EAAWqY,IAAajF,EAAuB5iB,IAAIwP,EAAWqY,GpDuP7C0I,CAA2B3N,IAClD4N,GnD9O2C,EAAC9J,EAAsB6F,EAAkByD,EAAgCtU,EAA0BwC,EAA8B6G,EAAkBM,EAA6BiL,IACtN,cAA+B5J,EAClC,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzC8Y,EAAyBD,EAA6BtN,EAAemY,GACrE9R,EAAYoO,EAA4BzU,GAE9CoW,MAAMxb,GAAS,EAAO2S,EADYlH,EAAY+Y,IAAmC,MAGjF1zB,KAAKm0B,GAAKlE,EAAiBjwB,KAAM2a,EAAWkH,EAAuB7L,EAAGd,GAA4BD,IAElGjV,KAAKo0B,QAAUnE,EAAiBjwB,KAAM2a,EAAWkH,EAAuB5L,OAAQ,KAAOnY,KAAKwjB,KAAKpM,KAA8B,KAAOpX,KAAKwjB,KAAKpM,KAEhJlV,KAAKq0B,WAAapE,EAAiBjwB,KAAM2a,EAAWkH,EAAuB3L,UAAWhH,EAAQrF,WAAa,EAAG,GAE9G7J,KAAKs0B,MAAQrE,EAAiBjwB,KAAM2a,EAAWkH,EAAuB1L,KAAM,GAAKrY,KAAKy2B,MAAMrf,IAA6BD,IACzHjV,KAAKw0B,wBAA0B3S,EAE/BmS,EAAqBh0B,KAAM,EAC/B,CACA,UAAIiW,GACA,OAAOjW,KAAKo0B,OAChB,CACA,aAAIle,GACA,OAAOlW,KAAKq0B,UAChB,CACA,QAAIle,GACA,OAAOnW,KAAKs0B,KAChB,CACA,KAAIte,GACA,OAAOhW,KAAKm0B,EAChB,CACA,QAAIl3B,GACA,OAAO+C,KAAKw0B,wBAAwBv3B,IACxC,CACA,QAAIA,CAAKH,GACLkD,KAAKw0B,wBAAwBv3B,KAAOH,CACxC,CACA,oBAAA23B,CAAqBC,EAAaC,EAAaC,GAE3C,IACI50B,KAAKw0B,wBAAwBC,qBAAqBC,EAAaC,EAAaC,EAChF,CACA,MAAOjsB,GACH,GAAiB,KAAbA,EAAIN,KACJ,MAAM+W,IAEV,MAAMzW,CACV,CAEA,GAAI+rB,EAAY/1B,SAAWg2B,EAAYh2B,QAAUg2B,EAAYh2B,SAAWi2B,EAAcj2B,OAClF,MAAMygB,GAEd,GmDwL4ByV,CAAkCzK,GAAsB6F,GAAkByD,GAAgCtU,GAA0BwC,GAA8B6G,GAAkBM,GAA6BiL,IAC/Oc,GqD1PkC,EAAC3d,EAAoB6C,IAClD,CAAC3F,EAAiB0gB,EAAeC,KACpC,MAAMphB,EAAc,IAAIjJ,IA6DxB,OA5DA0J,EAAgBnR,QAAU,CAAEA,GAEjB,CAAC0T,EAAajE,EAAS,EAAGC,EAAQ,KACrC,MAAMqiB,EAAuC,IAArBrhB,EAAYZ,KACpC,GAAIgH,EAAkBpD,GAOlB,OALA1T,EAAQC,KAAKkR,EAAiBuC,EAAajE,EAAQC,GACnDuE,EAAmBvD,EAAa,CAACgD,EAAajE,EAAQC,IAASyH,GAAeA,EAAW,KAAOzD,GAAeyD,EAAW,KAAO1H,GAAU0H,EAAW,KAAOzH,IAAO,GAChKqiB,GACAF,IAEGne,EAEX1T,EAAQC,KAAKkR,EAAiBuC,EAAajE,GAC3CwE,EAAmBvD,EAAa,CAACgD,EAAajE,IAAU0H,GAAeA,EAAW,KAAOzD,GAAeyD,EAAW,KAAO1H,IAAQ,GAC9HsiB,GACAF,GAEE,EAlBY,CAoBvB1gB,EAAgBnR,SACnBmR,EAAgB1Q,WAAa,CAAEA,GACpB,CAAC2W,EAAqB3H,EAAQC,KACjC,MAAMsiB,EAAethB,EAAYZ,KAAO,EACxC,QAA4BtU,IAAxB4b,EACA3W,EAAW4W,MAAMlG,GACjBT,EAAY4G,aAEX,GAAmC,iBAAxBF,EAAkC,CAE9C3W,EAAWR,KAAKkR,EAAiBiG,GACjC,IAAK,MAAMD,KAAczG,EACjByG,EAAW,KAAOC,GAClB1G,EAAYnP,OAAO4V,EAG/B,KACK,CACGL,EAAkBM,GAElB3W,EAAWR,KAAKkR,EAAiBiG,EAAqB3H,EAAQC,GAI9DjP,EAAWR,KAAKkR,EAAiBiG,EAAqB3H,GAE1D,IAAK,MAAM0H,KAAczG,EACjByG,EAAW,KAAOC,QACN5b,IAAXiU,GAAwB0H,EAAW,KAAO1H,QAChCjU,IAAVkU,GAAuByH,EAAW,KAAOzH,GAC1CgB,EAAYnP,OAAO4V,EAG/B,CACA,MAAM8a,EAAsC,IAArBvhB,EAAYZ,KAC/BkiB,GAAgBC,GAChBH,GACJ,EApCqB,CAsC1B3gB,EAAgB1Q,YACZ0Q,CAAe,ErD2LH+gB,CAAyBje,GAAoB,IAClEke,GsD3PqC,EAACtD,EAAyB+C,IAC1D,CAACxgB,EAAeghB,KAEnBA,EAAkBxhB,aAAe,EACjCwhB,EAAkBlmB,iBAAmB,WAErC7J,OAAO4c,eAAemT,EAAmB,eAAgB,CACrD1xB,IAAK,IAAM,EACXF,IAAK,KACD,MAAMquB,GAAyB,IAGvCxsB,OAAO4c,eAAemT,EAAmB,mBAAoB,CACzD1xB,IAAK,IAAM,WACXF,IAAK,KACD,MAAMquB,GAAyB,IAIvC,MAAMwD,EAAwBjhB,EAAc8E,qBAQ5C0b,EAAmBQ,GAPG,KAClB,MAAM32B,EAAS22B,EAAkBjmB,eACjC,IAAK,IAAIjO,EAAI,EAAGA,EAAIzC,EAAQyC,GAAK,EAC7Bm0B,EAAsBryB,QAAQoyB,EAAmB,EAAGl0B,EACxD,IAEqB,IAAMm0B,EAAsB5xB,WAAW2xB,IACM,EtDgOhDE,CAA4B,GAAyBV,IAC7EW,GuD3P8C,EAAClM,EAA+B8L,IACzE,CAAC/gB,EAAevL,KACnB,MAAM2sB,EAA0BphB,EAAcqhB,oBAAoB5sB,EAAQsG,gBAU1E,OAJsC,OAAlCka,GAAiF,uBAAvCA,EAA8B1jB,MACxEwvB,EAAsB/gB,EAAeohB,GAEzClV,GAA6BkV,EAAyB3sB,GAC/C2sB,CAAuB,EvD+OAE,CAAqCrM,GAA+B8L,IACpGQ,GwD5PgD,EAACJ,EAA+Bnd,EAAoBuP,IAC/F,KACH,MAAMiO,EAA2B,IAAIlzB,QAkBrC,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAMkL,EAA0B8N,EAAyBlyB,IAAIkZ,GAC7D,YAAgCpe,IAA5BspB,EACO/iB,QAAQT,QAAQwjB,GArBX5kB,OAAOwZ,EAAOE,KAClC,IAAIzI,EAAkBiE,EAAmBsE,GAGzC,IADwCxI,GAAiBC,EAAiByI,GACpC,CAClC,MAAM/T,EAAU,CACZ+K,aAAcO,EAAgBP,aAC9B1E,iBAAkBiF,EAAgBjF,iBAClC2E,sBAAuBM,EAAgBN,sBACvC1E,eAAgBgF,EAAgBhF,gBAEpCgF,EAAkBohB,EAA8B3Y,EAA2B/T,EAC/E,CAGA,OAFA+sB,EAAyBpyB,IAAIoZ,EAA2BzI,SAClDwT,EAAwBjL,EAAOE,EAA2BzI,GACzDA,CAAe,EAQX0hB,CAAgBnZ,EAAOE,EAClC,EACH,ExDgO+BkZ,CAAuCP,GAA+Bnd,GAAoBuP,IAC5HoO,GlDxP4C,EAAC7L,EAAsByL,EAAiCJ,EAA+BhN,EAAkBM,IAChJ,cAAgCqB,EACnC,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GAG/C2hB,MAAMxb,GAAS,EAFiBumB,EAA8BnhB,EAAemY,GACzC1D,EAA4BzU,GAAiBuhB,IAAoC,KAEzH,GkDgP6BK,CAAmC9L,GAAsByL,GAAiCJ,GAA+BhN,GAAkBM,IAC1KoN,GyD9PkD,EAACpU,EAAiCzJ,EAAoBuP,IACnG,KACH,MAAMiO,EAA2B,IAAIlzB,QAkBrC,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAMkL,EAA0B8N,EAAyBlyB,IAAIkZ,GAC7D,YAAgCpe,IAA5BspB,EACO/iB,QAAQT,QAAQwjB,GArBX5kB,OAAOwZ,EAAOE,KAClC,IAAIzI,EAAkBiE,EAAmBsE,GAGzC,IADwCxI,GAAiBC,EAAiByI,GACpC,CAClC,MAAM/T,EAAU,CACZ+K,aAAcO,EAAgBP,aAC9B1E,iBAAkBiF,EAAgBjF,iBAClC2E,sBAAuBM,EAAgBN,sBACvCzE,gBAAiB+E,EAAgB/E,iBAErC+E,EAAkB0N,EAAgCjF,EAA2B/T,EACjF,CAGA,OAFA+sB,EAAyBpyB,IAAIoZ,EAA2BzI,SAClDwT,EAAwBjL,EAAOE,EAA2BzI,GACzDA,CAAe,EAQX0hB,CAAgBnZ,EAAOE,EAClC,EACH,EzDkOiCsZ,CAAyCrU,GAAiCzJ,GAAoBuP,IAClIwO,GjD1P8C,EAACjM,EAAsB+L,EAAmCpU,EAAiC0G,EAAkBM,EAA6BuN,IACnL,cAAkClM,EACrC,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB6J,EAA+B,IAAK,MAAoBvtB,IAG9E2hB,MAAMxb,GAAS,EAFmB6S,EAAgCzN,EAAemY,GAC3C1D,EAA4BzU,GAAiB6hB,IAAsC,KAE7H,GiDkP+BI,CAAqCnM,GAAsB+L,GAAmCpU,GAAiC0G,GAAkBM,I0DhQzIhgB,IACpC,IAAKA,EAAS+K,aAAc/K,EAAQuG,oB1DgQzCknB,G2DhQoD,EAACpI,EAAqBM,EAAmC/L,EAAsBmS,IAC9H,CAACxgB,GAAiB+B,YAAWogB,MAChC,MAAM5hB,EAAcP,EAAc4E,aAAa,EAAG,EAAG,OAC/Cqc,EAAwB7G,EAAkCpa,EAAe,CAC3EvK,OAAQ,KACR+J,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBqB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,IAEZie,EAAW7Q,EAAqBrO,EAAe,IAAKmiB,EAAkBtgB,KAAME,IAE5E8C,EAActE,EAAYC,eAAe,GAE/CqE,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjBoc,EAAsBxrB,OAAS8K,EAC/B0gB,EAAsBngB,MAAO,EAC7B,MAAMshB,EAAgC,CAClC,cAAIrT,GAEJ,EACA,gBAAIvP,GACA,OAAO0f,EAAS1f,YACpB,EACA,gBAAIA,CAAahX,GACb02B,EAAS1f,aAAehX,CAC5B,EACA,oBAAIsS,GACA,OAAOokB,EAASpkB,gBACpB,EACA,oBAAIA,CAAiBtS,GACjB02B,EAASpkB,iBAAmBtS,CAChC,EACA,yBAAIiX,GACA,OAAOyf,EAASzf,qBACpB,EACA,yBAAIA,CAAsBjX,GACtB02B,EAASzf,sBAAwBjX,CACrC,EACA,WAAIoS,GACA,OAAOskB,EAAStkB,OACpB,EACA,UAAI8I,GACA,MAAO,EACX,EACA,kBAAI3I,GACA,OAAOkmB,EAAsBlmB,cACjC,EACA,mBAAIC,GACA,OAAOkkB,EAASlkB,eACpB,EACA,UAAI+G,GACA,OAAOmd,EAASrd,IACpB,EACA,WAAIoc,GACA,OAAOgD,EAAsBhD,OACjC,EACA,WAAIA,CAAQz1B,GACRy4B,EAAsBhD,QAAUz1B,CACpC,EACA,gBAAAqH,IAAoB+H,GAChB,OAAOqpB,EAAsBpxB,iBAAiB+H,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACzE,EACA,aAAA8R,IAAiB9R,GACb,OAAOqpB,EAAsBvX,cAAc9R,EAAK,GACpD,EACA,mBAAAkC,IAAuBlC,GACnB,OAAOqpB,EAAsBnnB,oBAAoBlC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAC5E,EACA,KAAAtH,CAAMmc,EAAO,GACTwU,EAAsB3wB,MAAMzB,KAAKoyB,EAAuBxU,EAC5D,EACA,IAAAnR,CAAKmR,EAAO,GACRwU,EAAsB3lB,KAAKzM,KAAKoyB,EAAuBxU,EAC3D,GAMJ,OADAqN,EAAoB9Z,EAAeihB,GAC5BT,EAAmBzS,GAAqBqU,EAA+BlD,IAJxD,IAAM+B,EAAsBryB,QAAQswB,KACjC,IAAM+B,EAAsB5xB,WAAW6vB,IAGyD,E3D4KrFmD,CAA2CvI,GAAqBM,GAAmC/L,GAAsBmS,IAC/J8B,G4D9P+C,EAACxI,EAAqB1H,EAAiB8P,EAAqCpR,EAAkEI,IACxL,CAAClR,EAAevL,KAEnB,QAA2CrK,IAAvC4V,EAAcuiB,qBACd,OAAOL,EAAoCliB,EAAevL,GAE9D,MAAM+tB,EAA2BxiB,EAAcuiB,uBAa/C,OAZArW,GAA6BsW,EAA0B/tB,GACvD6X,GAAqCkW,EAA0B/tB,EAAS,UAEnE2d,EAAgBtB,GAAkE,IAAMA,EAAiE9Q,MAC1JuM,GAA0DiW,GAGzDpQ,EAAgBlB,GAAiE,IAAMA,EAAgElR,MACxJ2M,GAAyD6V,GAG7D1I,EAAoB9Z,EAAewiB,GAC5BA,CAAwB,E5D2OAC,CAAsC3I,GAAqB1H,GAAiB8P,GAAqCpR,GAAkEI,IACpNwR,G6DlQiD,EAACxI,EAAmBoI,EAAgCte,EAAoBgX,EAAkBzH,IACtI,KACH,MAAMoP,EAAoC,IAAIr0B,QAC9C,IAAIgC,EAAQ,KACRgL,EAAO,KAiCX,MAAO,CACH,SAAIhL,CAAM9H,GACN8H,EAAQ9H,CACZ,EACA,QAAI8S,CAAK9S,GACL8S,EAAO9S,CACX,EACA,MAAAyL,CAAOqU,EAAOE,GACV,MAAMoa,EAAmCD,EAAkCrzB,IAAIkZ,GAC/E,YAAyCpe,IAArCw4B,EACOjyB,QAAQT,QAAQ0yB,GA1CF9zB,OAAOwZ,EAAOE,KAC3C,IAAIga,EAA2Bxe,EAAmBsE,GAKlD,MAAMua,EAA2C/iB,GAAiB0iB,EAA0Bha,GAC5F,IAAKqa,EAA0C,CAC3C,MAAMpuB,EAAU,CACZ+K,aAAcgjB,EAAyBhjB,aACvC1E,iBAAkB0nB,EAAyB1nB,iBAC3C2E,sBAAuB+iB,EAAyB/iB,sBAChDsC,OAAQygB,EAAyBzgB,OAAOvZ,OAE5Cg6B,EAA2BF,EAA+B9Z,EAA2B/T,GACvE,OAAVnE,GACAkyB,EAAyBlyB,MAAMA,GAEtB,OAATgL,GACAknB,EAAyBlnB,KAAKA,EAEtC,CASA,OARAqnB,EAAkCvzB,IAAIoZ,EAA2Bga,GAC5DK,QAIK3I,EAAkB1R,EAA2BF,EAAMvG,OAAQygB,EAAyBzgB,cAHpFiZ,EAAiBxS,EAA2BF,EAAMvG,OAAQygB,EAAyBzgB,cAKvFwR,EAAwBjL,EAAOE,EAA2Bga,GACzDA,CAAwB,EAcpBM,CAAyBxa,EAAOE,EAC3C,EACH,E7D+MgCua,CAAwC7I,GAAmBoI,GAAgCte,GAAoBgX,GAAkBzH,IACpKyP,GhD1P6C,EAAClN,EAAsB6F,EAAkBoH,EAAyCT,EAAgCnO,EAAkBM,EAA6BnD,IACzM,cAAiCwE,EACpC,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzC+tB,EAA2BF,EAA+BtiB,EAAemY,GACzE9R,EAAYoO,EAA4BzU,GACxCijB,EAA+B5c,EAAY0c,IAA4C,KAC7F3M,MAAMxb,GAAS,EAAO4nB,EAA0BS,GAChDv3B,KAAKw3B,4BAA8BD,EACnCv3B,KAAKy3B,0BAA4BX,EAKjC92B,KAAK03B,QAAUzH,EAAiBjwB,KAAM2a,EAAWmc,EAAyBzgB,OAAQnB,GAA4BD,IAC9GjV,KAAKqyB,SAAW,IACpB,CACA,UAAIhc,GACA,OAAOrW,KAAK03B,OAChB,CACA,WAAInF,GACA,OAAOvyB,KAAKqyB,QAChB,CACA,WAAIE,CAAQz1B,GACR,MAAM01B,EAAmC,mBAAV11B,EAAuB8oB,EAAkB5lB,KAAMlD,GAAS,KACvFkD,KAAKy3B,0BAA0BlF,QAAUC,EACzC,MAAMC,EAAgBzyB,KAAKy3B,0BAA0BlF,QACrDvyB,KAAKqyB,SAA6B,OAAlBI,GAA0BA,IAAkBD,EAAkB11B,EAAQ21B,CAC1F,CACA,KAAA7tB,CAAMmc,EAAO,GAKT,GAJA/gB,KAAKy3B,0BAA0B7yB,MAAMmc,GACI,OAArC/gB,KAAKw3B,8BACLx3B,KAAKw3B,4BAA4B5yB,MAAQmc,GAElB,WAAvB/gB,KAAKkP,QAAQK,MAAoB,CACjC4D,EAAyBnT,MACzB,MAAM0yB,EAA8B,KAChC1yB,KAAKy3B,0BAA0BrpB,oBAAoB,QAASskB,GACxDvd,GAAkBnV,OAClBwT,GAA0BxT,KAC9B,EAEJA,KAAKy3B,0BAA0BtzB,iBAAiB,QAASuuB,EAC7D,CACJ,CACA,IAAA9iB,CAAKmR,EAAO,GACR/gB,KAAKy3B,0BAA0B7nB,KAAKmR,GACK,OAArC/gB,KAAKw3B,8BACLx3B,KAAKw3B,4BAA4B5nB,KAAOmR,EAEhD,GgDuM8B4W,CAAoCvN,GAAsB6F,GAAkB+G,GAAkCJ,GAAgCnO,GAAkBM,GAA6BnD,IAC7NgS,G8DnQ0C,EAACvsB,EAAyBqZ,IAC/D,CAACpQ,EAAevL,KACnB,MAAM8uB,EAAsBvjB,EAAcwjB,kBAQ1C,GAPAtX,GAA6BqX,EAAqB9uB,GAE9CA,EAAQsV,uBAAyBwZ,EAAoBE,YACrDF,EAAoBE,WAAahvB,EAAQsV,sBAE7CiC,GAA4BuX,EAAqB9uB,EAAS,UAEtDA,EAAQ+K,aAAe,EACvB,MAAMzI,IASV,GAPAqZ,EAAmBmT,EAAqB,gBAAiBj0B,GAAQ,IAAMA,EAAIT,KAAK00B,KAAuBn0B,GAAS5G,IAC5G,GAAIA,EAAQ,EACR,MAAMuO,IAEV,OAAO3H,EAAIP,KAAK00B,EAAqB/6B,EAAM,IAGd,QAA7BiM,EAAQqG,iBACR,MAAM/D,IAQV,OANAqZ,EAAmBmT,EAAqB,oBAAqBj0B,GAAQ,IAAMA,EAAIT,KAAK00B,KAAuBn0B,GAAS5G,IAChH,GAAc,QAAVA,EACA,MAAMuO,IAEV,OAAO3H,EAAIP,KAAK00B,EAAqB/6B,EAAM,IAExC+6B,CAAmB,E9DsOAG,CAAiC,GAAyBtT,IACtFuT,G+DpQ4C,EAACL,EAA2Btf,EAAoBuP,IACvF,KACH,MAAMqQ,EAA+B,IAAIt1B,QAwBzC,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAMqb,EAA8BD,EAA6Bt0B,IAAIkZ,GACrE,YAAoCpe,IAAhCy5B,EACOlzB,QAAQT,QAAQ2zB,GA3BP/0B,OAAOwZ,EAAOE,KACtC,IAAI+a,EAAsBvf,EAAmBsE,GAG7C,IAD4CxI,GAAiByjB,EAAqB/a,GACxC,CACtC,MAAM/T,EAAU,CACZgB,OAAQ8tB,EAAoB9tB,OAC5B+J,aAAc+jB,EAAoB/jB,aAClC1E,iBAAkByoB,EAAoBzoB,iBACtC2E,sBAAuB8jB,EAAoB9jB,sBAC3CsK,sBAAuBwZ,EAAoBE,WAE/CF,EAAsBD,EAA0B9a,EAA2B/T,EAC/E,CAQA,OAPAmvB,EAA6Bx0B,IAAIoZ,EAA2B+a,GACxDngB,GAAuBmgB,SACjBhQ,EAAwBjL,EAAOE,EAA2B+a,EAAoB7f,OAAO,UAGrF6P,EAAwBjL,EAAOE,EAA2B+a,GAE7DA,CAAmB,EAQfO,CAAoBxb,EAAOE,EACtC,EACH,E/DkO2Bub,CAAmCT,GAA2Btf,GAAoBuP,IAChHyQ,G/ChQwC,EAAClO,EAAsB6N,EAA6BL,EAA2BnP,EAAkBM,EAA6BiL,IACjK,cAA4B5J,EAC/B,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzC8uB,EAAsBD,EAA0BtjB,EAAemY,GAGrE/B,MAAMxb,GAAS,EAAO2oB,EAFJ9O,EAA4BzU,GACH2jB,IAAgC,MAE3Ej4B,KAAKkyB,oBAAqB,EAC1BlyB,KAAKu4B,qBAAuBV,EACC,OAAzBpL,EAAc1iB,QACdiqB,EAAqBh0B,KAAMysB,EAAc1iB,OAAOxM,SAExD,CACA,UAAIwM,GACA,OAAI/J,KAAKkyB,mBACE,KAEJlyB,KAAKu4B,qBAAqBxuB,MACrC,CACA,UAAIA,CAAOjN,GAGP,GAFAkD,KAAKu4B,qBAAqBxuB,OAASjN,EAErB,OAAVA,GAAuD,OAArCkD,KAAKu4B,qBAAqBxuB,OAAiB,CAC7D,MAAMuK,EAAgBtU,KAAKu4B,qBAAqBrpB,QAChDlP,KAAKu4B,qBAAqBxuB,OAASuK,EAAc4E,aAAa,EAAG,EAAG5E,EAAczK,YAClF7J,KAAKkyB,oBAAqB,EAC1B8B,EAAqBh0B,KAAM,EAC/B,MAEIA,KAAKkyB,oBAAqB,EAC1B8B,EAAqBh0B,KAA2C,OAArCA,KAAKu4B,qBAAqBxuB,OAAkB,EAAI/J,KAAKu4B,qBAAqBxuB,OAAOxM,SAEpH,CACA,aAAIw6B,GACA,OAAO/3B,KAAKu4B,qBAAqBR,SACrC,CACA,aAAIA,CAAUj7B,GACVkD,KAAKu4B,qBAAqBR,UAAYj7B,CAC1C,G+CwNyB07B,CAA+BpO,GAAsB6N,GAA6BL,GAA2BnP,GAAkBM,GAA6BiL,IACvLyE,GgEvQwC,EAACjK,EAAmBhM,EAAuBlK,EAAoBgX,EAAkBzH,IACnHjJ,IACJ,MAAM8Z,EAA2B,IAAI91B,QAyBrC,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAM6b,EAA0BD,EAAyB90B,IAAIkZ,GAC7D,YAAgCpe,IAA5Bi6B,EACO1zB,QAAQT,QAAQm0B,GA5BXv1B,OAAOwZ,EAAOE,KAClC,IAAI2F,EAAkBnK,EAAmBsE,GAEzC,MAAMgc,EAAkCxkB,GAAiBqO,EAAiB3F,GAC1E,IAAK8b,EAAiC,CAClC,MAAM7vB,EAAU,CACZ+K,aAAc2O,EAAgB3O,aAC9B1E,iBAAkBqT,EAAgBrT,iBAClC2E,sBAAuB0O,EAAgB1O,sBACvC4K,UAAW8D,EAAgB9D,UAAU7hB,MACrC8hB,gBAEJ6D,EAAkBD,EAAsB1F,EAA2B/T,EACvE,CASA,OARA2vB,EAAyBh1B,IAAIoZ,EAA2B2F,GACnDmW,QAIKpK,EAAkB1R,EAA2BF,EAAM+B,UAAW8D,EAAgB9D,iBAH9E2Q,EAAiBxS,EAA2BF,EAAM+B,UAAW8D,EAAgB9D,iBAKjFkJ,EAAwBjL,EAAOE,EAA2B2F,GACzDA,CAAe,EAQXoW,CAAgBjc,EAAOE,EAClC,EACH,EhEoOuBgc,CAA+BtK,GAAmBhM,GAAuBlK,GAAoBgX,GAAkBzH,IACzIkR,G7ClQoC,EAAC3O,EAAsB6F,EAAkBwI,EAAyBjW,EAAuBiG,EAAkBM,EAA6BiL,IACvK,cAAwB5J,EAC3B,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzC0Z,EAAkBD,EAAsBlO,EAAemY,GACvD9R,EAAYoO,EAA4BzU,GAE9CoW,MAAMxb,GAAS,EAAOuT,EADK9H,EAAY8d,EAAwBhM,EAAc7N,cAAgB,MAE7F5e,KAAKg5B,WAAa/I,EAAiBjwB,KAAM2a,EAAW8H,EAAgB9D,WACpEqV,EAAqBh0B,KAAMysB,EAAc7N,aAC7C,CACA,aAAID,GACA,OAAO3e,KAAKg5B,UAChB,G6CoPqBC,CAA2B7O,GAAsB6F,GAAkBwI,GAAyBjW,GAAuBiG,GAAkBM,GAA6BiL,IACzLkF,GiExQmD,CAAC7tB,GAC/C,CAACiJ,EAAevL,KACnB,MAAMowB,EAA+B7kB,EAAc8kB,2BAGnD,GAFA5Y,GAA6B2Y,EAA8BpwB,GAEvDA,EAAQ+K,aAAe,EACvB,MAAMzI,IAGV,GAAiC,QAA7BtC,EAAQqG,iBACR,MAAM/D,IAOV,OALAuV,GAAqCuY,EAA8BpwB,EAAS,UAC5E6X,GAAqCuY,EAA8BpwB,EAAS,QAC5E6X,GAAqCuY,EAA8BpwB,EAAS,SAC5E6X,GAAqCuY,EAA8BpwB,EAAS,WAC5E6X,GAAqCuY,EAA8BpwB,EAAS,aACrEowB,CAA4B,EjEuPAE,CAA0C,IAC/EC,GkE1QqD,EAAC9K,EAAmB0K,EAAoC5gB,EAAoBgX,EAAkBzH,IAC9I,KACH,MAAM0R,EAAwC,IAAI32B,QAuClD,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAM0c,EAAuCD,EAAsC31B,IAAIkZ,GACvF,YAA6Cpe,IAAzC86B,EACOv0B,QAAQT,QAAQg1B,GA1CEp2B,OAAOwZ,EAAOE,KAC/C,IAAIqc,EAA+B7gB,EAAmBsE,GAKtD,MAAM6c,EAA+CrlB,GAAiB+kB,EAA8Brc,GACpG,IAAK2c,EAA8C,CAC/C,MAAM1wB,EAAU,CACZiW,OAAQma,EAA6Bna,OAAOliB,MAC5CgX,aAAcqlB,EAA6BrlB,aAC3C1E,iBAAkB+pB,EAA6B/pB,iBAC/C2E,sBAAuBolB,EAA6BplB,sBACpDkL,KAAMka,EAA6Bla,KAAKniB,MACxCmE,MAAOk4B,EAA6Bl4B,MAAMnE,MAC1CoiB,QAASia,EAA6Bja,QAAQpiB,MAC9CqiB,UAAWga,EAA6Bha,UAAUriB,OAEtDq8B,EAA+BD,EAAmCpc,EAA2B/T,EACjG,CAiBA,OAhBAwwB,EAAsC71B,IAAIoZ,EAA2Bqc,GAChEM,SAQKjL,EAAkB1R,EAA2BF,EAAMoC,OAAQma,EAA6Bna,cACxFwP,EAAkB1R,EAA2BF,EAAMqC,KAAMka,EAA6Bla,YACtFuP,EAAkB1R,EAA2BF,EAAM3b,MAAOk4B,EAA6Bl4B,aACvFutB,EAAkB1R,EAA2BF,EAAMsC,QAASia,EAA6Bja,eACzFsP,EAAkB1R,EAA2BF,EAAMuC,UAAWga,EAA6Bha,mBAX3FmQ,EAAiBxS,EAA2BF,EAAMoC,OAAQma,EAA6Bna,cACvFsQ,EAAiBxS,EAA2BF,EAAMqC,KAAMka,EAA6Bla,YACrFqQ,EAAiBxS,EAA2BF,EAAM3b,MAAOk4B,EAA6Bl4B,aACtFquB,EAAiBxS,EAA2BF,EAAMsC,QAASia,EAA6Bja,eACxFoQ,EAAiBxS,EAA2BF,EAAMuC,UAAWga,EAA6Bha,kBAS9F0I,EAAwBjL,EAAOE,EAA2Bqc,GACzDA,CAA4B,EAQxBO,CAA6B9c,EAAOE,EAC/C,EACH,ElEyNoC6c,CAA4CnL,GAAmB0K,GAAoC5gB,GAAoBgX,GAAkBzH,IAChL+R,G3ClQiD,EAACxP,EAAsB6F,EAAkBqJ,EAAsCJ,EAAoC7tB,EAAyBod,EAAkBM,EAA6BiL,IACvO,cAAqC5J,EACxC,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzCowB,EAA+BD,EAAmC5kB,EAAemY,GACjF9R,EAAYoO,EAA4BzU,GAE9CoW,MAAMxb,GAAS,EAAOiqB,EADkBxe,EAAY2e,IAAyC,MAE7Ft5B,KAAK65B,QAAU5J,EAAiBjwB,KAAM2a,EAAWwe,EAA6Bna,QAC9Ehf,KAAK85B,MAAQ7J,EAAiBjwB,KAAM2a,EAAWwe,EAA6Bla,MAC5Ejf,KAAK+5B,8BAAgCZ,EACrCn5B,KAAKg6B,OAAS/J,EAAiBjwB,KAAM2a,EAAWwe,EAA6Bl4B,OAC7EjB,KAAKi6B,SAAWhK,EAAiBjwB,KAAM2a,EAAWwe,EAA6Bja,SAC/Elf,KAAKk6B,WAAajK,EAAiBjwB,KAAM2a,EAAWwe,EAA6Bha,WACjF6U,EAAqBh0B,KAAM,KAC/B,CACA,UAAIgf,GACA,OAAOhf,KAAK65B,OAChB,CAEA,gBAAI/lB,GACA,OAAO9T,KAAK+5B,8BAA8BjmB,YAC9C,CACA,gBAAIA,CAAahX,GACb,MAAMq9B,EAAuBn6B,KAAK+5B,8BAA8BjmB,aAEhE,GADA9T,KAAK+5B,8BAA8BjmB,aAAehX,EAC9CA,EAAQ,EAER,MADAkD,KAAK+5B,8BAA8BjmB,aAAeqmB,EAC5C9uB,GAEd,CAKA,oBAAI+D,GACA,OAAOpP,KAAK+5B,8BAA8B3qB,gBAC9C,CACA,oBAAIA,CAAiBtS,GACjB,MAAMq9B,EAAuBn6B,KAAK+5B,8BAA8B3qB,iBAEhE,GADApP,KAAK+5B,8BAA8B3qB,iBAAmBtS,EACxC,QAAVA,EAEA,MADAkD,KAAK+5B,8BAA8B3qB,iBAAmB+qB,EAChD9uB,GAEd,CACA,QAAI4T,GACA,OAAOjf,KAAK85B,KAChB,CACA,SAAI74B,GACA,OAAOjB,KAAKg6B,MAChB,CACA,aAAII,GAEA,MAAkE,iBAAvDp6B,KAAK+5B,8BAA8BK,UAAUt9B,MAC7CkD,KAAK+5B,8BAA8BK,UAAUt9B,MAEjDkD,KAAK+5B,8BAA8BK,SAC9C,CACA,WAAIlb,GACA,OAAOlf,KAAKi6B,QAChB,CACA,aAAI9a,GACA,OAAOnf,KAAKk6B,UAChB,G2CiMkCG,CAAwCjQ,GAAsB6F,GAAkBqJ,GAAsCJ,GAAoC,GAAyBzQ,GAAkBM,GAA6BiL,IACtQsG,GmE5QuC,EAAC9L,EAAmB7L,EAAsBrK,EAAoBgX,EAAkBzH,IAClH,KACH,MAAM0S,EAA0B,IAAI33B,QAwBpC,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAM0d,EAAyBD,EAAwB32B,IAAIkZ,GAC3D,YAA+Bpe,IAA3B87B,EACOv1B,QAAQT,QAAQg2B,GA3BZp3B,OAAOwZ,EAAOE,KACjC,IAAI8F,EAAiBtK,EAAmBsE,GAExC,MAAM6d,EAAiCrmB,GAAiBwO,EAAgB9F,GACxE,IAAK2d,EAAgC,CACjC,MAAM1xB,EAAU,CACZ+K,aAAc8O,EAAe9O,aAC7B1E,iBAAkBwT,EAAexT,iBACjC2E,sBAAuB6O,EAAe7O,sBACtCoC,KAAMyM,EAAezM,KAAKrZ,OAE9B8lB,EAAiBD,EAAqB7F,EAA2B/T,EACrE,CASA,OARAwxB,EAAwB72B,IAAIoZ,EAA2B8F,GAClD6X,QAIKjM,EAAkB1R,EAA2BF,EAAMzG,KAAMyM,EAAezM,YAHxEmZ,EAAiBxS,EAA2BF,EAAMzG,KAAMyM,EAAezM,YAK3E0R,EAAwBjL,EAAOE,EAA2B8F,GACzDA,CAAc,EAQV8X,CAAe9d,EAAOE,EACjC,EACH,EnE0OsB6d,CAA8BnM,GAAmB7L,GAAsBrK,GAAoBgX,GAAkBzH,IACtI+S,G1CvQmC,EAACxQ,EAAsB6F,EAAkBqK,EAAwB3X,EAAsB8F,EAAkBM,IACvI,cAAuBqB,EAC1B,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzC6Z,EAAiBD,EAAqBrO,EAAemY,GACrD9R,EAAYoO,EAA4BzU,GAE9CoW,MAAMxb,GAAS,EAAO0T,EADIjI,EAAY2f,IAA2B,MAGjEt6B,KAAKs0B,MAAQrE,EAAiBjwB,KAAM2a,EAAWiI,EAAezM,KAAMjB,GAA4BD,GACpG,CACA,QAAIkB,GACA,OAAOnW,KAAKs0B,KAChB,G0CyPoBuG,CAA0BzQ,GAAsB6F,GAAkBqK,GAAwB3X,GAAsB8F,GAAkBM,IACxJ+R,GnB7P+C,EAAC1b,EAA0B2S,EAAyB3O,EAAiC/X,IAC/H,CAACiJ,EAAe6M,GAAerN,eAAc1E,mBAAkB2E,wBAAuBuL,WAAUE,kBACnG,MAAM6D,EAAanC,GAAkBC,EAAa7M,EAAczK,YAC1DkxB,EAAoBzb,aAAoB0b,aAAe1b,EAAW,IAAI0b,aAAa1b,GACnF2b,EAAuBzb,aAAuBwb,aAAexb,EAAc,IAAIwb,aAAaxb,GAC5FD,EAAiBwb,EAAkBp8B,OACnC8gB,EAAoBwb,EAAqBt8B,OACzC+gB,EAAY5hB,KAAKsjB,IAAI7B,EAAgBE,GAC3C,GAAuB,IAAnBF,GAAwBA,EAAiB,GACzC,MAAMlU,IAEV,GAA6B,IAAzB0vB,EAAkB,GAClB,MAAMhJ,IAEV,GAA0B,IAAtBtS,GAA2BA,EAAoB,GAC/C,MAAMpU,IAEV,GAAgC,IAA5B4vB,EAAqB,GACrB,MAAMlJ,IAEV,GAA6B,IAAzBgJ,EAAkB,GAAU,CAC5B,IAAK,IAAI35B,EAAI,EAAGA,EAAIqe,EAAmBre,GAAK,EACxC65B,EAAqB75B,IAAM25B,EAAkB,GAEjD,IAAK,IAAI35B,EAAI,EAAGA,EAAIme,EAAgBne,GAAK,EACrC25B,EAAkB35B,IAAM25B,EAAkB,EAElD,CACA,MAAMG,EAAsB9X,EAAgC9O,EAAe+O,EAAYvP,EAAcA,GACrGonB,EAAoBpnB,aAAeA,EACnConB,EAAoB9rB,iBAAmBA,EACvC8rB,EAAoBnnB,sBAAwBA,EAC5C,MACMonB,EAAgB,GAChBC,EAAW,GACXC,EAAW,GACjB,IAAK,IAAIj6B,EAAI,EAAGA,EAAI0S,EAAc1S,GAAK,EAAG,CACtC+5B,EAAcp6B,KAAK,GACnB,MAAM4e,EAAU,IAAIjL,aANH,IAOXkL,EAAU,IAAIlL,aAPH,IAQjBiL,EAAQ2b,KAAK,GACb1b,EAAQ0b,KAAK,GACbF,EAASr6B,KAAK4e,GACd0b,EAASt6B,KAAK6e,EAClB,CAEAsb,EAAoB7hB,eAAkBlL,IAClC,MAAMoL,EAAcpL,EAAMoL,YACpBgiB,EAAeptB,EAAMotB,aACrBvmB,EAAmBuE,EAAYvE,iBACrC,IAAK,IAAI5T,EAAI,EAAGA,EAAI4T,EAAkB5T,GAAK,EAAG,CAC1C,MAAMwR,EAAQ2G,EAAYzE,eAAe1T,GACnCuR,EAAS4oB,EAAazmB,eAAe1T,GAC3C+5B,EAAc/5B,GAAKie,GAAa0b,EAAmBxb,EAAgB0b,EAAsBxb,EAAmBC,EAAW0b,EAASh6B,GAAIi6B,EAASj6B,GAAI+5B,EAAc/5B,GArBlJ,GAqBoKwR,EAAOD,EAC5L,GAEJ,MAAM6oB,EAAUlnB,EAAczK,WAAa,EA6D3C,OAAOwY,GA5D0B,CAC7B,cAAIgB,GACA,OAAOA,CACX,EACA,gBAAIvP,GACA,OAAOonB,EAAoBpnB,YAC/B,EACA,gBAAIA,CAAahX,GACbo+B,EAAoBpnB,aAAehX,CACvC,EACA,oBAAIsS,GACA,OAAO8rB,EAAoB9rB,gBAC/B,EACA,oBAAIA,CAAiBtS,GACjBo+B,EAAoB9rB,iBAAmBtS,CAC3C,EACA,yBAAIiX,GACA,OAAOmnB,EAAoBnnB,qBAC/B,EACA,yBAAIA,CAAsBjX,GACtBo+B,EAAoBnnB,sBAAwBjX,CAChD,EACA,WAAIoS,GACA,OAAOgsB,EAAoBhsB,OAC/B,EACA,UAAI8I,GACA,MAAO,CAACkjB,EACZ,EACA,kBAAI7rB,GACA,OAAO6rB,EAAoB7rB,cAC/B,EACA,mBAAIC,GACA,OAAO4rB,EAAoB5rB,eAC/B,EACA,gBAAAnL,IAAoB+H,GAEhB,OAAOgvB,EAAoB/2B,iBAAiB+H,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACvE,EACA,aAAA8R,IAAiB9R,GACb,OAAOgvB,EAAoBld,cAAc9R,EAAK,GAClD,EACA,oBAAAuoB,CAAqBC,EAAaC,EAAaC,GAC3C,GAAIF,EAAY/1B,SAAWg2B,EAAYh2B,QAAUg2B,EAAYh2B,SAAWi2B,EAAcj2B,OAClF,MAAMygB,IAEV,MAAMzgB,EAAS+1B,EAAY/1B,OAC3B,IAAK,IAAIyC,EAAI,EAAGA,EAAIzC,EAAQyC,GAAK,EAAG,CAChC,MAAMq6B,GAAS39B,KAAK49B,IAAMhH,EAAYtzB,GAAKo6B,GACrCrY,EAAI,CAACrlB,KAAK69B,IAAIF,GAAQ39B,KAAK89B,IAAIH,IAG/BI,EAAWhZ,GAFCI,GAAmBgY,EAAsB9X,GACvCF,GAAmB8X,EAAmB5X,IAE1DwR,EAAYvzB,GAAKtD,KAAKg+B,KAAKD,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAC9EjH,EAAcxzB,GAAKtD,KAAKi+B,MAAMF,EAAS,GAAIA,EAAS,GACxD,CACJ,EACA,mBAAAztB,IAAuBlC,GACnB,OAAOgvB,EAAoB9sB,oBAAoBlC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAC1E,GAEkDgvB,EAAoB,EmBwI3Cc,CAAsC5c,GAA0B,GAAyBgE,GAAiC,IAC3J6Y,GoE/Q+C,EAACvV,EAAiB/D,EAAsBS,EAAiC8Y,IAClHpf,GAEA4J,EAAgB1G,IAAoB,IAAMA,GAAmBlD,KAEtD7X,QAAQT,QAAQkiB,EAAgBwV,EAA2CA,IAA4CjV,MAAMkV,IAChI,IAAKA,EAA2C,CAC5C,MAAMjB,EAAsB9X,EAAgCtG,EAA2B,IAAK,EAAG,GAC/FA,EAA0Bsf,WAAa,KACnClB,EAAoB7hB,eAAiB,KACrC6hB,EAAoBv3B,YAAY,EAEpCu3B,EAAoB7hB,eAAiB,IAAMyD,EAA0B2T,YACrEyK,EAAoBh4B,QAAQ4Z,EAA0BlG,YAC1D,CACA,OAAOkG,EAA0Buf,gBAAgB,IAGlD,IAAIp3B,SAAST,IAEhB,MAAMgvB,EAAW7Q,EAAqB7F,EAA2B,CAC7DhJ,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBoC,KAAM,IAEV2G,EAA0Bsf,WAAcjuB,IACpCqlB,EAAS7vB,aACTa,EAAQ2J,EAAM0O,eAAe,EAEjC2W,EAAStwB,QAAQ4Z,EAA0BlG,aAC3CkG,EAA0Buf,gBAAgB,IpEgPdC,CAAsC5V,GAAiB/D,GAAsBS,GqEhRtD,EAACT,EAAsBgG,IAC3E,KACH,GAA6C,OAAzCA,EACA,OAAO1jB,QAAQT,SAAQ,GAE3B,MAAMsY,EAA4B,IAAI6L,EAAqC,EAAG,EAAG,OAE3E6K,EAAW7Q,EAAqB7F,EAA2B,CAC7DhJ,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBoC,KAAM,IAGV,OAAO,IAAIlR,SAAST,IAChBsY,EAA0Bsf,WAAa,KACnC5I,EAAS7vB,aACTa,EAAkD,IAA1CsY,EAA0B2T,YAAkB,EAExD3T,EAA0Buf,gBAAgB,GAC5C,ErE4P4IE,CAAgD5Z,GAAsBgG,KACtN6T,GsEnP4C,EAAC9N,EAAmCpW,EAAoBqQ,EAAsCd,EAAyBoU,IAC9J,CAAC3c,EAAUE,KACd,MAAMsW,EAA2B,IAAIlzB,QACrC,IAAI65B,EAAwB,KAC5B,MAAM1G,EAAkB3yB,MAAOwZ,EAAOE,KAClC,IAAIuI,EAA8B,KAC9BqX,EAAsBpkB,EAAmBsE,GAE7C,MAAM+f,EAAsCvoB,GAAiBsoB,EAAqB5f,GAmBlF,QAjBkDpe,IAA9Coe,EAA0B8f,gBAC1BvX,EAA8BqJ,EAAkC5R,EAA2B,CACvF/S,OAAQ,KACR+J,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBqB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,IAGZonB,IAEND,EAAsB5f,EAA0B8f,gBAAgBpd,EAAaF,IAEjFwW,EAAyBpyB,IAAIoZ,EAA2D,OAAhCuI,EAAuCqX,EAAsBrX,GACjF,OAAhCA,EAAsC,CACtC,GAA8B,OAA1BoX,EAAgC,CAChC,GAA6C,OAAzC9T,EACA,MAAM,IAAI/nB,MAAM,uDAEpB,MAAMi8B,EAA6B,IAAIlU,EAEvC/L,EAAM1N,QAAQ0H,YAAY9C,aAE1B8I,EAAM1N,QAAQvQ,OAAQme,EAA0BjT,YAChD4yB,EAAwB,iBACd5U,EAAwBjL,EAAOigB,EAA4BA,EAA2BjmB,aAE5F,MApEC,EAACiG,EAAgBC,EAA2BwC,EAAUE,KAC3E,MAAMub,EAAoBzb,aAAoB0b,aAAe1b,EAAW,IAAI0b,aAAa1b,GACnF2b,EAAuBzb,aAAuBwb,aAAexb,EAAc,IAAIwb,aAAaxb,GAC5FD,EAAiBwb,EAAkBp8B,OACnC8gB,EAAoBwb,EAAqBt8B,OACzC+gB,EAAY5hB,KAAKsjB,IAAI7B,EAAgBE,GAC3C,GAA6B,IAAzBsb,EAAkB,GAAU,CAC5B,IAAK,IAAI35B,EAAI,EAAGA,EAAIme,EAAgBne,GAAK,EACrC65B,EAAqB75B,IAAM25B,EAAkB,GAEjD,IAAK,IAAI35B,EAAI,EAAGA,EAAIqe,EAAmBre,GAAK,EACxC25B,EAAkB35B,IAAM25B,EAAkB,EAElD,CACA,MACMpb,EAAU,IAAIjL,aADC,IAEfkL,EAAU,IAAIlL,aAFC,IAGfooB,EAAiBhgB,EAA0B5D,aAAa2D,EAAe7H,iBAAkB6H,EAAele,OAAQke,EAAehT,YAC/HmL,EAAmB6H,EAAe7H,iBACxC,IAAK,IAAI5T,EAAI,EAAGA,EAAI4T,EAAkB5T,GAAK,EAAG,CAC1C,MAAMwR,EAAQiK,EAAe/H,eAAe1T,GACtCuR,EAASmqB,EAAehoB,eAAe1T,GAC7Cue,EAAQ2b,KAAK,GACb1b,EAAQ0b,KAAK,GACbjc,GAAa0b,EAAmBxb,EAAgB0b,EAAsBxb,EAAmBC,EAAWC,EAASC,EAAS,EAVrG,GAUsHhN,EAAOD,EAClJ,CACA,OAAOmqB,CAAc,EA0CMC,OADsBd,EAAgCY,GACrB/f,EAA2BwC,EAAUE,EAChF,EAJuB,EAK5B,CACA,MAAMsd,QAAuBL,EAG7B,OAFApX,EAA4Btb,OAAS+yB,EACrCzX,EAA4BzgB,MAAM,GAC3BygB,CACX,CAEA,aADMwC,EAAwBjL,EAAOE,EAA2B4f,GACzDA,CAAmB,EAE9B,MAAO,CACH,MAAAn0B,CAAOqU,EAAOE,GACV,MAAMkL,EAA0B8N,EAAyBlyB,IAAIkZ,GAC7D,YAAgCpe,IAA5BspB,EACO/iB,QAAQT,QAAQwjB,GAEpB+N,EAAgBnZ,EAAOE,EAClC,EACH,EtEwL2BkgB,CAAmCtO,GAAmCpW,GAAoBqQ,GAAsCd,GAAyBoU,IACvLgB,GuEjR0C,CAACnC,GACtC,CAACxmB,EAAe6M,EAAapY,KAEhC,QAAsCrK,IAAlC4V,EAAcsoB,gBACd,OAAO9B,EAA+BxmB,EAAe6M,EAAapY,GAGtE,MAAM2zB,EAAsBpoB,EAAcsoB,gBAAgB7zB,EAAQyW,YAAazW,EAAQuW,UAEvF,OADAkB,GAA6Bkc,EAAqB3zB,GAC3C2zB,CAAmB,EvEwQAQ,CAAiCpC,IAC7DqC,GvC7QwC,EAAC/S,EAAsB6S,EAA2BT,EAA6B/T,EAAkBM,EAA6BiL,IACjK,cAA4B5J,EAC/B,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCyL,EAAYoO,EAA4BzU,GACxCmY,EAAgB,IAAK,MAAoB1jB,GACzC2zB,EAAsBO,EAA0B3oB,EAAeqG,EAAY,KAAOzL,EAAQiS,YAAasL,GAE7G/B,MAAMxb,GAAS,EAAOwtB,EADU/hB,EAAY6hB,EAA4B/P,EAAcnN,SAAUmN,EAAcjN,aAAe,M+GZ9E,CAACkd,IACb,IAAEjI,EAA7CiI,EAAoBjI,sBAAyBA,EAO1CiI,EAAoBjI,qBANZ,CAACC,EAAaC,EAAaC,KAC9B,GAAIF,EAAY/1B,SAAWg2B,EAAYh2B,QAAUg2B,EAAYh2B,SAAWi2B,EAAcj2B,OAClF,MAAMygB,KAEV,OAAOqV,EAAqBtxB,KAAKu5B,EAAqBhI,EAAaC,EAAaC,EAAc,EAE1D,E/GQpCwI,CAA4CV,GAC5C18B,KAAKq9B,qBAAuBX,EAE5B1I,EAAqBh0B,KAAM,EAC/B,CACA,oBAAAy0B,CAAqBC,EAAaC,EAAaC,GAC3C,OAAO50B,KAAKq9B,qBAAqB5I,qBAAqBC,EAAaC,EAAaC,EACpF,GuC2PyB0I,CAA+BlT,GAAsB6S,GAA2BT,GAA6B/T,GAAkBM,GAA6BiL,IACvLuJ,GyEnRoC,EAACtN,EAAkBwF,EAA+BmB,EAAgCxT,EAAiC/X,EAAyBmZ,EAAgBuE,EAA6BrE,IACxN,CAACxV,EAASoF,KACb,MAAMkpB,EAAiBlpB,EAAcpG,UA+L/B,SAAEuvB,EAAQ,SAAEC,EAAQ,SAAEC,EAAQ,UAAE3Z,EAAS,UAAEC,EAAS,UAAEC,EAAS,IAAE0Z,EAAG,IAAEC,EAAG,IAAEC,QAAoCp/B,IAA5B8+B,EAAeC,SA7L1E,MAC1B,MAAM1zB,EAAS,IAAI2K,aAAa,GAC1B4gB,EAAoBG,EAA8BnhB,EAAe,CACnER,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvB1E,eAAgB,IAEdsL,EAAYoO,EAA4BzU,GAC9C,IAAIypB,GAA+B,EAC/BC,EAAkB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACnCC,EAAe,CAAC,EAAG,EAAG,GAC1B,MAAMC,EAA4B,KAC9B,GAAIH,EACA,OAEJA,GAA+B,EAC/B,MAAM7C,EAAsB9X,EAAgC9O,EAAe,IAAK,EAAG,GAEnF4mB,EAAoB7hB,eAAiB,EAAGE,kBACpC,MAAM4kB,EAAc,CAChB3Z,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,IAEpCo0B,EAAY3kB,MAAK,CAAC1c,EAAO0B,IAAU1B,IAAUkhC,EAAgBx/B,OAC7Dg/B,EAAeY,kBAAkBD,GACjCH,EAAkBG,GAEtB,MAAME,EAAU,CACZ7Z,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,IAEpCs0B,EAAQ7kB,MAAK,CAAC1c,EAAO0B,IAAU1B,IAAUmhC,EAAaz/B,OACtDg/B,EAAec,eAAeD,GAC9BJ,EAAeI,EACnB,EAEJ/I,EAAkBpyB,QAAQg4B,EAAoB,EAE5CqD,EAAwB//B,GAAW1B,IACjCA,IAAUkhC,EAAgBx/B,KAC1Bw/B,EAAgBx/B,GAAS1B,EACzB0gC,EAAeY,kBAAkBJ,GACrC,EAEEQ,EAAqBhgC,GAAW1B,IAC9BA,IAAUmhC,EAAaz/B,KACvBy/B,EAAaz/B,GAAS1B,EACtB0gC,EAAec,eAAeL,GAClC,EAEEQ,EAAuB,CAAC7rB,EAAO8rB,EAAcC,KAC/C,MAAMC,EAAqBhI,EAA+BtiB,EAAe,CACrER,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBsC,OAAQqoB,IAEZE,EAAmB17B,QAAQoyB,EAAmB,EAAG1iB,GAEjDgsB,EAAmBh6B,QACnBW,OAAO4c,eAAeyc,EAAmBvoB,OAAQ,eAAgB,CAC7D,GAAAzS,GACI,OAAO86B,CACX,IAMJ,MAAMhpB,EAAaua,EAAiB,CAAE/gB,WAAWyL,EAAWikB,EAAmBvoB,OAAQnB,GAA4BD,IAgBlF,IAAEyb,EAYEK,EAYOC,EAYLC,EAYRI,EAYDlM,EAYK+L,EAYnC,OAnGAxM,EAAmBhP,EAAY,SAAU9R,GAAQ,IAAMA,EAAIT,KAAKuS,KAAchS,GAAS5G,IACnF,IACI4G,EAAIP,KAAKuS,EAAY5Y,EACzB,CACA,MAAO6L,GACH,GAAiB,IAAbA,EAAIN,KACJ,MAAMM,CAEd,CACAu1B,IACIvjB,GAEAgkB,EAAS7hC,EACb,IAEJ4Y,EAAWgb,qBAAwBA,EAWhChb,EAAWgb,oBAVN/V,EACO,KACH,MAAMtP,GAAyB,EAGhC,IAAIa,KACP,MAAMpP,EAAQ4zB,EAAoBnW,MAAM7E,EAAYxJ,GAEpD,OADAgyB,IACOphC,CAAK,GAGpB4Y,EAAWqb,uBAA0BA,EAWlCrb,EAAWqb,sBAVNpW,EACO,KACH,MAAMtP,GAAyB,EAGhC,IAAIa,KACP,MAAMpP,EAAQi0B,EAAsBxW,MAAM7E,EAAYxJ,GAEtD,OADAgyB,IACOphC,CAAK,GAGpB4Y,EAAWsb,8BAAiCA,EAWzCtb,EAAWsb,6BAVNrW,EACO,KACH,MAAMtP,GAAyB,EAGhC,IAAIa,KACP,MAAMpP,EAAQk0B,EAA6BzW,MAAM7E,EAAYxJ,GAE7D,OADAgyB,IACOphC,CAAK,GAGpB4Y,EAAWub,yBAA4BA,EAWpCvb,EAAWub,wBAVNtW,EACO,KACH,MAAMtP,GAAyB,EAGhC,IAAIa,KACP,MAAMpP,EAAQm0B,EAAwB1W,MAAM7E,EAAYxJ,GAExD,OADAgyB,IACOphC,CAAK,GAGpB4Y,EAAW2b,iBAAoBA,EAW5B3b,EAAW2b,gBAVN1W,EACO,KACH,MAAMtP,GAAyB,EAGhC,IAAIa,KACP,MAAMpP,EAAQu0B,EAAgB9W,MAAM7E,EAAYxJ,GAEhD,OADAgyB,IACOphC,CAAK,GAGpB4Y,EAAWyP,gBAAmBA,EAW3BzP,EAAWyP,eAVNxK,EACO,KACH,MAAMtP,GAAyB,EAGhC,IAAIa,KACP,MAAMpP,EAAQqoB,EAAe5K,MAAM7E,EAAYxJ,GAE/C,OADAgyB,IACOphC,CAAK,GAGpB4Y,EAAWwb,qBAAwBA,EAWhCxb,EAAWwb,oBAVNvW,EACO,KACH,MAAMtP,GAAyB,EAGhC,IAAIa,KACP,MAAMpP,EAAQo0B,EAAoB3W,MAAM7E,EAAYxJ,GAEpD,OADAgyB,IACOphC,CAAK,GAGb4Y,CAAU,EAErB,MAAO,CACH+nB,SAAUgB,EAAqB,EAAG,EAAGF,EAAqB,IAC1Db,SAAUe,EAAqB,EAAG,EAAGF,EAAqB,IAC1DZ,SAAUc,EAAqB,GAAI,EAAGF,EAAqB,IAC3Dva,UAAWya,EAAqB,EAAG,EAAGD,EAAkB,IACxDva,UAAWwa,EAAqB,EAAG,EAAGD,EAAkB,IACxDta,UAAWua,EAAqB,EAAG,EAAGD,EAAkB,IACxDZ,IAAKa,EAAqB,EAAG,EAAGF,EAAqB,IACrDV,IAAKY,EAAqB,EAAG,EAAGF,EAAqB,IACrDT,IAAKW,EAAqB,EAAG,EAAGF,EAAqB,IACxD,EAE4HM,GAA0BrB,EAC3J,MAAO,CACH,YAAIC,GACA,OAAOA,CACX,EACA,YAAIC,GACA,OAAOA,CACX,EACA,YAAIC,GACA,OAAOA,CACX,EACA,aAAI3Z,GACA,OAAOA,CACX,EACA,aAAIC,GACA,OAAOA,CACX,EACA,aAAIC,GACA,OAAOA,CACX,EACA,OAAI0Z,GACA,OAAOA,CACX,EACA,OAAIC,GACA,OAAOA,CACX,EACA,OAAIC,GACA,OAAOA,CACX,EACH,EzEqDmBgB,CAA2B7O,GAAkBwF,GAA+BmB,GAAgCxT,GAAiC,GAAyBoB,GAAgBuE,GAA6BrE,IACzOqa,GAAkC,IAAIn8B,QACtCo8B,G0ErRkD,EAACpM,EAAiC2K,EAAqBpU,EAAwBJ,EAA6BgW,EAAiCnZ,IAC1L,cAAsCuD,EACzC,WAAA5N,CAAY0jB,EAAgBjqB,GACxB0V,MAAMuU,GACNj/B,KAAKi/B,eAAiBA,EACtBvuB,EAAchN,IAAI1D,KAAMi/B,GACpBlW,EAA4BkW,IAC5BF,EAAgCr7B,IAAIu7B,EAAgB,IAAIt0B,KAE5D3K,KAAKk/B,aAAe,IAAItM,EAAgC5yB,KAAMgV,GAC9DhV,KAAKm/B,UAAY5B,EAAoBv9B,KAAMi/B,GAC3Cj/B,KAAKo/B,eAAiB,IAC1B,CACA,eAAI3O,GACA,OAAOzwB,KAAKi/B,eAAexO,WAC/B,CACA,eAAI7Z,GACA,OAAO5W,KAAKk/B,YAChB,CACA,YAAIhxB,GACA,OAAOlO,KAAKm/B,SAChB,CACA,iBAAIE,GACA,OAAOr/B,KAAKo/B,cAChB,CACA,iBAAIC,CAAcviC,GACd,MAAM01B,EAAmC,mBAAV11B,EAAuB8oB,EAAkB5lB,KAAMlD,GAAS,KACvFkD,KAAKi/B,eAAeI,cAAgB7M,EACpC,MAAM8M,EAAsBt/B,KAAKi/B,eAAeI,cAChDr/B,KAAKo/B,eAAyC,OAAxBE,GAAgCA,IAAwB9M,EAAkB11B,EAAQwiC,CAC5G,CACA,cAAIz1B,GACA,OAAO7J,KAAKi/B,eAAep1B,UAC/B,CACA,SAAI0F,GACA,OAAOvP,KAAKi/B,eAAe1vB,KAC/B,G1EiPmCgwB,CAAyC3M,GAAiC2K,GAAqBpU,GAAwBJ,GAA6BgW,GAAiCnZ,IAC1N4Z,G2ElR2C,EAACpR,EAAqB1H,EAAiBtB,EAAkEG,EAA+DC,EAAiEC,IAC/Q,CAACnR,EAAevL,KACnB,MAAM02B,EAAuBnrB,EAAcgR,mBAwB3C,OAvBA9E,GAA6Bif,EAAsB12B,GACnD6X,GAAqC6e,EAAsB12B,EAAS,UACpE6X,GAAqC6e,EAAsB12B,EAAS,kBACvCrK,IAAzBqK,EAAQua,aACRmc,EAAqBC,gBAAgB32B,EAAQua,cAG7ChD,GAA4Bmf,EAAsB12B,EAAS,QAG1D2d,EAAgBtB,GAAkE,IAAMA,EAAiE9Q,MAC1JuM,GAA0D4e,GAGzD/Y,EAAgBnB,GAA+D,IAAMA,EAA8DjR,MACpJmR,EAAuDga,EAAsBnrB,GAG5EoS,EAAgBlB,GAAiE,IAAMA,EAAgElR,MACxJ2M,GAAyDwe,GAG7DrR,EAAoB9Z,EAAemrB,GAC5BA,CAAoB,E3EwPAE,CAAkCvR,GAAqB1H,GAAiBtB,GAAkEG,GAA+DC,GAAiEC,IACvSma,G4EvR6C,EAACpR,EAAmBgR,EAA4BlnB,EAAoBgX,EAAkBzH,IAC9H,KACH,MAAMgY,EAAgC,IAAIj9B,QAC1C,IAAI0gB,EAAe,KACf1e,EAAQ,KACRgL,EAAO,KAmCX,MAAO,CACH,gBAAI0T,CAAaxmB,GACbwmB,EAAexmB,CACnB,EACA,SAAI8H,CAAM9H,GACN8H,EAAQ9H,CACZ,EACA,QAAI8S,CAAK9S,GACL8S,EAAO9S,CACX,EACA,MAAAyL,CAAOqU,EAAOE,GACV,MAAMgjB,EAA+BD,EAA8Bj8B,IAAIkZ,GACvE,YAAqCpe,IAAjCohC,EACO76B,QAAQT,QAAQs7B,GA/CN18B,OAAOwZ,EAAOE,KACvC,IAAI2iB,EAAuBnnB,EAAmBsE,GAE9C,MAAMmjB,EAAuC3rB,GAAiBqrB,EAAsB3iB,GACpF,IAAKijB,EAAsC,CACvC,MAAMh3B,EAAU,CACZ+K,aAAc2rB,EAAqB3rB,aACnC1E,iBAAkBqwB,EAAqBrwB,iBACvC2E,sBAAuB0rB,EAAqB1rB,sBAC5CkC,OAAQwpB,EAAqBxpB,OAAOnZ,MACpCoZ,UAAWupB,EAAqBvpB,UAAUpZ,MAC1CwmB,aAA+B,OAAjBA,OAAwB5kB,EAAY4kB,EAClDrmB,KAAMwiC,EAAqBxiC,MAE/BwiC,EAAuBD,EAA2B1iB,EAA2B/T,GAC/D,OAAVnE,GACA66B,EAAqB76B,MAAMA,GAElB,OAATgL,GACA6vB,EAAqB7vB,KAAKA,EAElC,CAWA,OAVAiwB,EAA8Bn8B,IAAIoZ,EAA2B2iB,GACxDM,SAKKvR,EAAkB1R,EAA2BF,EAAM3G,OAAQwpB,EAAqBxpB,cAChFuY,EAAkB1R,EAA2BF,EAAM1G,UAAWupB,EAAqBvpB,mBALnFoZ,EAAiBxS,EAA2BF,EAAM3G,OAAQwpB,EAAqBxpB,cAC/EqZ,EAAiBxS,EAA2BF,EAAM1G,UAAWupB,EAAqBvpB,kBAMtF2R,EAAwBjL,EAAOE,EAA2B2iB,GACzDA,CAAoB,EAiBhBO,CAAqBpjB,EAAOE,EACvC,EACH,E5E8N4BmjB,CAAoCzR,GAAmBgR,GAA4BlnB,GAAoBgX,GAAkBzH,IACxJqY,Gf7QyC,EAAC9V,EAAsB6F,EAAkBuP,EAA4BI,EAA8BnX,EAAkBM,EAA6BnD,IACtL,cAA6BwE,EAChC,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzC02B,EAAuBD,EAA2BlrB,EAAemY,GACjE9R,EAAYoO,EAA4BzU,GACxC6rB,EAA0BxlB,EAAYilB,IAAiC,KACvEpE,EAAUtsB,EAAQrF,WAAa,EACrC6gB,MAAMxb,GAAS,EAAOuwB,EAAsBU,GAE5CngC,KAAKo0B,QAAUnE,EAAiBjwB,KAAM2a,EAAW8kB,EAAqBxpB,OAAQ,QAAS,QAEvFjW,KAAKq0B,WAAapE,EAAiBjwB,KAAM2a,EAAW8kB,EAAqBvpB,UAAWslB,GAAUA,GAC9Fx7B,KAAKogC,sBAAwBX,EAC7Bz/B,KAAKqyB,SAAW,KAChBryB,KAAKqgC,wBAA0BF,EACM,OAAjCngC,KAAKqgC,8BAAmE3hC,IAA/B+tB,EAAcnJ,eACvDtjB,KAAKqgC,wBAAwB/c,aACzBmJ,EAAcnJ,aAE1B,CACA,UAAIrN,GACA,OAAOjW,KAAKo0B,OAChB,CACA,aAAIle,GACA,OAAOlW,KAAKq0B,UAChB,CACA,WAAI9B,GACA,OAAOvyB,KAAKqyB,QAChB,CACA,WAAIE,CAAQz1B,GACR,MAAM01B,EAAmC,mBAAV11B,EAAuB8oB,EAAkB5lB,KAAMlD,GAAS,KACvFkD,KAAKogC,sBAAsB7N,QAAUC,EACrC,MAAMC,EAAgBzyB,KAAKogC,sBAAsB7N,QACjDvyB,KAAKqyB,SAA6B,OAAlBI,GAA0BA,IAAkBD,EAAkB11B,EAAQ21B,CAC1F,CACA,QAAIx1B,GACA,OAAO+C,KAAKogC,sBAAsBnjC,IACtC,CACA,QAAIA,CAAKH,GACLkD,KAAKogC,sBAAsBnjC,KAAOH,EACG,OAAjCkD,KAAKqgC,0BACLrgC,KAAKqgC,wBAAwB/c,aAAe,KAEpD,CACA,eAAAoc,CAAgBpc,GACZtjB,KAAKogC,sBAAsBV,gBAAgBpc,GACN,OAAjCtjB,KAAKqgC,0BACLrgC,KAAKqgC,wBAAwB/c,aAAeA,EAEpD,CACA,KAAA1e,CAAMmc,EAAO,GAKT,GAJA/gB,KAAKogC,sBAAsBx7B,MAAMmc,GACI,OAAjC/gB,KAAKqgC,0BACLrgC,KAAKqgC,wBAAwBz7B,MAAQmc,GAEd,WAAvB/gB,KAAKkP,QAAQK,MAAoB,CACjC4D,EAAyBnT,MACzB,MAAM0yB,EAA8B,KAChC1yB,KAAKogC,sBAAsBhyB,oBAAoB,QAASskB,GACpDvd,GAAkBnV,OAClBwT,GAA0BxT,KAC9B,EAEJA,KAAKogC,sBAAsBj8B,iBAAiB,QAASuuB,EACzD,CACJ,CACA,IAAA9iB,CAAKmR,EAAO,GACR/gB,KAAKogC,sBAAsBxwB,KAAKmR,GACK,OAAjC/gB,KAAKqgC,0BACLrgC,KAAKqgC,wBAAwBzwB,KAAOmR,EAE5C,GeoM0Buf,CAAgClW,GAAsB6F,GAAkBuP,GAA4BI,GAA8BnX,GAAkBM,GAA6BnD,IAC7M2a,G6E1R2D,CAAC7R,GACvD,CAACpa,EAAeD,KACnB,MAAMgR,EAA8BqJ,EAAkCpa,EAAe,CACjFvK,OAAQ,KACR+J,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBqB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,IAEZf,EAAoBF,EAAc4E,aAAa,EAAG,EAAG,OAK3D,OAJAmM,EAA4Btb,OAASyK,EACrC6Q,EAA4BjQ,MAAO,EACnCiQ,EAA4BniB,QAAQmR,GACpCgR,EAA4BzgB,QACrB,KACHygB,EAA4BzV,OAC5ByV,EAA4B1hB,WAAW0Q,EAAgB,CAC1D,E7EsQ0CmsB,CAAkD9R,IAC/F+R,G8EzRgD,EAACF,EAA4CxO,EAAyBpP,EAAsB8B,EAAWqQ,IAClJ,CAACxgB,GAAiBgQ,QAAOC,gBAAekS,MAC3C,MAAMiK,EAAyBpsB,EAAcqsB,mBACvCC,EAAyBtsB,EAAcqsB,mBAC7CngB,GAA6BkgB,EAAwBjK,GACrDjW,GAA6BogB,EAAwBnK,GACrD,MAAMoK,EAAgBle,EAAqBrO,EAAe,IAAKmiB,EAAkBtgB,KAAM,IACjF2qB,EAAiBne,EAAqBrO,EAAe,IAAKmiB,EAAkBtgB,MAAO,IACnF4qB,EAAiBpe,EAAqBrO,EAAe,IAAKmiB,EAAkBtgB,KAAM,IAClF6qB,EAAiBre,EAAqBrO,EAAe,IAAKmiB,EAAkBtgB,MAAO,IACzF,IAAI8qB,EAAwC,KACxCC,GAAc,EACdC,EAAkB,KACtB,MAAMC,EAA4B,CAC9B,cAAI/d,GAEJ,EACA,gBAAIvP,GACA,OAAO4sB,EAAuB5sB,YAClC,EACA,gBAAIA,CAAahX,GACb+jC,EAAc/sB,aAAehX,EAC7BgkC,EAAehtB,aAAehX,EAC9B4jC,EAAuB5sB,aAAehX,EACtCikC,EAAejtB,aAAehX,EAC9B8jC,EAAuB9sB,aAAehX,EACtCkkC,EAAeltB,aAAehX,CAClC,EACA,oBAAIsS,GACA,OAAOsxB,EAAuBtxB,gBAClC,EACA,oBAAIA,CAAiBtS,GACjB+jC,EAAczxB,iBAAmBtS,EACjCgkC,EAAe1xB,iBAAmBtS,EAClC4jC,EAAuBtxB,iBAAmBtS,EAC1CikC,EAAe3xB,iBAAmBtS,EAClC8jC,EAAuBxxB,iBAAmBtS,EAC1CkkC,EAAe5xB,iBAAmBtS,CACtC,EACA,yBAAIiX,GACA,OAAO2sB,EAAuB3sB,qBAClC,EACA,yBAAIA,CAAsBjX,GACtB+jC,EAAc9sB,sBAAwBjX,EACtCgkC,EAAe/sB,sBAAwBjX,EACvC4jC,EAAuB3sB,sBAAwBjX,EAC/CikC,EAAehtB,sBAAwBjX,EACvC8jC,EAAuB7sB,sBAAwBjX,EAC/CkkC,EAAejtB,sBAAwBjX,CAC3C,EACA,WAAIoS,GACA,OAAOwxB,EAAuBxxB,OAClC,EACA,SAAIoV,GACA,OAAO6c,CACX,EACA,SAAI7c,CAAMxnB,GAEN,GAAc,OAAVA,GAAkBA,EAAM6B,OAAS,EACjC,MAAMozB,IAEV,GAAc,OAAVj1B,EACA4jC,EAAuBpc,MAAQxnB,EAC/B8jC,EAAuBtc,MAAQxnB,MAE9B,CACD,MAAMukC,EAAcvkC,EAAM6B,OACpB2iC,EAAgB,IAAI5sB,aAAa2sB,EAAc,EAAKA,EAAc,GAClEE,EAAgB,IAAI7sB,aAAa2sB,EAAc,EAAKA,EAAc,GACxEC,EAAc,GAAKxkC,EAAM,GACzBykC,EAAc,IAAMzkC,EAAMukC,EAAc,GACxC,MAAM1iC,EAASb,KAAK6B,MAAM0hC,EAAc,GAAK,GACvCG,GAAeH,EAAc,GAAK,EAAI,EAC5C,IAAK,IAAIjgC,EAAI,EAAGA,EAAIzC,EAAQyC,GAAK,EAAG,CAChC,MAAM7B,EAAkB6B,EAAIzC,EAAU6iC,EAChChiC,EAAa1B,KAAK2B,MAAMF,GACxBG,EAAa5B,KAAK6B,KAAKJ,GAC7B+hC,EAAclgC,GACV5B,IAAeE,EACT5C,EAAM0C,IACL,GAAKD,EAAiBC,IAAe1C,EAAM0C,IACzC,GAAKE,EAAaH,IAAmBzC,EAAM4C,GACxD6hC,EAAcngC,GACV5B,IAAeE,GACR5C,EAAMukC,EAAc,EAAI7hC,KACtB,GAAKD,EAAiBC,IAAe1C,EAAMukC,EAAc,EAAI7hC,IAC7D,GAAKE,EAAaH,IAAmBzC,EAAMukC,EAAc,EAAI3hC,EAC9E,CACA4hC,EAAc3iC,GAAU0iC,EAAc,GAAM,EAAIvkC,EAAM6B,EAAS,IAAM7B,EAAM6B,EAAS,GAAK7B,EAAM6B,EAAS,IAAM,EAC9G+hC,EAAuBpc,MAAQgd,EAC/BV,EAAuBtc,MAAQid,CACnC,CACAJ,EAAkBrkC,EACdokC,IACIzc,EAAU0c,IAA8D,OAA1CF,EAC9BA,EAAwCV,EAA2CjsB,EAAeusB,GAEnD,OAA1CI,IACLA,IACAA,EAAwC,MAGpD,EACA,UAAIjpB,GACA,MAAO,CAAC6oB,EACZ,EACA,kBAAIxxB,GACA,OAAOqxB,EAAuBrxB,cAClC,EACA,mBAAIC,GACA,OAAOoxB,EAAuBpxB,eAClC,EACA,cAAIiV,GACA,OAAOmc,EAAuBnc,UAClC,EACA,cAAIA,CAAWznB,GACX4jC,EAAuBnc,WAAaznB,EACpC8jC,EAAuBrc,WAAaznB,CACxC,EACA,gBAAAqH,IAAoB+H,GAChB,OAAO20B,EAAc18B,iBAAiB+H,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACjE,EACA,aAAA8R,IAAiB9R,GACb,OAAO20B,EAAc7iB,cAAc9R,EAAK,GAC5C,EACA,mBAAAkC,IAAuBlC,GACnB,OAAO20B,EAAczyB,oBAAoBlC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACpE,GAEU,OAAVoY,IAEA8c,EAA0B9c,MAAQA,aAAiB5P,aAAe4P,EAAQ,IAAI5P,aAAa4P,IAE3FC,IAAe6c,EAA0B7c,aACzC6c,EAA0B7c,WAAaA,GAuB3C,OAAOuQ,EAAmBzS,GAAqB+e,EAA2BL,IArBpD,KAClBF,EAAc39B,QAAQw9B,GAAwBx9B,QAAQ69B,GACtDF,EAAc39B,QAAQ49B,GAAgB59B,QAAQ09B,GAAwB19B,QAAQ89B,GAAgB99B,QAAQ69B,GACtGG,GAAc,EACVzc,EAAU0c,KACVF,EAAwCV,EAA2CjsB,EAAeusB,GACtG,IAEqB,KACrBA,EAAcl9B,WAAW+8B,GACzBA,EAAuB/8B,WAAWo9B,GAClCF,EAAcl9B,WAAWm9B,GACzBA,EAAen9B,WAAWi9B,GAC1BA,EAAuBj9B,WAAWq9B,GAClCA,EAAer9B,WAAWo9B,GAC1BG,GAAc,EACgC,OAA1CD,IACAA,IACAA,EAAwC,KAC5C,GAEuH,E9E4H3FQ,CAAuClB,GAA4C,GAAyB5d,GAAsB8B,GAAWqQ,IAC/K4M,G+E1R2C,EAACnB,EAA4CxO,EAAyB0O,EAAiChc,EAAWqQ,EAAoBvL,EAA+B7E,IAC3M,CAACpQ,EAAevL,KACnB,MAAM44B,EAAuBrtB,EAAcqsB,mBAO3C,GAAsC,OAAlCpX,GACuC,uBAAvCA,EAA8B1jB,WACqBnH,IAAnD4V,EAAc0E,aAAa7C,KAAKyrB,eAChC,OAAOnB,EAAgCnsB,EAAevL,GAE1DyX,GAA6BmhB,EAAsB54B,GACnD,MAAMub,EAA0B,OAAlBvb,EAAQub,OAAkBvb,EAAQub,iBAAiB5P,aAAe3L,EAAQub,MAAQ,IAAI5P,aAAa3L,EAAQub,OAEzH,GAAc,OAAVA,GAAkBA,EAAM3lB,OAAS,EACjC,MAAMozB,IAGVzR,GAA4BqhB,EAAsB,CAAErd,SAAS,SAC7DhE,GAA4BqhB,EAAsB54B,EAAS,cAC3D,IAAIk4B,EAAwC,KACxCC,GAAc,EAClBxc,EAAmBid,EAAsB,SAAU/9B,GAAQ,IAAMA,EAAIT,KAAKw+B,KAAwBj+B,GAAS5G,IACvG4G,EAAIP,KAAKw+B,EAAsB7kC,GAC3BokC,IACIzc,EAAU3nB,IAAoD,OAA1CmkC,EACpBA,EAAwCV,EAA2CjsB,EAAeqtB,GAE5Fld,EAAU3nB,IAAoD,OAA1CmkC,IAC1BA,IACAA,EAAwC,OAGzCnkC,KAeX,OAAOg4B,EAAmB6M,GAbJ,KAClBT,GAAc,EACVzc,EAAUkd,EAAqBrd,SAC/B2c,EAAwCV,EAA2CjsB,EAAeqtB,GACtG,IAEqB,KACrBT,GAAc,EACgC,OAA1CD,IACAA,IACAA,EAAwC,KAC5C,GAE4E,E/EuOrDY,CAAkCtB,GAA4C,GAAyBE,GAAiChc,GAAWqQ,GAAoBvL,GAA+B7E,IACnOod,GgF3R4C,EAAClqB,EAAyCma,EAAyB0D,EAA+B9S,EAAsBS,EAAiCse,EAA4Br2B,EAAyBgN,EAA8CmM,EAAgBsQ,IACnT,CAACxgB,GAAiBiP,iBAAgBC,iBAAgBC,gBAAeC,gBAAeC,cAAaC,eAAcC,eAAcC,eAAcC,eAAcC,YAAWC,YAAWC,YAAWC,cAAaC,mBAAkBqS,MACxN,MAAMsL,EAAaztB,EAAc0tB,eAEjC,GAAIvL,EAAiB3iB,aAAe,EAChC,MAAMzI,IAGV,GAA0C,QAAtCorB,EAAiBrnB,iBACjB,MAAM/D,IAEVmV,GAA6BuhB,EAAYtL,GACzC,MAAMwL,EAAyB,CAC3BnuB,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,YAErBuhB,EAAoBG,EAA8BnhB,EAAe,IAChE2tB,EACHluB,sBAAuB,WACvB1E,eAAgB,IAEdwxB,EAAgBle,EAAqBrO,EAAe,IAAKmiB,EAAkBtgB,KAAM,IACjF+rB,EAAuBvf,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAC9FgsB,EAAuBxf,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAC9FisB,EAAuBzf,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAC9FksB,EAAoB1f,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAC3FmsB,EAAoB3f,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAC3FosB,EAAoB5f,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAC3F+kB,EAAsB9X,EAAgC9O,EAAe,IAAK,EAAG,GAC7EkuB,EAAiBd,EAA2BptB,EAAe,IAC1D2tB,EACH3d,MAAO,IAAI5P,aAAa,CAAC,EAAG,IAC5B6P,WAAY,SAEhB,IAAIyZ,EAAkB,CAACpa,EAAcC,EAAcC,GAC/Cma,EAAe,CAACja,EAAWC,EAAWC,GAC1C,MAAMna,EAAS,IAAI2K,aAAa,GAEhCwmB,EAAoB7hB,eAAiB,EAAGE,kBACpC,MAAM4kB,EAAc,CAChB3Z,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,IAEpCo0B,EAAY3kB,MAAK,CAAC1c,EAAO0B,IAAU1B,IAAUkhC,EAAgBx/B,OAC7DujC,EAAW3D,kBAAkBD,GAC7BH,EAAkBG,GAEtB,MAAME,EAAU,CACZ7Z,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,GACpCya,EAAejL,EAAaxP,EAAQ,IAEpCs0B,EAAQ7kB,MAAK,CAAC1c,EAAO0B,IAAU1B,IAAUmhC,EAAaz/B,OACtDujC,EAAWzD,eAAeD,GAC1BJ,EAAeI,EACnB,EAEJ94B,OAAO4c,eAAeggB,EAAqBhsB,KAAM,eAAgB,CAAEvS,IAAK,IAAM,IAC9E2B,OAAO4c,eAAeigB,EAAqBjsB,KAAM,eAAgB,CAAEvS,IAAK,IAAM,IAC9E2B,OAAO4c,eAAekgB,EAAkBlsB,KAAM,eAAgB,CAAEvS,IAAK,IAAM,IAC3E2B,OAAO4c,eAAemgB,EAAkBnsB,KAAM,eAAgB,CAAEvS,IAAK,IAAM,IAC3E2B,OAAO4c,eAAeogB,EAAkBpsB,KAAM,eAAgB,CAAEvS,IAAK,IAAM,IAC3E,MAAM6+B,EAAwB,CAC1B,cAAIpf,GAEJ,EACA,gBAAIvP,GACA,OAAOiuB,EAAWjuB,YACtB,EACA,gBAAIA,CAAahX,GAEb,GAAIA,EAAQ,EACR,MAAMuO,IAEVw1B,EAAc/sB,aAAehX,EAC7BilC,EAAWjuB,aAAehX,CAC9B,EACA,oBAAIsS,GACA,OAAO2yB,EAAW3yB,gBACtB,EACA,oBAAIA,CAAiBtS,GAEjB,GAAc,QAAVA,EACA,MAAMuO,IAEVw1B,EAAczxB,iBAAmBtS,EACjCilC,EAAW3yB,iBAAmBtS,CAClC,EACA,yBAAIiX,GACA,OAAOguB,EAAWhuB,qBACtB,EACA,yBAAIA,CAAsBjX,GACtB+jC,EAAc9sB,sBAAwBjX,EACtCilC,EAAWhuB,sBAAwBjX,CACvC,EACA,kBAAIymB,GACA,OAAOwe,EAAWxe,cACtB,EACA,kBAAIA,CAAezmB,GACfilC,EAAWxe,eAAiBzmB,CAChC,EACA,kBAAI0mB,GACA,OAAOue,EAAWve,cACtB,EACA,kBAAIA,CAAe1mB,GACfilC,EAAWve,eAAiB1mB,CAChC,EACA,iBAAI2mB,GACA,OAAOse,EAAWte,aACtB,EACA,iBAAIA,CAAc3mB,GAEd,GAAIA,EAAQ,GAAKA,EAAQ,EACrB,MAAMi1B,IAEVgQ,EAAWte,cAAgB3mB,CAC/B,EACA,WAAIoS,GACA,OAAO6yB,EAAW7yB,OACtB,EACA,iBAAIwU,GACA,OAAOqe,EAAWre,aACtB,EACA,iBAAIA,CAAc5mB,GACdilC,EAAWre,cAAgB5mB,CAC/B,EACA,UAAIkb,GACA,MAAO,CAAC6oB,EACZ,EACA,eAAIld,GACA,OAAOoe,EAAWpe,WACtB,EACA,eAAIA,CAAY7mB,GAEZ,GAAIA,EAAQ,EACR,MAAM,IAAIkkB,WAEd+gB,EAAWpe,YAAc7mB,CAC7B,EACA,kBAAIuS,GACA,OAAO0yB,EAAW1yB,cACtB,EACA,mBAAIC,GACA,OAAOyyB,EAAWzyB,eACtB,EACA,gBAAIsU,GACA,OAAOse,EAAqB/rB,IAChC,EACA,gBAAI0N,GACA,OAAOse,EAAqBhsB,IAChC,EACA,gBAAI2N,GACA,OAAOse,EAAqBjsB,IAChC,EACA,gBAAI4N,GACA,OAAOge,EAAWhe,YACtB,EACA,gBAAIA,CAAajnB,GACbilC,EAAWhe,aAAejnB,CAC9B,EACA,aAAIknB,GACA,OAAOqe,EAAkBlsB,IAC7B,EACA,aAAI8N,GACA,OAAOqe,EAAkBnsB,IAC7B,EACA,aAAI+N,GACA,OAAOqe,EAAkBpsB,IAC7B,EACA,eAAIgO,GACA,OAAO4d,EAAW5d,WACtB,EACA,eAAIA,CAAYrnB,GAEZ,GAAIA,EAAQ,EACR,MAAM,IAAIkkB,WAEd+gB,EAAW5d,YAAcrnB,CAC7B,EACA,iBAAIsnB,GACA,OAAO2d,EAAW3d,aACtB,EACA,iBAAIA,CAActnB,GAEd,GAAIA,EAAQ,EACR,MAAM,IAAIkkB,WAEd+gB,EAAW3d,cAAgBtnB,CAC/B,EACA,gBAAAqH,IAAoB+H,GAChB,OAAO20B,EAAc18B,iBAAiB+H,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACjE,EACA,aAAA8R,IAAiB9R,GACb,OAAO20B,EAAc7iB,cAAc9R,EAAK,GAC5C,EACA,mBAAAkC,IAAuBlC,GACnB,OAAO20B,EAAczyB,oBAAoBlC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACpE,GAEAqX,IAAmBkf,EAAsBlf,iBACzCkf,EAAsBlf,eAAiBA,GAEvCC,IAAmBif,EAAsBjf,iBACzCif,EAAsBjf,eAAiBA,GAEvCC,IAAkBgf,EAAsBhf,gBACxCgf,EAAsBhf,cAAgBA,GAEtCC,IAAkB+e,EAAsB/e,gBACxC+e,EAAsB/e,cAAgBA,GAEtCC,IAAgB8e,EAAsB9e,cACtC8e,EAAsB9e,YAAcA,GAEpCC,IAAiB6e,EAAsB7e,aAAa9mB,QACpD2lC,EAAsB7e,aAAa9mB,MAAQ8mB,GAE3CC,IAAiB4e,EAAsB5e,aAAa/mB,QACpD2lC,EAAsB5e,aAAa/mB,MAAQ+mB,GAE3CC,IAAiB2e,EAAsB3e,aAAahnB,QACpD2lC,EAAsB3e,aAAahnB,MAAQgnB,GAE3CC,IAAiB0e,EAAsB1e,eACvC0e,EAAsB1e,aAAeA,GAErCC,IAAcye,EAAsBze,UAAUlnB,QAC9C2lC,EAAsBze,UAAUlnB,MAAQknB,GAExCC,IAAcwe,EAAsBxe,UAAUnnB,QAC9C2lC,EAAsBxe,UAAUnnB,MAAQmnB,GAExCC,IAAcue,EAAsBve,UAAUpnB,QAC9C2lC,EAAsBve,UAAUpnB,MAAQonB,GAExCC,IAAgBse,EAAsBte,cACtCse,EAAsBte,YAAcA,GAEpCC,IAAkBqe,EAAsBre,gBACxCqe,EAAsBre,cAAgBA,GAEf,IAAvB4Z,EAAgB,IAAmC,IAAvBA,EAAgB,IAAmC,IAAvBA,EAAgB,IACxE+D,EAAW3D,kBAAkBJ,GAET,IAApBC,EAAa,IAAgC,IAApBA,EAAa,IAAgC,IAApBA,EAAa,IAC/D8D,EAAWzD,eAAeL,GAiC9B,OAAOnJ,EAAmBzS,GAAqBogB,EAAuBV,IA/BhD,KAClBlB,EAAc39B,QAAQ6+B,GAEtBnqB,EAAwCipB,EAAe2B,EAAgB,EAAG,GAC1EA,EAAet/B,QAAQg/B,GAAsBh/B,QAAQoyB,EAAmB,EAAG,GAC3EkN,EAAet/B,QAAQi/B,GAAsBj/B,QAAQoyB,EAAmB,EAAG,GAC3EkN,EAAet/B,QAAQk/B,GAAsBl/B,QAAQoyB,EAAmB,EAAG,GAC3EkN,EAAet/B,QAAQm/B,GAAmBn/B,QAAQoyB,EAAmB,EAAG,GACxEkN,EAAet/B,QAAQo/B,GAAmBp/B,QAAQoyB,EAAmB,EAAG,GACxEkN,EAAet/B,QAAQq/B,GAAmBr/B,QAAQoyB,EAAmB,EAAG,GACxEA,EAAkBpyB,QAAQg4B,GAAqBh4B,QAAQoR,EAAcsC,YAAY,IAE5D,KACrBiqB,EAAcl9B,WAAWo+B,GAEzB1pB,EAA6CwoB,EAAe2B,EAAgB,EAAG,GAC/EA,EAAe7+B,WAAWu+B,GAC1BA,EAAqBv+B,WAAW2xB,GAChCkN,EAAe7+B,WAAWw+B,GAC1BA,EAAqBx+B,WAAW2xB,GAChCkN,EAAe7+B,WAAWy+B,GAC1BA,EAAqBz+B,WAAW2xB,GAChCkN,EAAe7+B,WAAW0+B,GAC1BA,EAAkB1+B,WAAW2xB,GAC7BkN,EAAe7+B,WAAW2+B,GAC1BA,EAAkB3+B,WAAW2xB,GAC7BkN,EAAe7+B,WAAW4+B,GAC1BA,EAAkB5+B,WAAW2xB,GAC7BA,EAAkB3xB,WAAWu3B,GAC7BA,EAAoBv3B,WAAW2Q,EAAcsC,YAAY,GAEsD,EhFGvF8rB,CAAmC9qB,GAAyC,GAAyB6d,GAA+B9S,GAAsBS,GAAiCse,GAA4B,GAAyBrpB,GAA8CmM,GAAgBsQ,IAC5U6N,GiF3RuC,CAACb,GACnC,CAACxtB,EAAevL,KACnB,MAAM65B,EAAmBtuB,EAAc0tB,eAEvC,YAAsCtjC,IAAlCkkC,EAAiBhf,aACVke,EAA4BxtB,EAAevL,IAEtDyX,GAA6BoiB,EAAkB75B,GAC/C6X,GAAqCgiB,EAAkB75B,EAAS,gBAChE6X,GAAqCgiB,EAAkB75B,EAAS,gBAChE6X,GAAqCgiB,EAAkB75B,EAAS,gBAChE6X,GAAqCgiB,EAAkB75B,EAAS,aAChE6X,GAAqCgiB,EAAkB75B,EAAS,aAChE6X,GAAqCgiB,EAAkB75B,EAAS,aAChEuX,GAA4BsiB,EAAkB75B,EAAS,kBACvDuX,GAA4BsiB,EAAkB75B,EAAS,kBACvDuX,GAA4BsiB,EAAkB75B,EAAS,iBACvDuX,GAA4BsiB,EAAkB75B,EAAS,iBACvDuX,GAA4BsiB,EAAkB75B,EAAS,eACvDuX,GAA4BsiB,EAAkB75B,EAAS,gBACvDuX,GAA4BsiB,EAAkB75B,EAAS,eACvDuX,GAA4BsiB,EAAkB75B,EAAS,iBAChD65B,EAAgB,EjFqQAC,CAA8Bf,IACvDgB,GkF7RyC,EAACtU,EAAmBiH,EAA+BmB,EAAgCjU,EAAsBggB,EAAwBrqB,EAAoBqQ,EAAsC2G,EAAkBzH,EAAyBoU,IAC1Q,KACH,MAAMnG,EAA2B,IAAIlzB,QACrC,IAAImgC,EAAwB,KAsJ5B,MAAO,CACH,MAAAx6B,CAAOqU,EAAOE,GACV,MAAMkmB,EAA2ClN,EAAyBlyB,IAAIkZ,GAC9E,YAAiDpe,IAA7CskC,EACO/9B,QAAQT,QAAQw+B,GAzJX5/B,OAAOwZ,EAAOE,KAClC,IAAI8F,EAAiB,KACjBggB,EAAmBtqB,EAAmBsE,GAC1C,MAAMqmB,EAAyB,CAC3BnvB,aAAc8uB,EAAiB9uB,aAC/B1E,iBAAkBwzB,EAAiBxzB,iBACnC2E,sBAAuB6uB,EAAiB7uB,uBAEtCmvB,EAAgC,IAC/BD,EACH1f,eAAgBqf,EAAiBrf,eACjCC,eAAgBof,EAAiBpf,eACjCC,cAAemf,EAAiBnf,cAChCC,cAAekf,EAAiBlf,cAChCC,YAAaif,EAAiBjf,YAC9BI,aAAc6e,EAAiB7e,aAC/BI,YAAaye,EAAiBze,YAC9BC,cAAewe,EAAiBxe,eAG9B+e,EAAmC/uB,GAAiBwuB,EAAkB9lB,GAE5E,GAAI,eAAgB8lB,EAChBhgB,EAAiBD,EAAqB7F,EAA2B,IAAKmmB,EAAwB9sB,KAAM,SAEnG,IAAKgtB,EAAkC,CACxC,MAAMp6B,EAAU,IACTm6B,EACHtf,aAAcgf,EAAiBhf,aAAa9mB,MAC5C+mB,aAAc+e,EAAiB/e,aAAa/mB,MAC5CgnB,aAAc8e,EAAiB9e,aAAahnB,MAC5CknB,UAAW4e,EAAiB5e,UAAUlnB,MACtCmnB,UAAW2e,EAAiB3e,UAAUnnB,MACtConB,UAAW0e,EAAiB1e,UAAUpnB,OAE1C8lC,EAAmBD,EAAuB7lB,EAA2B/T,EACzE,CAEA,GADA+sB,EAAyBpyB,IAAIoZ,EAA8C,OAAnB8F,EAA0BggB,EAAmBhgB,GAC9E,OAAnBA,EAAyB,CACzB,GAA8B,OAA1BmgB,EAAgC,CAChC,GAA6C,OAAzCpa,EACA,MAAM,IAAI/nB,MAAM,uDAEpB,MAAMi8B,EAA6B,IAAIlU,EAAqC,EAE5E/L,EAAM1N,QAAQvQ,OAAQme,EAA0BjT,YAC1C6rB,EAA0BD,EAA8BoH,EAA4B,CACtF/oB,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvB1E,eAAgB,IAEpBqmB,EAAwBxyB,QAAQ25B,EAA2BjmB,aAC3DmsB,EAAwB,WACpB,MAAMK,QAAkCn+B,QAAQ6iB,IAAI,CAChDlL,EAAMgH,aACNhH,EAAMiH,aACNjH,EAAMkH,aACNlH,EAAMoH,UACNpH,EAAMqH,UACNrH,EAAMsH,WACRxd,KAAItD,MAAOsS,EAAYlX,KACrB,MAAMs4B,EAA2BF,EAA+BiG,EAA4B,CACxF/oB,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBsC,OAAkB,IAAV7X,EAAc,EAAI,IAG9B,aADM8wB,EAAiBuN,EAA4BnnB,EAAYohB,EAAyBzgB,QACjFygB,CAAwB,KAEnC,IAAK,IAAI11B,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxBgiC,EAA0BhiC,GAAG8B,QAAQwyB,EAAyB,EAAGt0B,GACjEgiC,EAA0BhiC,GAAGwD,MAAM,GAEvC,OAAOq3B,EAAgCY,EAC1C,EAvBuB,EAwB5B,CACA,MAAMhgB,QAAuBkmB,EACvBlC,EAAgBle,EAAqB7F,EAA2B,IAAKmmB,EAAwB9sB,KAAM,UACnG0R,EAAwBjL,EAAOE,EAA2B+jB,GAChE,MAAMwC,EAAe,GACrB,IAAK,IAAIjiC,EAAI,EAAGA,EAAIyb,EAAe7H,iBAAkB5T,GAAK,EACtDiiC,EAAatiC,KAAK8b,EAAe/H,eAAe1T,IAEpD,IAAI48B,EAAkB,CAACqF,EAAa,GAAG,GAAIA,EAAa,GAAG,GAAIA,EAAa,GAAG,IAC3EpF,EAAe,CAACoF,EAAa,GAAG,GAAIA,EAAa,GAAG,GAAIA,EAAa,GAAG,IACxEC,EAAe3gB,EAAqB7F,EAA2B,IAAKmmB,EAAwB9sB,KAAM,IAClGotB,EAAoBZ,EAAuB7lB,EAA2B,IACnEomB,EACHtf,aAAcoa,EAAgB,GAC9Bna,aAAcma,EAAgB,GAC9Bla,aAAcka,EAAgB,GAC9Bha,UAAWia,EAAa,GACxBha,UAAWga,EAAa,GACxB/Z,UAAW+Z,EAAa,KAE5B4C,EAAc39B,QAAQogC,GAAcpgC,QAAQqgC,EAAkBvrB,OAAO,IACrEurB,EAAkBrgC,QAAQ0f,GAC1B,IAAK,IAAIxhB,EAAI,IAAKA,EAAIyb,EAAele,OAAQyC,GAAK,IAAK,CACnD,MAAM+8B,EAAc,CAACkF,EAAa,GAAGjiC,GAAIiiC,EAAa,GAAGjiC,GAAIiiC,EAAa,GAAGjiC,IACvEi9B,EAAU,CAACgF,EAAa,GAAGjiC,GAAIiiC,EAAa,GAAGjiC,GAAIiiC,EAAa,GAAGjiC,IACzE,GAAI+8B,EAAY3kB,MAAK,CAAC1c,EAAO0B,IAAU1B,IAAUkhC,EAAgBx/B,MAC7D6/B,EAAQ7kB,MAAK,CAAC1c,EAAO0B,IAAU1B,IAAUmhC,EAAaz/B,KAAS,CAC/Dw/B,EAAkBG,EAClBF,EAAeI,EACf,MAAM5N,EAAcrvB,EAAI0b,EAA0BjT,WAClDy5B,EAAantB,KAAKgP,eAAe,EAAGsL,GACpC6S,EAAe3gB,EAAqB7F,EAA2B,IAAKmmB,EAAwB9sB,KAAM,IAClGotB,EAAoBZ,EAAuB7lB,EAA2B,IAC/DomB,EACHtf,aAAcoa,EAAgB,GAC9Bna,aAAcma,EAAgB,GAC9Bla,aAAcka,EAAgB,GAC9Bha,UAAWia,EAAa,GACxBha,UAAWga,EAAa,GACxB/Z,UAAW+Z,EAAa,KAE5BqF,EAAantB,KAAKgP,eAAe,EAAGsL,GACpCoQ,EAAc39B,QAAQogC,GAAcpgC,QAAQqgC,EAAkBvrB,OAAO,IACrEurB,EAAkBrgC,QAAQ0f,EAC9B,CACJ,CACA,OAAOA,CACX,CAuBA,OAtBKugB,SASK3U,EAAkB1R,EAA2BF,EAAMgH,aAAcgf,EAAiBhf,oBAClF4K,EAAkB1R,EAA2BF,EAAMiH,aAAc+e,EAAiB/e,oBAClF2K,EAAkB1R,EAA2BF,EAAMkH,aAAc8e,EAAiB9e,oBAClF0K,EAAkB1R,EAA2BF,EAAMoH,UAAW4e,EAAiB5e,iBAC/EwK,EAAkB1R,EAA2BF,EAAMqH,UAAW2e,EAAiB3e,iBAC/EuK,EAAkB1R,EAA2BF,EAAMsH,UAAW0e,EAAiB1e,mBAb/EoL,EAAiBxS,EAA2BF,EAAMgH,aAAcgf,EAAiBhf,oBACjF0L,EAAiBxS,EAA2BF,EAAMiH,aAAc+e,EAAiB/e,oBACjFyL,EAAiBxS,EAA2BF,EAAMkH,aAAc8e,EAAiB9e,oBACjFwL,EAAiBxS,EAA2BF,EAAMoH,UAAW4e,EAAiB5e,iBAC9EsL,EAAiBxS,EAA2BF,EAAMqH,UAAW2e,EAAiB3e,iBAC9EqL,EAAiBxS,EAA2BF,EAAMsH,UAAW0e,EAAiB1e,YAUpFxM,GAAuBkrB,SACjB/a,EAAwBjL,EAAOE,EAA2B8lB,EAAiB5qB,OAAO,UAGlF6P,EAAwBjL,EAAOE,EAA2B8lB,GAE7DA,CAAgB,EAQZ7M,CAAgBnZ,EAAOE,EAClC,EACH,ElF4HwB0mB,CAAgChV,GAAmBiH,GAA+BmB,GAAgCjU,GAAsBggB,GAAwBrqB,GAAoBqQ,GAAsC2G,GAAkBzH,GAAyBoU,IAChSwH,Gd5QqC,EAACrZ,EAAsB6F,EAAkB0S,EAAwBG,EAA0Bra,EAAkBM,EAA6BiL,IAC1K,cAAyB5J,EAC5B,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzC65B,EAAmBD,EAAuBruB,EAAemY,GACzD9R,EAAYoO,EAA4BzU,GAE9CoW,MAAMxb,GAAS,EAAO0zB,EADMjoB,EAAYmoB,IAA6B,MAErE9iC,KAAK0jC,kBAAoBd,EAEzB5iC,KAAK2jC,cAAgB1T,EAAiBjwB,KAAM2a,EAAWioB,EAAiBhf,aAAc1O,GAA4BD,IAClHjV,KAAK4jC,cAAgB3T,EAAiBjwB,KAAM2a,EAAWioB,EAAiB/e,aAAc3O,GAA4BD,IAClHjV,KAAK6jC,cAAgB5T,EAAiBjwB,KAAM2a,EAAWioB,EAAiB9e,aAAc5O,GAA4BD,IAClHjV,KAAK8jC,WAAa7T,EAAiBjwB,KAAM2a,EAAWioB,EAAiB5e,UAAW9O,GAA4BD,IAC5GjV,KAAK+jC,WAAa9T,EAAiBjwB,KAAM2a,EAAWioB,EAAiB3e,UAAW/O,GAA4BD,IAC5GjV,KAAKgkC,WAAa/T,EAAiBjwB,KAAM2a,EAAWioB,EAAiB1e,UAAWhP,GAA4BD,IAE5G+e,EAAqBh0B,KAAM,EAC/B,CACA,kBAAIujB,GACA,OAAOvjB,KAAK0jC,kBAAkBngB,cAClC,CACA,kBAAIA,CAAezmB,GACfkD,KAAK0jC,kBAAkBngB,eAAiBzmB,CAC5C,CACA,kBAAI0mB,GACA,OAAOxjB,KAAK0jC,kBAAkBlgB,cAClC,CACA,kBAAIA,CAAe1mB,GACfkD,KAAK0jC,kBAAkBlgB,eAAiB1mB,CAC5C,CACA,iBAAI2mB,GACA,OAAOzjB,KAAK0jC,kBAAkBjgB,aAClC,CACA,iBAAIA,CAAc3mB,GACdkD,KAAK0jC,kBAAkBjgB,cAAgB3mB,CAC3C,CACA,iBAAI4mB,GACA,OAAO1jB,KAAK0jC,kBAAkBhgB,aAClC,CACA,iBAAIA,CAAc5mB,GACdkD,KAAK0jC,kBAAkBhgB,cAAgB5mB,CAC3C,CACA,eAAI6mB,GACA,OAAO3jB,KAAK0jC,kBAAkB/f,WAClC,CACA,eAAIA,CAAY7mB,GACZkD,KAAK0jC,kBAAkB/f,YAAc7mB,CACzC,CACA,gBAAI8mB,GACA,OAAO5jB,KAAK2jC,aAChB,CACA,gBAAI9f,GACA,OAAO7jB,KAAK4jC,aAChB,CACA,gBAAI9f,GACA,OAAO9jB,KAAK6jC,aAChB,CACA,gBAAI9f,GACA,OAAO/jB,KAAK0jC,kBAAkB3f,YAClC,CACA,gBAAIA,CAAajnB,GACbkD,KAAK0jC,kBAAkB3f,aAAejnB,CAC1C,CACA,aAAIknB,GACA,OAAOhkB,KAAK8jC,UAChB,CACA,aAAI7f,GACA,OAAOjkB,KAAK+jC,UAChB,CACA,aAAI7f,GACA,OAAOlkB,KAAKgkC,UAChB,CACA,eAAI7f,GACA,OAAOnkB,KAAK0jC,kBAAkBvf,WAClC,CACA,eAAIA,CAAYrnB,GACZkD,KAAK0jC,kBAAkBvf,YAAcrnB,CACzC,CACA,iBAAIsnB,GACA,OAAOpkB,KAAK0jC,kBAAkBtf,aAClC,CACA,iBAAIA,CAActnB,GACdkD,KAAK0jC,kBAAkBtf,cAAgBtnB,CAC3C,GcuLsBmnC,CAA4B7Z,GAAsB6F,GAAkB0S,GAAwBG,GAA0Bra,GAAkBM,GAA6BiL,IAC7LkQ,GmFjSyC,CAACvvB,GACrC,CAACL,GAAiB+J,uBAAsB8lB,OAAMC,WAEjD,MAAMC,EAAgBF,aAAgBzvB,aAAeyvB,EAAO,IAAIzvB,aAAayvB,GACvEG,EAAgBF,aAAgB1vB,aAAe0vB,EAAO,IAAI1vB,aAAa0vB,GACvEG,EAAqBjwB,EAAckwB,mBAAmBF,EAAeD,EAAe,CAAEhmB,yBAE5F,GAAI1M,MAAMW,KAAK6xB,GAAMxlC,OAAS,EAC1B,MAAMgW,IAEV,OAAO4vB,CAAkB,EnFuRAE,CAAgC9vB,IAC3D+vB,Gb/RuC,EAACR,EAA0Bzb,EAAkBkc,EAAmBC,IAClG,MAAMC,EACT,WAAAtpB,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgBmY,EAA4B,IAAK,MAAoB77B,IACrEua,EAAe4gB,EAAyB5vB,EAAemY,GAG7D,OAFAkY,EAAkBvxB,IAAIkQ,GAEfA,CACX,CACA,OAAQjjB,OAAO2tB,aAAaC,GACxB,OAAsB,OAAbA,GAAyC,iBAAbA,GAAyB1oB,OAAOyf,eAAeiJ,KAAc4W,EAAar4B,WAC3Gm4B,EAAkB3gC,IAAIiqB,EAC9B,GakRwB6W,CAA8BZ,GAA0Bzb,GAAkB,IAAIpY,SoFlSlEtH,IACxC,MAAM,KAAEo7B,EAAI,KAAEC,GAASr7B,EACvB,YAAarK,IAATylC,OACazlC,IAAT0lC,EACO,IAAKr7B,EAASo7B,KAAM,CAAC,EAAG,GAAIC,KAAM,CAAC,EAAG,IAE1C,IAAKr7B,EAASo7B,KAAMxyB,MAAMW,KAAK8xB,GAAM,IAAM,IAAIA,aAE7C1lC,IAAT0lC,EACO,IAAKr7B,EAASo7B,OAAMC,KAAMzyB,MAAMW,KAAK6xB,GAAM,IAAM,KAErD,IAAKp7B,EAASo7B,OAAMC,OAAM,IpFwR/BW,GqFlSkD,EAACtP,EAA+B1T,EAAiCY,EAAsB+e,EAA4Br2B,EAAyBypB,KAEhM,MAAMkQ,EAAa,MACbC,EAAW,IAAIvwB,aAAa,CAAC,EAAG,IAChCwwB,EAAUpnC,KAAK49B,GAAK,EACpBuG,EAAyB,CAAEnuB,aAAc,EAAG1E,iBAAkB,WAAY2E,sBAAuB,YACjGoxB,EAAqC,IAAKlD,EAAwB1d,WAAY,QA+J9E6gB,EAAqB,CAAC9wB,EAAeR,EAAc+sB,EAAewE,EAAa/P,KACjF,GAAqB,IAAjBxhB,EACA,MAhK0B,EAACQ,EAAeusB,EAAewE,EAAa/P,KAC1E,MAAMgQ,EAAsB,IAAI5wB,aAAaswB,GACvCO,EAAuB,IAAI7wB,aAAaswB,GAC9C,IAAK,IAAI5jC,EAAI,EAAGA,EAAI4jC,EAAY5jC,GAAK,EAAG,CACpC,MAAMkb,EAAKlb,EAAI,MAAoB8jC,EACnCI,EAAoBlkC,GAAKtD,KAAK69B,IAAIrf,GAClCipB,EAAqBnkC,GAAKtD,KAAK89B,IAAItf,EACvC,CACA,MAAMkpB,EAAe7iB,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAEtFsvB,EAAsB/D,EAA2BptB,EAAe,IAAK6wB,EAAoC7gB,MAAOghB,IAEhHI,EAAqBhE,EAA2BptB,EAAe,IAAK6wB,EAAoC7gB,MAAO2gB,IAC/GU,EAAgBhjB,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAEvFyvB,EAAuBlE,EAA2BptB,EAAe,IAAK6wB,EAAoC7gB,MAAOihB,IACvH,MAAO,CACH,YAAAM,GACIhF,EAAc39B,QAAQsiC,GACtB3E,EAAc39B,aAAqCxE,IAA7BgnC,EAAkB1tB,OAAuB0tB,EAAoBA,EAAkB1tB,OAAO,IAC5G6oB,EAAc39B,QAAQyiC,GACtBD,EAAkBxiC,QAAQmiC,GAC1BA,EAAYniC,aAAsCxE,IAA9B+mC,EAAmBztB,OAAuBytB,EAAqBA,EAAmBztB,OAAO,IAC7GqtB,EAAYniC,aAAuCxE,IAA/BknC,EAAoB5tB,OAAuB4tB,EAAsBA,EAAoB5tB,OAAO,IAChHytB,EAAmBviC,QAAQsiC,EAAarvB,MACxCyvB,EAAoB1iC,QAAQyiC,EAAcxvB,MAC1CqvB,EAAatiC,QAAQoyB,EAAmB,EAAG,GAC3CqQ,EAAcziC,QAAQoyB,EAAmB,EAAG,EAChD,EACA,eAAAwQ,GACIjF,EAAcl9B,WAAW6hC,GACzB3E,EAAcl9B,gBAAwCjF,IAA7BgnC,EAAkB1tB,OAAuB0tB,EAAoBA,EAAkB1tB,OAAO,IAC/G6oB,EAAcl9B,WAAWgiC,GACzBD,EAAkB/hC,WAAW0hC,GAC7BA,EAAY1hC,gBAAyCjF,IAA9B+mC,EAAmBztB,OAAuBytB,EAAqBA,EAAmBztB,OAAO,IAChHqtB,EAAY1hC,gBAA0CjF,IAA/BknC,EAAoB5tB,OAAuB4tB,EAAsBA,EAAoB5tB,OAAO,IACnHytB,EAAmB9hC,WAAW6hC,EAAarvB,MAC3CyvB,EAAoBjiC,WAAWgiC,EAAcxvB,MAC7CqvB,EAAa7hC,WAAW2xB,EAAmB,EAAG,GAC9CqQ,EAAchiC,WAAW2xB,EAAmB,EAAG,EACnD,EACH,EAuHUyQ,CAA0BzxB,EAAeusB,EAAewE,EAAa/P,GAEhF,GAAqB,IAAjBxhB,EACA,MAxH4B,EAACQ,EAAeusB,EAAewE,EAAa/P,KAC5E,MAAM0Q,EAAwC,IAAItxB,aAAaswB,GACzDiB,EAAyC,IAAIvxB,aAAaswB,GAC1DkB,EAAyC,IAAIxxB,aAAaswB,GAC1DmB,EAA0C,IAAIzxB,aAAaswB,GAC3DxD,EAAc1jC,KAAK2B,MAAMulC,QAC/B,IAAK,IAAI5jC,EAAI,EAAGA,EAAI4jC,EAAY5jC,GAAK,EACjC,GAAIA,EAAIogC,EAAa,CACjB,MAAMllB,GAAMlb,EAAIogC,IAAgBwD,MAAiBxD,GAAgB0D,EACjEc,EAAsC5kC,GAAKtD,KAAK69B,IAAIrf,GACpD2pB,EAAuC7kC,GAAKtD,KAAK89B,IAAItf,GACrD4pB,EAAuC9kC,GAAK,EAC5C+kC,EAAwC/kC,GAAK,CACjD,KACK,CACD,MAAMkb,EAAKlb,GAAK4jC,MAAiBxD,GAAgB0D,EACjDc,EAAsC5kC,GAAK,EAC3C6kC,EAAuC7kC,GAAK,EAC5C8kC,EAAuC9kC,GAAKtD,KAAK69B,IAAIrf,GACrD6pB,EAAwC/kC,GAAKtD,KAAK89B,IAAItf,EAC1D,CAEJ,MAAM4F,EAAsBH,EAAgCzN,EAAe,CACvER,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBzE,gBAAiB,IAEf82B,EAAiCzjB,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAExGkwB,EAAuC3E,EAA2BptB,EAAe,IAChF6wB,EACH7gB,MAAO0hB,IAELM,EAAkC3jB,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAEzGowB,EAAwC7E,EAA2BptB,EAAe,IACjF6wB,EACH7gB,MAAO2hB,IAGLP,EAAqBhE,EAA2BptB,EAAe,IAAK6wB,EAAoC7gB,MAAO2gB,IAC/GuB,EAAkC7jB,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAEzGswB,EAAwC/E,EAA2BptB,EAAe,IACjF6wB,EACH7gB,MAAO4hB,IAELQ,EAAmC/jB,EAAqBrO,EAAe,IAAK2tB,EAAwB9rB,KAAM,IAE1GwwB,EAAyCjF,EAA2BptB,EAAe,IAClF6wB,EACH7gB,MAAO6hB,IAEX,MAAO,CACH,YAAAN,GACIhF,EAAc39B,QAAQgf,GACtB2e,EAAc39B,aAAqCxE,IAA7BgnC,EAAkB1tB,OAAuB0tB,EAAoBA,EAAkB1tB,OAAO,IAC5GkK,EAAoBhf,QAAQkjC,EAAgC,GAC5DlkB,EAAoBhf,QAAQojC,EAAiC,GAC7DpkB,EAAoBhf,QAAQsjC,EAAiC,GAC7DtkB,EAAoBhf,QAAQwjC,EAAkC,GAC9DhB,EAAkBxiC,QAAQmiC,GAC1BA,EAAYniC,aAAwDxE,IAAhD2nC,EAAqCruB,OACnDquB,EACAA,EAAqCruB,OAAO,IAClDqtB,EAAYniC,aAAyDxE,IAAjD6nC,EAAsCvuB,OACpDuuB,EACAA,EAAsCvuB,OAAO,IACnDqtB,EAAYniC,aAAyDxE,IAAjD+nC,EAAsCzuB,OACpDyuB,EACAA,EAAsCzuB,OAAO,IACnDqtB,EAAYniC,aAA0DxE,IAAlDioC,EAAuC3uB,OACrD2uB,EACAA,EAAuC3uB,OAAO,IACpDquB,EAAqCnjC,QAAQkjC,EAA+BjwB,MAC5EowB,EAAsCrjC,QAAQojC,EAAgCnwB,MAC9EswB,EAAsCvjC,QAAQsjC,EAAgCrwB,MAC9EwwB,EAAuCzjC,QAAQwjC,EAAiCvwB,MAChFiwB,EAA+BljC,QAAQoyB,EAAmB,EAAG,GAC7DkR,EAAgCtjC,QAAQoyB,EAAmB,EAAG,GAC9DgR,EAAgCpjC,QAAQoyB,EAAmB,EAAG,GAC9DoR,EAAiCxjC,QAAQoyB,EAAmB,EAAG,EACnE,EACA,eAAAwQ,GACIjF,EAAcl9B,WAAWue,GACzB2e,EAAcl9B,gBAAwCjF,IAA7BgnC,EAAkB1tB,OAAuB0tB,EAAoBA,EAAkB1tB,OAAO,IAC/GkK,EAAoBve,WAAWyiC,EAAgC,GAC/DlkB,EAAoBve,WAAW2iC,EAAiC,GAChEpkB,EAAoBve,WAAW6iC,EAAiC,GAChEtkB,EAAoBve,WAAW+iC,EAAkC,GACjEhB,EAAkB/hC,WAAW0hC,GAC7BA,EAAY1hC,gBAA2DjF,IAAhD2nC,EAAqCruB,OACtDquB,EACAA,EAAqCruB,OAAO,IAClDqtB,EAAY1hC,gBAA4DjF,IAAjD6nC,EAAsCvuB,OACvDuuB,EACAA,EAAsCvuB,OAAO,IACnDqtB,EAAY1hC,gBAA4DjF,IAAjD+nC,EAAsCzuB,OACvDyuB,EACAA,EAAsCzuB,OAAO,IACnDqtB,EAAY1hC,gBAA6DjF,IAAlDioC,EAAuC3uB,OACxD2uB,EACAA,EAAuC3uB,OAAO,IACpDquB,EAAqC1iC,WAAWyiC,EAA+BjwB,MAC/EowB,EAAsC5iC,WAAW2iC,EAAgCnwB,MACjFswB,EAAsC9iC,WAAW6iC,EAAgCrwB,MACjFwwB,EAAuChjC,WAAW+iC,EAAiCvwB,MACnFiwB,EAA+BziC,WAAW2xB,EAAmB,EAAG,GAChEkR,EAAgC7iC,WAAW2xB,EAAmB,EAAG,GACjEgR,EAAgC3iC,WAAW2xB,EAAmB,EAAG,GACjEoR,EAAiC/iC,WAAW2xB,EAAmB,EAAG,EACtE,EACH,EAOUsR,CAA4BtyB,EAAeusB,EAAewE,EAAa/P,GAElF,MAAMjqB,GAAyB,EAEnC,MAAO,CAACiJ,GAAiBR,eAAc1E,mBAAkBqH,SAAQggB,MAC7D,GAAyB,QAArBrnB,EACA,MAAM/D,IAEV,MAAMiqB,EAAoBG,EAA8BnhB,EAAe,IAChEmiB,EACH3iB,aAAc,EACd1E,mBACAC,eAAgB,IAEdwxB,EAAgBle,EAAqBrO,EAAe,IAAKmiB,EAAkB3iB,eAAc1E,mBAAkB+G,KAAM,IACjHkvB,EAAc1iB,EAAqBrO,EAAe,CACpDR,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBoC,KAAMM,IAEV,IAAI,aAAEovB,EAAY,gBAAEC,GAAoBV,EAAmB9wB,EAAeR,EAAc+sB,EAAewE,EAAa/P,GACpH/vB,OAAO4c,eAAekjB,EAAYlvB,KAAM,eAAgB,CAAEvS,IAAK,IAAM,IACrE2B,OAAO4c,eAAekjB,EAAYlvB,KAAM,WAAY,CAAEvS,IAAK,IAAM,IACjE2B,OAAO4c,eAAekjB,EAAYlvB,KAAM,WAAY,CAAEvS,IAAK,KAAO,IAClE,MAAMmhC,EAAqC,CACvC,cAAI1hB,GAEJ,EACA,gBAAIvP,GACA,OAAO+sB,EAAc/sB,YACzB,EACA,gBAAIA,CAAahX,GACT+jC,EAAc/sB,eAAiBhX,IAC3BokC,GACA4E,MAEDD,eAAcC,mBAAoBV,EAAmB9wB,EAAexX,EAAO+jC,EAAewE,EAAa/P,IACtG4L,GACA2E,KAGRhF,EAAc/sB,aAAehX,CACjC,EACA,oBAAIsS,GACA,OAAOyxB,EAAczxB,gBACzB,EACA,oBAAIA,CAAiBtS,GACjB,GAAc,gBAAVA,GAAqC,QAAVA,EAC3B,MAAMuO,IAEVw1B,EAAczxB,iBAAmBtS,CACrC,EACA,yBAAIiX,GACA,OAAO8sB,EAAc9sB,qBACzB,EACA,yBAAIA,CAAsBjX,GACtB+jC,EAAc9sB,sBAAwBjX,CAC1C,EACA,WAAIoS,GACA,OAAO2xB,EAAc3xB,OACzB,EACA,UAAI8I,GACA,MAAO,CAAC6oB,EACZ,EACA,kBAAIxxB,GACA,OAAOwxB,EAAcxxB,cACzB,EACA,mBAAIC,GACA,OAAOuxB,EAAcvxB,eACzB,EACA,OAAImH,GACA,OAAO4uB,EAAYlvB,IACvB,EACA,gBAAAhS,IAAoB+H,GAChB,OAAO20B,EAAc18B,iBAAiB+H,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACjE,EACA,aAAA8R,IAAiB9R,GACb,OAAO20B,EAAc7iB,cAAc9R,EAAK,GAC5C,EACA,mBAAAkC,IAAuBlC,GACnB,OAAO20B,EAAczyB,oBAAoBlC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACpE,GAEJ,IAAIg1B,GAAc,EASlB,OAAOpM,EAAmBzS,GAAqB0iB,EAAoCzP,IAR7D,KAClBuQ,IACA3E,GAAc,CAAI,IAEG,KACrB4E,IACA5E,GAAc,CAAK,GAEgH,CAC1I,ErF0BsC2F,CAAyCpR,GAA+B1T,GAAiCY,GAAsB+e,GAA4B,GAAyB5M,IACzNgS,GsFlS6C,EAACC,EAAmC17B,IAC5E,CAACiJ,EAAevL,KACnB,MAAMqG,EAAmBrG,EAAQqG,iBAKjC,GAAyB,gBAArBA,EACA,MAAM/D,IAGV,QAAyC3M,IAArC4V,EAAc0yB,mBACd,OAAOD,EAAkCzyB,EAAevL,GAE5D,MAAMk+B,EAAyB3yB,EAAc0yB,qBAe7C,OAdAxmB,GAA6BymB,EAAwBl+B,GACrD6X,GAAqCqmB,EAAwBl+B,EAAS,OAKtExD,OAAO4c,eAAe8kB,EAAwB,mBAAoB,CAC9DrjC,IAAK,IAAMwL,EACX1L,IAAM5G,IACF,GAAIA,IAAUsS,EACV,MAAM/D,GACV,IAGD47B,CAAsB,EtFqQAC,CAAoCnC,GAAoC,IACvGoC,GuFnS+C,EAAC3Y,EAAmBsY,EAA8BxuB,EAAoBgX,EAAkBzH,IAClI,KACH,MAAMuf,EAAkC,IAAIxkC,QAgC5C,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAMuqB,EAAiCD,EAAgCxjC,IAAIkZ,GAC3E,YAAuCpe,IAAnC2oC,EACOpiC,QAAQT,QAAQ6iC,GAnCJjkC,OAAOwZ,EAAOE,KACzC,IAAImqB,EAAyB3uB,EAAmBsE,GAKhD,MAAM0qB,EAAyClzB,GAAiB6yB,EAAwBnqB,GACxF,IAAKwqB,EAAwC,CACzC,MAAMv+B,EAAU,CACZ+K,aAAcmzB,EAAuBnzB,aACrC1E,iBAAkB63B,EAAuB73B,iBACzC2E,sBAAuBkzB,EAAuBlzB,sBAC9C0C,IAAKwwB,EAAuBxwB,IAAI3Z,OAEpCmqC,EAAyBH,EAA6BhqB,EAA2B/T,EACrF,CAcA,OAbAq+B,EAAgC1jC,IAAIoZ,EAA2BmqB,GAC1DK,QAIK9Y,EAAkB1R,EAA2BF,EAAMnG,IAAKwwB,EAAuBxwB,WAH/E6Y,EAAiBxS,EAA2BF,EAAMnG,IAAKwwB,EAAuBxwB,KAKpFiB,GAAuBuvB,SACjBpf,EAAwBjL,EAAOE,EAA2BmqB,EAAuBjvB,OAAO,UAGxF6P,EAAwBjL,EAAOE,EAA2BmqB,GAE7DA,CAAsB,EAQlBM,CAAuB3qB,EAAOE,EACzC,EACH,EvFyP8B0qB,CAAsChZ,GAAmBsY,GAA8BxuB,GAAoBgX,GAAkBzH,IAC9J4f,GZ5R2C,EAACrd,EAAsB6F,EAAkB6W,EAA8BK,EAAgC1e,EAAkBM,IAC/J,cAA+BqB,EAClC,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzCk+B,EAAyBH,EAA6BxyB,EAAemY,GACrE9R,EAAYoO,EAA4BzU,GAE9CoW,MAAMxb,GAAS,EAAO+3B,EADYtsB,EAAYwsB,IAAmC,MAEjFnnC,KAAK0nC,KAAOzX,EAAiBjwB,KAAM2a,EAAWssB,EAAuBxwB,IACzE,CACA,OAAIA,GACA,OAAOzW,KAAK0nC,IAChB,GY+Q4BC,CAAkCvd,GAAsB6F,GAAkB6W,GAA8BK,GAAgC1e,GAAkBM,IACxL6e,GwFrS6C,EAAClG,EAA4BppB,EAAoBuP,IACzF,KACH,MAAMggB,EAAgC,IAAIjlC,QAwB1C,MAAO,CACH,MAAA2F,CAAOqU,EAAOE,GACV,MAAMgrB,EAA+BD,EAA8BjkC,IAAIkZ,GACvE,YAAqCpe,IAAjCopC,EACO7iC,QAAQT,QAAQsjC,GA3BN1kC,OAAOwZ,EAAOE,KACvC,IAAI6kB,EAAuBrpB,EAAmBsE,GAG9C,IAD6CxI,GAAiButB,EAAsB7kB,GACzC,CACvC,MAAM/T,EAAU,CACZ+K,aAAc6tB,EAAqB7tB,aACnC1E,iBAAkBuyB,EAAqBvyB,iBACvC2E,sBAAuB4tB,EAAqB5tB,sBAC5CuQ,MAAOqd,EAAqBrd,MAC5BC,WAAYod,EAAqBpd,YAErCod,EAAuBD,EAA2B5kB,EAA2B/T,EACjF,CAQA,OAPA8+B,EAA8BnkC,IAAIoZ,EAA2B6kB,GACzDjqB,GAAuBiqB,SACjB9Z,EAAwBjL,EAAOE,EAA2B6kB,EAAqB3pB,OAAO,UAGtF6P,EAAwBjL,EAAOE,EAA2B6kB,GAE7DA,CAAoB,EAQhBoG,CAAqBnrB,EAAOE,EACvC,EACH,ExFmQ4BkrB,CAAoCtG,GAA4BppB,GAAoBuP,IACnHogB,GVjSyC,EAAC7d,EAAsB2H,EAAyB2P,EAA4BkG,EAA8Bnf,EAAkBM,EAA6BiL,IAC7L,cAA6B5J,EAChC,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjCud,EAAgB,IAAK,MAAoB1jB,GACzC44B,EAAuBD,EAA2BptB,EAAemY,GAIvE/B,MAAMxb,GAAS,EAAMyyB,EAHH5Y,EAA4BzU,GACFszB,IAAiC,MAG7E5nC,KAAKkoC,mBAAoB,EACzBloC,KAAKmoC,sBAAwBxG,EAE7B3N,EAAqBh0B,KAAM,EAC/B,CACA,SAAIskB,GACA,OAAItkB,KAAKkoC,kBACE,KAEJloC,KAAKmoC,sBAAsB7jB,KACtC,CACA,SAAIA,CAAMxnB,GAEN,GAAc,OAAVA,EACAkD,KAAKkoC,mBAAoB,EACzBloC,KAAKmoC,sBAAsB7jB,MAAQ,IAAI5P,aAAa,CAAC,EAAG,QAEvD,CAGD,GAAI5X,EAAM6B,OAAS,EACf,MAAMozB,IAEV/xB,KAAKkoC,mBAAoB,EACzBloC,KAAKmoC,sBAAsB7jB,MAAQxnB,CACvC,CACJ,CACA,cAAIynB,GACA,OAAOvkB,KAAKmoC,sBAAsB5jB,UACtC,CACA,cAAIA,CAAWznB,GACXkD,KAAKmoC,sBAAsB5jB,WAAaznB,CAC5C,GUuP0BsrC,CAAgChe,GAAsB,GAAyBsX,GAA4BkG,GAA8Bnf,GAAkBM,GAA6BiL,IACpNqU,GyFzS+B,CAAC18B,GAAsB,OAAXA,GAAmBA,EAAO08B,gBzFySnDC,CAAsB,IACxCrrB,G0F1SgD,CAACtR,GAC5C,CAAC8kB,EAAa5mB,EAAY0+B,KAC7BhjC,OAAOiK,iBAAiB7D,EAAQ,CAC5B68B,aAAc,CACVC,cAAc,EACd,GAAA7kC,GACI,OAAO9F,KAAKujB,MAAMoP,EAAc5mB,EACpC,GAEJ4mB,YAAa,CACTgY,cAAc,EACd,GAAA7kC,GACI,OAAO6sB,CACX,KAGR,IACI,OAAO8X,GACX,CACA,QACmB,OAAX58B,WACOA,EAAO68B,oBACP78B,EAAO8kB,YAEtB,G1FkRiCiY,CAAuC,IAC1EC,GAAiC,IAAI/lC,QACrCgmC,G2F5SoD,EAACD,EAAgChgB,IAC/ErU,IACJ,IAAIu0B,EAA4BF,EAA+B/kC,IAAI0Q,GACnE,QAAkC5V,IAA9BmqC,EACA,OAAOA,EAEX,GAA6C,OAAzClgB,EACA,MAAM,IAAI/nB,MAAM,uDAKpB,OAFAioC,EAA4B,IAAIlgB,EAAqC,EAAG,EAAG,OAC3EggB,EAA+BjlC,IAAI4Q,EAAeu0B,GAC3CA,CAAyB,E3FgSKC,CAA2CH,GAAgChgB,IAE3Gha,GAAwB05B,G5G9RM,EAAC3hB,EAAiBrb,EAAyB09B,EAAgB9rB,EAAkC+rB,EAAavgB,EAAkBmgB,EAAsC7f,EAA6BnQ,EAAmC7U,EAAiBklC,EAAkBC,EAA6Cv9B,KACzV,IAAInN,EAAQ,EACZ,MAAO,CAAC0Q,EAASi6B,EAAWpgC,EAAU,CAAEqgC,YAAa,WACjD,MAAMC,EAA4BJ,EAAiBrlC,IAAIsL,GACvD,QAAkCxQ,IAA9B2qC,GAA2CA,EAA0BrlC,IAAImlC,GACzE,OAAOlkC,QAAQT,UAEnB,MAAM8kC,EAA2BvlC,EAAgBH,IAAIsL,GACrD,QAAiCxQ,IAA7B4qC,EAAwC,CACxC,MAAMC,EAA0BD,EAAyB1lC,IAAIulC,GAC7D,QAAgCzqC,IAA5B6qC,EACA,OAAOA,CAEf,CACA,MAAMj1B,EAAgBmU,EAAiBvZ,GAEjCiR,OAAyCzhB,IAA/B4V,EAAck1B,aACxBR,EAAYG,GACTliB,MAAK,EAAE/V,EAAQu4B,MAChB,MAAOt4B,EAAkBC,GAAiCH,EAAsBC,EAAQu4B,GAmBxF,OAAOV,EAHe,GAAG53B,6GAA4HC,0BAGjH,IAEnC6V,MAAK,KACN,MAAMyiB,EAAkC/9B,EAAOg+B,MAAM9Y,MACrD,QAAwCnyB,IAApCgrC,EAEA,MAAM,IAAIE,YAEd3sB,EAAiC3I,EAAcmc,YAAanc,EAAczK,YAAY,IAAM6/B,EAAgC,aACzHhrC,GAAW,CAACmH,EAAMiM,KACjB,GAAoB,KAAhBjM,EAAKoD,OACL,MAAMoC,IAEV,MAAMw+B,EAAoCh5B,EAAwCjN,IAAI0Q,GACtF,QAA0C5V,IAAtCmrC,EAAiD,CACjD,GAAIA,EAAkC7lC,IAAI6B,GACtC,MAAMwF,IAEVwG,EAAoBC,GACpBL,EAA2BK,EAAcJ,sBACzCm4B,EAAkCnmC,IAAImC,EAAMiM,EAChD,MAEID,EAAoBC,GACpBL,EAA2BK,EAAcJ,sBACzCb,EAAwCnN,IAAI4Q,EAAe,IAAIrQ,IAAI,CAAC,CAAC4B,EAAMiM,KAC/E,GACDwC,EAAczK,gBAAYnL,OAAWA,IAAW,IAErDuG,QAAQ6iB,IAAI,CACVkhB,EAAYG,GACZlkC,QAAQT,QAAQkiB,EAAgBwiB,EAA6CA,MAC9EjiB,MAAK,GAAG/V,EAAQu4B,GAAcK,MAC7B,MAAMC,EAAevrC,EAAQ,EAC7BA,EAAQurC,EACR,MAAO54B,EAAkBC,GAAiCH,EAAsBC,EAAQu4B,GAgFlFz/B,EAAO,IAAIC,KAAK,CAFA,GAAGkH,kDAAiEC,SAnDrD04B,EAC/B,wBACA,sOA6CmBA,EAA0B,GAAK,sEAC7BA,EACrB,GACA,qKAE8MC,iEAC7K,CAAE9sC,KAAM,0CACzCiN,EAAMC,IAAIC,gBAAgBJ,GAChC,OAAOsK,EAAck1B,aAChBQ,UAAU9/B,EAAKnB,GACfke,MAAK,KACN,GAAI8B,EAA4BzU,GAC5B,OAAOA,EAGX,MAAMu0B,EAA4BD,EAAqCt0B,GACvE,OAAOu0B,EAA0BW,aAAaQ,UAAU9/B,EAAKnB,GAASke,MAAK,IAAM4hB,GAA0B,IAE1G5hB,MAAMgjB,IACP,GAA0C,OAAtCrxB,EACA,MAAM,IAAIgxB,YAEd,IAEI,IAAIhxB,EAAkCqxB,EAA0C,QAAQF,IAC5F,CACA,MACI,MAAM,IAAIH,WACd,KAECM,SAAQ,IAAM//B,IAAIM,gBAAgBP,IAAK,IAwBpD,YAtBiCxL,IAA7B4qC,EACAvlC,EAAgBL,IAAIwL,EAAS,IAAIjL,IAAI,CAAC,CAACklC,EAAWhpB,MAGlDmpB,EAAyB5lC,IAAIylC,EAAWhpB,GAE5CA,EACK8G,MAAK,KACN,MAAMkjB,EAAmClB,EAAiBrlC,IAAIsL,QACrBxQ,IAArCyrC,EACAlB,EAAiBvlC,IAAIwL,EAAS,IAAIvE,IAAI,CAACw+B,KAGvCgB,EAAiC/2B,IAAI+1B,EACzC,IAECe,SAAQ,KACT,MAAME,EAAkCrmC,EAAgBH,IAAIsL,QACpBxQ,IAApC0rC,GACAA,EAAgC3lC,OAAO0kC,EAC3C,IAEGhpB,CAAO,CACjB,E4GqFCkqB,CAA4B3jB,GAAiB,G4F/Sf,CAAC/a,GACzBuF,GAAW,IAAIjM,SAAQ,CAACT,EAASD,KACrC,GAAe,OAAXoH,EAGA,YADApH,EAAO,IAAIqlC,aAGf,MAAM1jC,EAAOyF,EAAO2+B,SAASpkC,KAC7B,GAAa,OAATA,EAEA3B,EAAO,IAAIqlC,iBAEV,CACD,MAAMW,EAAS5+B,EAAO2+B,SAASE,cAAc,UAEvCxgC,EAAO,IAAIC,KAAK,CAACiH,GAAS,CAAEjU,KAAM,2BAClCiN,EAAMC,IAAIC,gBAAgBJ,GAC1BygC,EAAyB9+B,EAAO++B,QAChCC,EAAuC,KACzCh/B,EAAO++B,QAAUD,EACjBtgC,IAAIM,gBAAgBP,EAAI,EAE5ByB,EAAO++B,QAAU,CAACrmC,EAASumC,EAAKxsB,EAAQF,EAAOxZ,IAEvCkmC,IAAQ1gC,GAAQ0gC,IAAQj/B,EAAOk/B,SAASC,MAAmB,IAAX1sB,GAA0B,IAAVF,GAChEysB,IACApmC,EAAOG,IACA,GAEoB,OAA3B+lC,EACOA,EAAuBpmC,EAASumC,EAAKxsB,EAAQF,EAAOxZ,QAD/D,EAIJ6lC,EAAOG,QAAU,KACbC,IAEApmC,EAAO,IAAIqlC,YAAc,EAE7BW,EAAOQ,OAAS,KACZJ,IACAnmC,GAAS,EAEb+lC,EAAOK,IAAM1gC,EACbqgC,EAAOttC,KAAO,SACdiJ,EAAK8kC,YAAYT,EACrB,K5FkQoEU,CAAqB,IAAShuB,G6F/SzE,CAACiuB,GACvB9nC,MAAO8G,IACV,IACI,MAAM2xB,QAAiBsP,MAAMjhC,GAC7B,GAAI2xB,EAASuP,GACT,MAAO,OAAOvP,EAASwP,OAAQxP,EAAS3xB,IAEhD,CACA,MAEA,CACA,MAAMghC,GAAkB,E7FoS4GI,EhH/S5G,IAAM,IAAIlgC,aAAa,GAAI,gBgH+SsHqd,GAAkBmgB,GAAsC7f,GAA6BnQ,GAAmC,IAAIhW,QAAW,IAAIA,Q8F9S3P,EAACgW,EAAmC+P,IAC1FvlB,UAEH,GAA0C,OAAtCwV,EACA,OAAO,EAEX,GAA6C,OAAzC+P,EACA,OAAO,EAEX,MAAM3e,EAAO,IAAIC,KAAK,CAAC,wHAAyH,CAC5IhN,KAAM,0CAGJsuC,EAAsB,IAAI5iB,EAAqC,EAAG,IAAK,OACvEze,EAAMC,IAAIC,gBAAgBJ,GAChC,IAAIwhC,GAA0B,EAC1BC,GAAiC,EACrC,UACUF,EAAoB/B,aAAaQ,UAAU9/B,GACjD,MAAMiF,EAAmB,IAAIyJ,EAAkC2yB,EAAqB,IAAK,CAAEj8B,gBAAiB,IACtGo8B,EAAaH,EAAoBjmB,mBACvCnW,EAAiB1L,KAAKgb,UAAY,IAAO+sB,GAA0B,EACnEr8B,EAAiBw8B,iBAAmB,IAAOF,GAAiC,EAC5EC,EAAWxoC,QAAQiM,GACnBu8B,EAAW9mC,MAAM,SACX2mC,EAAoBlP,uBAEpB,IAAIp3B,SAAST,GAAYknB,WAAWlnB,IAC9C,CACA,MAEA,CACA,QACI2F,IAAIM,gBAAgBP,EACxB,CACA,OAAOshC,IAA4BC,CAA8B,E9F2Q8PG,CAAkDhzB,GAAmC+P,IAExZ,SACEjqB,EACAmtC,G+FnT+B,EAACliB,EAAsBZ,IAChDC,GACGW,EAAqBX,IAAaD,EAA4BC,G/FiTrD8iB,CAAsBniB,GAAsBZ,IACvD3I,GgGlTwB,EAAC2M,EAAkBrG,EAAiBqlB,EAAsBC,EAAqBC,EAAsBxjB,EAAkBojB,EAAiBt3B,EAAqDyL,EAAoBqN,EAAmCO,IAC9Q,CAACse,EAAYC,KAChB,MAAM73B,EAAgBu3B,EAAgBK,GAAcA,EAAazjB,EAAiByjB,GAElF,GAAID,EAAqBjoC,IAAImoC,GAAY,CACrC,MAAMxjC,EAAMojC,IACZ,OAAO9mC,QAAQV,OAAOoE,EAC1B,CAEA,IACIsjC,EAAqB74B,IAAI+4B,EAC7B,CACA,MAEA,CAEA,OAAIzlB,EAAgB1G,GAAoB,IAAMA,EAAmB1L,KACtDA,EAAc8L,gBAAgB+rB,GAAWllB,MAAMpS,IAElDyJ,GAAkB6tB,GAAW9rB,OAAM,SAI9BqG,EAAgBnS,GAAqD,IAAMA,EAAoDM,MAChI+Y,EAA6C/Y,GAEjDkY,EAAiB3Z,IAAIyB,GACdA,KAIR,IAAI5P,SAAQ,CAACT,EAASD,KACzB,MAAMkI,EAAWrJ,UAEb,UACUkb,GAAkB6tB,EAC5B,CACA,MAEA,GAEEC,EAAQzjC,IACVpE,EAAOoE,GACP8D,GAAU,EAGd,IAEI6H,EAAc8L,gBAAgB+rB,GAAYt3B,IAGK,mBAAhCA,EAAYiH,kBACnBuR,EAAkCxY,GAClCD,GAAoCC,IAExCkY,EAAiB3Z,IAAIyB,GACrBpI,IAAWwa,MAAK,IAAMziB,EAAQqQ,IAAa,IAC3ClM,IAGIyjC,EADQ,OAARzjC,EACKqjC,IAGArjC,EACT,GAER,CACA,MAAOA,GACHyjC,EAAKzjC,EACT,IACF,EhG4OqB0jC,CAAsBtf,GAAkBrG,IiGpTnC,IAAM,IAAItb,aAAa,GAAI,oBCA5B,IAAM,IAAIA,aAAa,GAAI,kBlGoTqE,IAAIiF,QAAWoY,GAAkBojB,GAAiBt3B,GAAqDyL,GAAoBqN,GAAmCO,IAC3R0e,GmGrT2C,EAAC39B,EAAuB4d,EAAyBuB,EAAwBgE,EAAkCoC,EAA6B+B,EAA8BI,EAAgCiB,EAA+BgB,EAA0BlY,EAAiB2Y,EAAsBa,EAAmCgB,EAAqBuC,EAA0B6B,EAAoCkB,EAA2BuD,EAAuBiB,EAAyB+C,EAA6BQ,IAC1iB,cAA+BjJ,EAClC,WAAAzjB,CAAY0jB,EAAgBjqB,GACxB0V,MAAMuU,EAAgBjqB,GACtBhV,KAAKi/B,eAAiBA,EACtBj/B,KAAKusC,mBACyB7tC,IAA1BiQ,OACMjQ,EACA,CACEsrC,UAAW,CAACb,EAAWpgC,IACZ4F,EAAsB3O,KAAMmpC,EAAWpgC,GAGlE,CACA,gBAAIygC,GACA,OAAOxpC,KAAKusC,aAChB,CACA,cAAAnlB,GACI,OAAO,IAAImF,EAAwBvsB,KACvC,CACA,kBAAA8hB,GACI,OAAO,IAAIoS,EAA4Bl0B,KAC3C,CACA,YAAAkZ,CAAalE,EAAkBrW,EAAQkL,GACnC,OAAO,IAAIikB,EAAuB,CAAEnvB,SAAQqW,mBAAkBnL,cAClE,CACA,kBAAAuP,GACI,OAAO,IAAI0Y,EAAiC9xB,KAChD,CACA,mBAAA21B,CAAoBtmB,EAAiB,GACjC,OAAO,IAAI4mB,EAA6Bj2B,KAAM,CAAEqP,kBACpD,CACA,qBAAA4S,CAAsB3S,EAAkB,GACpC,OAAO,IAAI+mB,EAA+Br2B,KAAM,CAAEsP,mBACtD,CACA,oBAAAunB,GACI,OAAO,IAAIS,EAA8Bt3B,KAC7C,CACA,eAAA83B,GACI,OAAO,IAAIQ,EAAyBt4B,KACxC,CACA,WAAA0iB,CAAY9D,EAAe,GACvB,OAAO,IAAIma,EAAqB/4B,KAAM,CAAE4e,gBAC5C,CACA,wBAAAwa,GACI,OAAO,IAAIQ,EAAkC55B,KACjD,CACA,UAAAgZ,GACI,OAAO,IAAI4hB,EAAoB56B,KACnC,CACA,eAAA48B,CAAgBpd,EAAaF,GACzB,OAAO,IAAI6d,EAAyBn9B,KAAM,CAAEsf,WAAUE,eAC1D,CACA,gBAAA8F,GACI,OAAO,IAAI4a,EAA0BlgC,KACzC,CACA,YAAAgiC,GACI,OAAO,IAAIyB,EAAsBzjC,KACrC,CACA,kBAAAwkC,CAAmBJ,EAAMD,EAAMqI,EAAc,CAAEnuB,sBAAsB,IACjE,OAAO,IAAIqmB,EAAwB1kC,KAAM,IAAKwsC,EAAarI,OAAMC,QACrE,CACA,kBAAA4C,GACI,OAAO,IAAIS,EAA4BznC,KAC3C,CACA,gBAAA2gC,GACI,OAAO,IAAIsH,EAA0BjoC,KACzC,CACA,eAAAogB,CAAgB+rB,EAAWM,EAAiBC,GACxC,OAAOtsB,EAAgBpgB,KAAKi/B,eAAgBkN,GAAWllB,MAAMpS,IAC1B,mBAApB43B,GACPA,EAAgB53B,GAEbA,KACPlM,IAIA,KAH6B,mBAAlB+jC,GACPA,EAAc/jC,GAEZA,CAAG,GAEjB,GnGqO4BgkC,CAAkCh+B,GAAuB4d,GAAyBuB,GAAwBgE,GAAkCoC,GAA6B+B,GAA8BI,GAAgCiB,GAA+BgB,GAA0BlY,GAAiB2Y,GAAsBa,GAAmCgB,GAAqBuC,GAA0B6B,GAAoCkB,GAA2BuD,GAAuBiB,GAAyB+C,GAA6BQ,IACnkB2E,GoGtTsD,EAACxiB,EAAsByiB,EAAyCpkB,EAAkBM,IACnI,cAA0CqB,EAC7C,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjC49B,EAAoCD,EAAwCv4B,EAAevL,GAEjG,GAAIggB,EAA4BzU,GAC5B,MAAMtL,YAEV0hB,MAAMxb,GAAS,EAAM49B,EAAmC,MACxD9sC,KAAK+sC,mCAAqCD,CAC9C,CACA,gBAAIE,GACA,OAAOhtC,KAAK+sC,mCAAmCC,YACnD,GpGwSuCC,CAA6C7iB,IqGtTrC,CAACzR,EAAoB5P,IACjE4P,EAAmBu0B,yBAAyBnkC,EAAQikC,erGqT4FvkB,GAAkBM,IACvKokB,GrClT0D,EAAC/iB,EAAsBgjB,EAA6C3kB,EAAkBM,IAC3I,cAA8CqB,EACjD,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GAEvC,GAAI6Z,EAA4BzU,GAC5B,MAAM,IAAItL,UAEd,MAAMyjB,EAAgB,IAAK,MAAoB1jB,GACzCskC,EAAwCD,EAA4C94B,EAAemY,GACzG/B,MAAMxb,GAAS,EAAOm+B,EAAuC,MAC7DrtC,KAAKstC,uCAAyCD,CAClD,CACA,UAAIE,GACA,OAAOvtC,KAAKstC,uCAAuCC,MACvD,GqCmS2CC,CAAiDpjB,IsGtTzC,CAACzR,EAAoB5P,KAC5E,MAAMskC,EAAwC10B,EAAmB80B,+BAMjE,OALAjtB,GAA6B6sB,EAAuCtkC,GAEN,IAA1DskC,EAAsC/9B,iBACtC/J,OAAO4c,eAAekrB,EAAuC,kBAAmB,CAAEzpC,IAAK,IAAM,IAE1FypC,CAAqC,GtG+SuH5kB,GAAkBM,IACnL2kB,GuGxTqD,EAACtjB,EAAsBujB,EAAwCllB,EAAkBM,IACjI,cAAyCqB,EAC5C,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GACjC0+B,EAAmCD,EAAuCr5B,EAAevL,GAE/F,GAAIggB,EAA4BzU,GAC5B,MAAM,IAAItL,UAEd0hB,MAAMxb,GAAS,EAAM0+B,EAAkC,MACvD5tC,KAAK6tC,kCAAoCD,CAC7C,CACA,eAAIE,GACA,OAAO9tC,KAAK6tC,kCAAkCC,WAClD,GvG0SsCC,CAA4C3jB,IwGxTpC,CAACzR,GAAsBm1B,kBACzE,MAAME,EAAoBF,EAAYG,iBAKtCD,EAAkBE,MAAK,CAACprB,EAAGC,IAAOD,EAAExe,GAAKye,EAAEze,IAAM,EAAIwe,EAAExe,GAAKye,EAAEze,GAAK,EAAI,IACvE,MAAM6pC,EAA4BH,EAAkBttC,MAAM,EAAG,GACvDktC,EAAmCj1B,EAAmBy1B,wBAAwB,IAAIC,YAAYF,IAMpG,OADA5oC,OAAO4c,eAAeyrB,EAAkC,cAAe,CAAE9wC,MAAOgxC,IACzEF,CAAgC,GxG0S6GnlB,GAAkBM,IACpKulB,GyGzT4D,EAACvc,EAAyBhJ,IACjF,CAACpQ,GAAsB41B,uBAE1B,GAA+D,mBAApD51B,EAAmB61B,6BAC1B,OAAO71B,EAAmB61B,6BAA6BD,GAE3D,MAAMT,EAAc,IAAIO,YAAY,CAACE,IAC/BX,EAAmCj1B,EAAmBy1B,wBAAwBN,GAEpF,GAA8B,UAA1BS,EAAiBE,KACjB,MAAM1c,IAGV,GAAIhJ,EAA4BpQ,GAC5B,MAAM,IAAI3P,UAEd,OAAO4kC,CAAgC,EzGySKc,CAAmD,GAAyB3lB,IAC1H4lB,G0G1T0D,EAACvkB,EAAsBkkB,EAA6C7lB,IACzH,cAA8C2B,EACjD,WAAA7O,CAAYrM,EAASnG,GACjB,MAAMuL,EAAgBmU,EAAiBvZ,GAEvCwb,MAAMxb,GAAS,EAD+Bo/B,EAA4Ch6B,EAAevL,GAC7C,KAChE,G1GoT2C6lC,CAAiDxkB,GAAsBkkB,GAA6C7lB,IAGjKomB,I2G3TuC,EAACvC,EAA6Bva,EAAyB1mB,EAAyBgZ,EAAoBuoB,EAAwCO,EAA4CO,EAAuCiB,EAA4CplB,KAmJnT,E3GsK2BulB,CAA8BxC,GAA6B,GAAyB,GAAyBjoB,GAAoBuoB,GAAwCO,GAA4CO,GAAuCiB,GAA4CplB,I4G3TpR,CAACwV,GACzCzqB,IACJ,MAAMy6B,EAA8BhQ,EAAgCn7B,IAAI0Q,GACxE,QAAoC5V,IAAhCqwC,EACA,MAAM,IAAInuC,MAAM,gDAEpB,OAAOmuC,CAA2B,E5GuTHC,CAAqCjQ,KACtEkQ,G6G9T6C,CAACJ,GACzC,CAACv6B,EAAenF,KACnB0/B,EAA+Bv6B,GAAelB,IAAIjE,EAAiB,E7G4TrC+/B,CAAoCL,IACpEM,G8G9TsC,CAACx6B,GAClC,CAACmK,EAAkBlI,EAAajE,EAAS,EAAGC,EAAQ,KACvD,MAAMmM,EAAkBD,EAAiBnM,GACzC,QAAwBjU,IAApBqgB,EACA,MAAMpK,IAEV,OAAIqF,GAAkBpD,GACXmI,EAAgB7b,QAAQ0T,EAAa,EAAGhE,GAE5CmM,EAAgB7b,QAAQ0T,EAAa,EAAE,E9GqTvBw4B,CAA6Bz6B,IACtD06B,G+GhUgD,CAACR,GAC5C,CAACv6B,EAAenF,KACnB0/B,EAA+Bv6B,GAAe7P,OAAO0K,EAAiB,E/G8TrCmgC,CAAuCT,IAC1EU,G5CzTyC,CAAC56B,GACrC,CAACmK,EAAkBxE,OAAsB5b,EAAWiU,OAASjU,EAAWkU,EAAQ,SACvDlU,IAAxB4b,EACOwE,EAAiBzL,SAAS0L,GAAoBA,EAAgBpb,eAEtC,iBAAxB2W,EACAuE,GAA0BlK,EAAsBmK,EAAkBxE,GAAqB3W,aAE9FqW,GAAkBM,QACH5b,IAAXiU,EACOmM,EAAiBzL,SAAS0L,GAAoBA,EAAgBpb,WAAW2W,UAEtE5b,IAAVkU,EACOiM,GAA0BlK,EAAsBmK,EAAkBnM,GAAQhP,WAAW2W,EAAqB,GAE9GuE,GAA0BlK,EAAsBmK,EAAkBnM,GAAQhP,WAAW2W,EAAqB,EAAG1H,QAEzGlU,IAAXiU,EACOmM,EAAiBzL,SAAS0L,GAAoBA,EAAgBpb,WAAW2W,KAE7EuE,GAA0BlK,EAAsBmK,EAAkBnM,GAAQhP,WAAW2W,EAAqB,G4CqSvFk1B,CAAgC76B,IAC5D86B,GAAoC,IAAI7sC,QACxC8sC,GgHnU+C,EAACD,EAAmCv9B,IAC7EuL,GAA2BvL,EAAeu9B,EAAmChyB,GhHkUjDkyB,CAAsCF,GAAmCv9B,GAC3G09B,GiH7TkD,EAACT,EAAwBx6B,EAAsBod,EAAyB0D,EAA+B1T,EAAiC6U,EAAgCjU,EAAsBS,EAAiC/X,EAAyBkkC,EAA2BtyB,EAAkCyyB,EAAiC5a,IACnY,CAACxgB,EAAe6M,EAAanE,EAAsBjU,KACtD,GAA+B,IAA3BA,EAAQsG,gBAAoD,IAA5BtG,EAAQuG,gBACxC,MAAMjE,IAEV,MAAM0R,EAAqBpL,MAAMC,QAAQ7I,EAAQgU,oBAC3ChU,EAAQgU,mBACRpL,MAAMW,KAAKvJ,EAAQgU,oBAEzB,GAAIA,EAAmBvD,MAAM1F,GAAiBA,EAAe,IACzD,MAAMzI,IAEV,GAAI0R,EAAmBpe,SAAWoK,EAAQuG,gBACtC,MAAMqF,IAGV,GAAiC,aAA7B5L,EAAQqG,iBACR,MAAM/D,IAEV,MAAM6R,EAAwBnU,EAAQ+K,aAAe/K,EAAQsG,eACvD8N,EAAyBJ,EAAmBhX,QAAO,CAACqX,EAAKtgB,IAAUsgB,EAAMtgB,GAAO,GAChF+yC,OAAmEnxC,IAA9Cse,EAAqBtL,qBAAqC,EAAIsL,EAAqBtL,qBAAqB/S,OAEnI,GAAIue,EAAwB2yB,EAAqB,GAAK1yB,EAAyB,EAC3E,MAAM9R,IAEV,MAAMykC,EAAiB,IAAIvsC,eACrBwsC,EAAY,GACZC,EAA4B,GAClC,IAAK,IAAI5uC,EAAI,EAAGA,EAAI2H,EAAQsG,eAAgBjO,GAAK,EAC7C2uC,EAAUhvC,KAAK4hB,EAAqBrO,EAAe,CAC/CR,aAAc/K,EAAQ+K,aACtB1E,iBAAkBrG,EAAQqG,iBAC1B2E,sBAAuBhL,EAAQgL,sBAC/BoC,KAAM,KAEV65B,EAA0BjvC,KAAKghB,EAAgCzN,EAAe,CAC1ER,aAAc/K,EAAQ+K,aACtB1E,iBAAkB,WAClB2E,sBAAuB,WACvBzE,gBAAiBvG,EAAQ+K,gBAGjC,MAAMm8B,EAAsB,GAC5B,QAAkDvxC,IAA9Cse,EAAqBtL,qBACrB,IAAK,MAAM,aAAEjT,EAAY,SAAEqsB,EAAQ,SAAEwF,EAAQ,KAAEzqB,KAAUmX,EAAqBtL,qBAAsB,CAChG,MAAMktB,EAAqBhI,EAA+BtiB,EAAe,CACrER,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBsC,YAAwC3X,IAAhCqK,EAAQ6S,cAAc/V,GACxBkD,EAAQ6S,cAAc/V,QACLnH,IAAjBD,EACI,EACAA,IAEd8G,OAAOiK,iBAAiBovB,EAAmBvoB,OAAQ,CAC/C5X,aAAc,CACVmF,IAAK,SAAwBlF,IAAjBD,EAA6B,EAAIA,GAEjDqsB,SAAU,CACNlnB,IAAK,SAAoBlF,IAAbosB,EAAyB5V,GAA6B4V,GAEtEwF,SAAU,CACN1sB,IAAK,SAAoBlF,IAAb4xB,EAAyBrb,GAA6Bqb,KAG1E2f,EAAoBlvC,KAAK69B,EAC7B,CAEJ,MAAMsR,EAAyBza,EAA8BnhB,EAAe,CACxER,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvB1E,eAAgBvR,KAAKoD,IAAI,EAAGgc,EAAwB2yB,KAElDxsB,EAAanC,GAAkBC,EAAa7M,EAAczK,YAC1DqxB,EAAsB9X,EAAgC9O,EAAe+O,EAAYnG,EAAwB2yB,EAE/G/xC,KAAKoD,IAAI,EAAGic,IACNgzB,EAA4BpuB,EAAgCzN,EAAe,CAC7ER,aAAchW,KAAKoD,IAAI,EAAGic,GAC1B/N,iBAAkB,WAClB2E,sBAAuB,WACvBzE,gBAAiBxR,KAAKoD,IAAI,EAAGic,KAE3BizB,EAA2B,GACjC,IAAK,IAAIhvC,EAAI,EAAGA,EAAI2H,EAAQuG,gBAAiBlO,GAAK,EAC9CgvC,EAAyBrvC,KAAK00B,EAA8BnhB,EAAe,CACvER,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvB1E,eAAgB0N,EAAmB3b,MAG3C,IAAK,IAAIA,EAAI,EAAGA,EAAI2H,EAAQsG,eAAgBjO,GAAK,EAAG,CAChD2uC,EAAU3uC,GAAG8B,QAAQ8sC,EAA0B5uC,IAC/C,IAAK,IAAIsb,EAAI,EAAGA,EAAI3T,EAAQ+K,aAAc4I,GAAK,EAC3CszB,EAA0B5uC,GAAG8B,QAAQgtC,EAAwBxzB,EAAGtb,EAAI2H,EAAQ+K,aAAe4I,EAEnG,CACA,MAAM2zB,EAAe,IAAI/0B,QAA0D5c,IAA9Cse,EAAqBtL,qBACpD,GACAsL,EAAqBtL,qBAAqBhL,KAAI,EAAGb,QAAQrH,KACvD,MAAMogC,EAAqBqR,EAAoBzxC,GAG/C,OAFAogC,EAAmB17B,QAAQgtC,EAAwB,EAAGhzB,EAAwB1e,GAC9EogC,EAAmBh6B,MAAM,GAClB,CAACiB,EAAM+4B,EAAmBvoB,OAAO,KAEhD65B,EAAuBhtC,QAAQg4B,GAC/B,IAAInnB,EAAwBhL,EAAQgL,sBAChC43B,EAAmB,KAEvB,MAAM7sB,EAA+C,IAA5B/V,EAAQuG,gBAAwB,CAAC4rB,GAAuBkV,EAC3EE,EAA8B,CAChC,cAAIjtB,GACA,OAAOA,CACX,EACA,gBAAIvP,GACA,OAAO/K,EAAQ+K,YACnB,EACA,gBAAIA,CAAay8B,GAEb,MAAMxe,GACV,EACA,oBAAI3iB,GACA,OAAOrG,EAAQqG,gBACnB,EACA,oBAAIA,CAAiBmhC,GAEjB,MAAMxe,GACV,EACA,yBAAIhe,GACA,OAAOA,CACX,EACA,yBAAIA,CAAsBjX,GACtB,IAAK,MAAM02B,KAAYuc,EACnBvc,EAASzf,sBAAwBjX,EAErCiX,EAAwBjX,CAC5B,EACA,WAAIoS,GACA,OAAOgsB,EAAoBhsB,OAC/B,EACA,UAAI8I,GACA,OAAO+3B,CACX,EACA,kBAAI1gC,GACA,OAAOtG,EAAQsG,cACnB,EACA,mBAAIC,GACA,OAAOvG,EAAQuG,eACnB,EACA,oBAAIq8B,GACA,OAAOA,CACX,EACA,oBAAIA,CAAiB7uC,GACe,mBAArB6uC,GACP2E,EAA4BliC,oBAAoB,iBAAkBu9B,GAEtEA,EAAoC,mBAAV7uC,EAAuBA,EAAQ,KACzB,mBAArB6uC,GACP2E,EAA4BnsC,iBAAiB,iBAAkBwnC,EAEvE,EACA,cAAI5kC,GACA,OAAOspC,CACX,EACA,QAAI5sC,GACA,OAAOqsC,EAAexsC,KAC1B,EACA,gBAAAa,IAAoB+H,GAChB,OAAOgvB,EAAoB/2B,iBAAiB+H,EAAK,GAAIA,EAAK,GAAIA,EAAK,GACvE,EACAhJ,QAASisC,EAAuBziC,KAAK,KAAMoS,GAC3Cnb,WAAY4rC,EAA0B7iC,KAAK,KAAMoS,GACjD,aAAAd,IAAiB9R,GACb,OAAOgvB,EAAoBld,cAAc9R,EAAK,GAClD,EACA,mBAAAkC,IAAuBlC,GACnB,OAAOgvB,EAAoB9sB,oBAAoBlC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAC1E,GAEEskC,EAAwB,IAAIvsC,IACM,IAAEE,EAwBGiK,EAxB7C0hC,EAAezsC,MAAMc,kBAAqBA,EAuBvC2rC,EAAezsC,MAAMc,iBAtBb,IAAI+H,KACP,GAAgB,YAAZA,EAAK,GAAkB,CACvB,MAAMukC,EAA4C,mBAAZvkC,EAAK,GACrCA,EAAK,GACc,iBAAZA,EAAK,IAA+B,OAAZA,EAAK,IAA8C,mBAAxBA,EAAK,GAAG6Z,YAC9D7Z,EAAK,GAAG6Z,YACR,KACV,GAA+B,OAA3B0qB,EAAiC,CACjC,MAAMC,EAAuBF,EAAsB5sC,IAAIsI,EAAK,SAC/BxN,IAAzBgyC,EACAxkC,EAAK,GAAKwkC,GAGVxkC,EAAK,GAAMiC,IACP8O,EAAiC3I,EAAcmc,YAAanc,EAAczK,YAAY,IAAM4mC,EAAuBtiC,IAAO,EAE9HqiC,EAAsB9sC,IAAI+sC,EAAwBvkC,EAAK,IAE/D,CACJ,CACA,OAAO/H,EAAiBhB,KAAK2sC,EAAezsC,MAAO6I,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAG,GAGrF4jC,EAAezsC,MAAM+K,qBAAwBA,EAW1C0hC,EAAezsC,MAAM+K,oBAVb,IAAIlC,KACP,GAAgB,YAAZA,EAAK,GAAkB,CACvB,MAAMwkC,EAAuBF,EAAsB5sC,IAAIsI,EAAK,SAC/BxN,IAAzBgyC,IACAF,EAAsB/rC,OAAOyH,EAAK,IAClCA,EAAK,GAAKwkC,EAElB,CACA,OAAOtiC,EAAoBjL,KAAK2sC,EAAezsC,MAAO6I,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAG,GAGxF,IAAIuS,EAAY,KAChBlZ,OAAO4c,eAAe2tB,EAAezsC,MAAO,YAAa,CACrDO,IAAK,IAAM6a,EACX/a,IAAM5G,IACuB,mBAAd2hB,GACPqxB,EAAezsC,MAAM+K,oBAAoB,UAAWqQ,GAExDA,EAA6B,mBAAV3hB,EAAuBA,EAAQ,KACzB,mBAAd2hB,IACPqxB,EAAezsC,MAAMc,iBAAiB,UAAWsa,GACjDqxB,EAAezsC,MAAMuB,QACzB,IAGRoY,EAAqBxQ,UAAU/I,KAAOqsC,EAAezsC,MACrD,IAAIka,EAAwB,KAC5B,MAAMozB,ECjP6B,EAACr8B,EAAemJ,EAAwBT,EAAsBwE,KACrG,IAAIhE,EAAqB1M,EAAuBlN,IAAI0Q,QACzB5V,IAAvB8e,IACAA,EAAqB,IAAI5a,QACzBkO,EAAuBpN,IAAI4Q,EAAekJ,IAE9C,MAAMmzB,EAA+BpvB,GAAmCvE,EAAsBwE,GAE9F,OADAhE,EAAmB9Z,IAAI+Z,EAAwBkzB,GACxCA,CAA4B,EDyOMC,CAA4Bt8B,EAAeg8B,EAA6BtzB,EAAsBjU,GACnI4nC,EAA6B1pB,MAAM4pB,GAAkBtzB,EAAwBszB,IAC7E,MAAM74B,EAASqE,GAAmBtT,EAAQsG,eAAgBtG,EAAQ+K,cAC5D8G,EAAUyB,GAAmBtT,EAAQuG,gBAAiByN,GACtDhW,OAA2DrI,IAA9Cse,EAAqBtL,qBAClC,GACAsL,EAAqBtL,qBAAqB3L,QAAO,CAAC6B,GAAU/B,WAAW,IAAM+B,EAAQ,CAAC/B,GAAO,IAAI6O,aAAa,QAAS,CAAC,GAC9H,IAAIoG,GAAW,EACf,MAAMg2B,EAAyB,KACvB/nC,EAAQuG,gBAAkB,GAC1B4rB,EAAoBv3B,WAAWwsC,GAEnC,IAAK,IAAI/uC,EAAI,EAAG2c,EAAkC,EAAG3c,EAAI2H,EAAQuG,gBAAiBlO,GAAK,EAAG,CACtF,MAAM2vC,EAA0BX,EAAyBhvC,GACzD,IAAK,IAAIsb,EAAI,EAAGA,EAAIK,EAAmB3b,GAAIsb,GAAK,EAC5CyzB,EAA0BxsC,WAAWotC,EAAyBhzB,EAAkCrB,EAAGA,GAEvGqB,GAAmChB,EAAmB3b,EAC1D,GAEE4vC,EAAqB,IAAI/sC,IAE/Bi3B,EAAoB7hB,eAAiB,EAAGE,cAAagiB,mBACjD,GAA8B,OAA1Bhe,EAAgC,CAChC,MAAM7J,EAAeg8B,EAAgCY,GACrD,IAAK,IAAIlvC,EAAI,EAAGA,EAAIiiB,EAAYjiB,GAAK,IAAK,CACtC,IAAK,IAAIsb,EAAI,EAAGA,EAAI3T,EAAQsG,eAAgBqN,GAAK,EAC7C,IAAK,IAAIiB,EAAI,EAAGA,EAAI5U,EAAQ+K,aAAc6J,GAAK,EAC3C7B,GAAgBvC,EAAavB,EAAO0E,GAAIiB,EAAGA,EAAGvc,QAGJ1C,IAA9Cse,EAAqBtL,sBACrBsL,EAAqBtL,qBAAqB2B,SAAQ,EAAGxN,QAAQrH,KACzDsd,GAAgBvC,EAAaxS,EAAYlB,EAAMqX,EAAwB1e,EAAO4C,EAAE,IAGxF,IAAK,IAAIsb,EAAI,EAAGA,EAAI3T,EAAQsG,eAAgBqN,GAAK,EAC7C,IAAK,IAAIiB,EAAI,EAAGA,EAAIZ,EAAmBL,GAAIiB,GAAK,EAEX,IAA7B/C,EAAQ8B,GAAGiB,GAAGzB,aACdtB,EAAQ8B,GAAGiB,GAAK,IAAIjJ,aAAa,MAI7C,IACI,MAAMkJ,EAAyB5F,EAAOtR,KAAI,CAACkM,EAAOpU,KAE9C,GADoBkV,EAAalV,GACjBwU,KAAO,EAEnB,OADAg+B,EAAmBttC,IAAIlF,EAAO6kB,EAAa,KACpCzQ,EAEX,MAAMmH,EAAQi3B,EAAmBptC,IAAIpF,GACrC,YAAcE,IAAVqb,EACO,IAEPnH,EAAMe,OAAOwF,GAAgBA,EAAYxF,OAAO8F,GAAsB,IAAXA,QAC7C,IAAVM,EACAi3B,EAAmBvsC,OAAOjG,GAG1BwyC,EAAmBttC,IAAIlF,EAAOub,EAAQ,IAGvCnH,EAAK,IAEViL,EAAmBZ,EAAiC3I,EAAcmc,YAAcrvB,EAAIkT,EAAczK,WAAYyK,EAAczK,YAAY,IAAM0T,EAAsBO,QAAQF,EAAwBhD,EAAS7T,KACnN+T,EAAW+C,EACX,IAAK,IAAInB,EAAI,EAAGqB,EAAkC,EAAGrB,EAAI3T,EAAQuG,gBAAiBoN,GAAK,EAAG,CACtF,IAAK,IAAIiB,EAAI,EAAGA,EAAIZ,EAAmBL,GAAIiB,GAAK,EAC5ClJ,GAAc8mB,EAAc3gB,EAAQ8B,GAAIiB,EAAGI,EAAkCJ,EAAGvc,GAEpF2c,GAAmChB,EAAmBL,EAC1D,CACJ,CACA,MAAOhY,GACHoW,GAAW,EACXw1B,EAA4BtyB,cAAc,IAAIC,WAAW,iBAAkB,CACvEC,MAAOxZ,EAAMwZ,MACbC,SAAUzZ,EAAMyZ,SAChBC,OAAQ1Z,EAAM0Z,OACd/Z,QAASK,EAAML,UAEvB,CACA,IAAKyW,EAAU,CACX,IAAK,IAAI4B,EAAI,EAAGA,EAAI3T,EAAQsG,eAAgBqN,GAAK,EAAG,CAChDqzB,EAAUrzB,GAAG/Y,WAAWqsC,EAA0BtzB,IAClD,IAAK,IAAIiB,EAAI,EAAGA,EAAI5U,EAAQ+K,aAAc6J,GAAK,EAC3CqyB,EAA0B5uC,GAAGuC,WAAWusC,EAAwBvyB,EAAGjB,EAAI3T,EAAQ+K,aAAe6J,EAEtG,CACA,QAAkDjf,IAA9Cse,EAAqBtL,qBAAoC,CACzD,MAAM/S,EAASqe,EAAqBtL,qBAAqB/S,OACzD,IAAK,IAAI+d,EAAI,EAAGA,EAAI/d,EAAQ+d,GAAK,EAAG,CAChC,MAAMkiB,EAAqBqR,EAAoBvzB,GAC/CkiB,EAAmBj7B,WAAWusC,EAAwB,EAAGhzB,EAAwBR,GACjFkiB,EAAmBhvB,MACvB,CACJ,CACAsgC,EAAuBvsC,WAAWu3B,GAClCA,EAAoB7hB,eAAiB,KACjC6nB,EACA4P,IAGAG,IAEJ,KACJ,CACJ,CACJ,GAEJ,IAAI/P,GAAc,EAElB,MAAMte,EAAiBD,EAAqBrO,EAAe,CACvDR,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBoC,KAAM,IAEJ+6B,EAAmB,IAAMhW,EAAoBh4B,QAAQ0f,GAAgB1f,QAAQoR,EAAcsC,aAC3Fq6B,EAAsB,KACxB/V,EAAoBv3B,WAAWif,GAC/BA,EAAejf,YAAY,EA0B/B,OADAutC,IACOpc,EAAmBwb,GAxBJ,KAClB,GAAIx1B,EAAU,CACVm2B,IACIloC,EAAQuG,gBAAkB,GAC1B4rB,EAAoBh4B,QAAQitC,GAEhC,IAAK,IAAI/uC,EAAI,EAAG2c,EAAkC,EAAG3c,EAAI2H,EAAQuG,gBAAiBlO,GAAK,EAAG,CACtF,MAAM2vC,EAA0BX,EAAyBhvC,GACzD,IAAK,IAAIsb,EAAI,EAAGA,EAAIK,EAAmB3b,GAAIsb,GAAK,EAC5CyzB,EAA0BjtC,QAAQ6tC,EAAyBhzB,EAAkCrB,EAAGA,GAEpGqB,GAAmChB,EAAmB3b,EAC1D,CACJ,CACA8/B,GAAc,CAAI,IAEG,KACjBpmB,IACAo2B,IACAJ,KAEJ5P,GAAc,CAAK,GAGgE,EjHnErDiQ,CAAyChC,GAAwBx6B,GAAsB,GAAyB8gB,GAA+B1T,GAAiC6U,GAAgCjU,GAAsBS,GAAiC,GAAyBmsB,GAA2BtyB,GAAkCyyB,GAAiC5a,IAClasc,GmHpU6C,EAACrf,EAAyB6d,EAAmCjtB,EAAsBtX,EAAyBypB,IACpJ,CAACxgB,EAAe6M,EAAavI,EAAmC/S,EAAMmX,EAAsBjU,KAC/F,GAA0C,OAAtC6P,EACA,IACI,MAAM6E,EAAyB,IAAI7E,EAAkCtE,EAAezO,EAAMkD,GACpFynC,EAAwB,IAAIvsC,IAClC,IAAI0nC,EAAmB,KAqFvB,GApFApmC,OAAOiK,iBAAiBiO,EAAwB,CAK5C3J,aAAc,CACVlQ,IAAK,IAAMmF,EAAQ+K,aACnBpQ,IAAK,KACD,MAAMquB,GAAyB,GAGvC3iB,iBAAkB,CACdxL,IAAK,IAAM,WACXF,IAAK,KACD,MAAMquB,GAAyB,GAIvC4Z,iBAAkB,CACd/nC,IAAK,IAAM+nC,EACXjoC,IAAM5G,IAC8B,mBAArB6uC,GACPluB,EAAuBrP,oBAAoB,iBAAkBu9B,GAEjEA,EAAoC,mBAAV7uC,EAAuBA,EAAQ,KACzB,mBAArB6uC,GACPluB,EAAuBtZ,iBAAiB,iBAAkBwnC,EAC9D,KAIZluB,EAAuBtZ,kBAAqBA,EAkCzCsZ,EAAuBtZ,iBAjCf,IAAI+H,KACP,GAAgB,mBAAZA,EAAK,GAAyB,CAC9B,MAAMukC,EAA4C,mBAAZvkC,EAAK,GACrCA,EAAK,GACc,iBAAZA,EAAK,IAA+B,OAAZA,EAAK,IAA8C,mBAAxBA,EAAK,GAAG6Z,YAC9D7Z,EAAK,GAAG6Z,YACR,KACV,GAA+B,OAA3B0qB,EAAiC,CACjC,MAAMC,EAAuBF,EAAsB5sC,IAAIsI,EAAK,SAC/BxN,IAAzBgyC,EACAxkC,EAAK,GAAKwkC,GAGVxkC,EAAK,GAAMiC,IAEY,UAAfA,EAAMlR,MACNsI,OAAOiK,iBAAiBrB,EAAO,CAC3BlR,KAAM,CAAEH,MAAO,oBAEnB2zC,EAAuBtiC,IAGvBsiC,EAAuB,IAAIxyB,WAAW/R,EAAK,GAAI,IAAKiC,IACxD,EAEJqiC,EAAsB9sC,IAAI+sC,EAAwBvkC,EAAK,IAE/D,CACJ,CAGA,OADA/H,EAAiBhB,KAAKsa,EAAwB,QAASvR,EAAK,GAAIA,EAAK,IAC9D/H,EAAiBhB,KAAKsa,KAA2BvR,EAAK,GAGrEuR,EAAuBrP,qBAAwBA,EAa5CqP,EAAuBrP,oBAZf,IAAIlC,KACP,GAAgB,mBAAZA,EAAK,GAAyB,CAC9B,MAAMwkC,EAAuBF,EAAsB5sC,IAAIsI,EAAK,SAC/BxN,IAAzBgyC,IACAF,EAAsB/rC,OAAOyH,EAAK,IAClCA,EAAK,GAAKwkC,EAElB,CAGA,OADAtiC,EAAoBjL,KAAKsa,EAAwB,QAASvR,EAAK,GAAIA,EAAK,IACjEkC,EAAoBjL,KAAKsa,EAAwBvR,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAG,GAO1D,IAA5BnD,EAAQuG,gBAAuB,CAC/B,MAAMsT,EAAiBD,EAAqBrO,EAAe,CACvDR,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBoC,KAAM,IAEVsH,EAAuBva,QAAQ0f,GAAgB1f,QAAQoR,EAAcsC,aAIrE,OAAOke,EAAmBrX,GAHJ,IAAMmF,EAAejf,eAClB,IAAMif,EAAe1f,QAAQoR,EAAcsC,cAGxE,CACA,OAAO6G,CACX,CACA,MAAO9U,GAEH,GAAiB,KAAbA,EAAIN,KACJ,MAAMgD,IAEV,MAAM1C,CACV,CAvCiD,IAAEyF,EAnCHjK,EA6EpD,QAA6BzF,IAAzBse,EACA,MAAM3R,IAGV,MCxHgD,CAACmW,IACrD,MAAM,MAAEne,GAAU,IAAIE,eACtB,IAEIF,EAAM8B,YAAYqc,EACtB,CACA,QACIne,EAAMqb,OACV,GD+GI2yB,CAAyCtoC,GAClC6mC,EAAkCt7B,EAAe6M,EAAanE,EAAsBjU,EAAQ,EnH6MtEuoC,CAAoC,GAAyB1B,GAAmCjtB,GAAsB,GAAyBmS,IAC9Kyc,GrD1P+C,EAAC/iB,EAAmB2gB,EAAwBzgB,EAAmC+G,EAA+B1T,EAAiC6U,EAAgCjU,EAAsB0sB,EAAkCE,EAA2BtyB,EAAkC3E,EAAoBM,EAAmC+P,EAAsC2G,EAAkBzH,EAAyBoU,IACtd,CAACp2B,EAAMkD,EAASiU,KACnB,MAAM8Y,EAA2B,IAAIlzB,QACrC,IAAI4uC,EAAyB,KAoJ7B,MAAO,CACH,MAAAjpC,CAAOqU,EAAOE,GACVuyB,EAAiCvyB,EAA2BF,GAC5D,MAAM60B,EAA2C3b,EAAyBlyB,IAAIkZ,GAC9E,YAAiDpe,IAA7C+yC,EACOxsC,QAAQT,QAAQitC,GAxJXruC,OAAOwZ,EAAOE,KAClC,IAAIW,EAAyBnF,EAAmBsE,GAC5C80B,EAAoB,KACxB,MAAMC,EAAyCv9B,GAAiBqJ,EAAwBX,GAClFC,EAAqBpL,MAAMC,QAAQ7I,EAAQgU,oBAC3ChU,EAAQgU,mBACRpL,MAAMW,KAAKvJ,EAAQgU,oBAEzB,GAA0C,OAAtCnE,EAA4C,CAC5C,MAAMuE,EAAyBJ,EAAmBhX,QAAO,CAACqX,EAAKtgB,IAAUsgB,EAAMtgB,GAAO,GAChFqzC,EAA4BpuB,EAAgCjF,EAA2B,CACzFhJ,aAAchW,KAAKoD,IAAI,EAAGic,GAC1B/N,iBAAkB,WAClB2E,sBAAuB,WACvBzE,gBAAiBxR,KAAKoD,IAAI,EAAGic,KAE3BizB,EAA2B,GACjC,IAAK,IAAIhvC,EAAI,EAAGA,EAAIwb,EAAMtN,gBAAiBlO,GAAK,EAC5CgvC,EAAyBrvC,KAAK00B,EAA8B3Y,EAA2B,CACnFhJ,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvB1E,eAAgB0N,EAAmB3b,MAG3C,MAAM2/B,EAAiBpe,EAAqB7F,EAA2B,CACnEhJ,aAAc/K,EAAQ+K,aACtB1E,iBAAkBrG,EAAQqG,iBAC1B2E,sBAAuBhL,EAAQgL,sBAC/BoC,KAAM,IAEV4qB,EAAe79B,QAAUisC,EAAuBziC,KAAK,KAAM0jC,GAC3DrP,EAAep9B,WAAa4rC,EAA0B7iC,KAAK,KAAM0jC,GACjEsB,EAAoB,CAACvB,EAA2BC,EAA0BrP,EAC9E,MACU4Q,IACNl0B,EAAyB,IAAI7E,EAAkCkE,EAA2BjX,IAG9F,GADAiwB,EAAyBpyB,IAAIoZ,EAAiD,OAAtB40B,EAA6Bj0B,EAAyBi0B,EAAkB,IACtG,OAAtBA,EAA4B,CAC5B,GAA+B,OAA3BF,EAAiC,CACjC,QAA6B9yC,IAAzBse,EACA,MAAM,IAAIpc,MAAM,sCAEpB,GAA6C,OAAzC+nB,EACA,MAAM,IAAI/nB,MAAM,uDAGpB,MAAMsc,EAAwBN,EAAM9I,aAAe8I,EAAMvN,eACnDwgC,OAAmEnxC,IAA9Cse,EAAqBtL,qBAAqC,EAAIsL,EAAqBtL,qBAAqB/S,OAC7HqW,EAAmBkI,EAAwB2yB,EAC3C+B,EAAexuC,UACjB,MAAMy5B,EAA6B,IAAIlU,EAAqC3T,EAGpC,IAAxClX,KAAK6B,KAAKid,EAAM1N,QAAQvQ,OAAS,KAAYme,EAA0BjT,YACjEkmC,EAAY,GACZC,EAA4B,GAClC,IAAK,IAAI5uC,EAAI,EAAGA,EAAI2H,EAAQsG,eAAgBjO,GAAK,EAC7C2uC,EAAUhvC,KAAK4hB,EAAqBka,EAA4B,CAC5D/oB,aAAc/K,EAAQ+K,aACtB1E,iBAAkBrG,EAAQqG,iBAC1B2E,sBAAuBhL,EAAQgL,sBAC/BoC,KAAM,KAEV65B,EAA0BjvC,KAAKghB,EAAgC8a,EAA4B,CACvF/oB,aAAc/K,EAAQ+K,aACtB1E,iBAAkB,WAClB2E,sBAAuB,WACvBzE,gBAAiBvG,EAAQ+K,gBAGjC,MAAMm8B,QAA4BhrC,QAAQ6iB,IAAInW,MAAMW,KAAKsK,EAAM7V,WAAWzJ,UAAUoJ,KAAItD,MAAOsS,IAC3F,MAAMkpB,EAAqBhI,EAA+BiG,EAA4B,CAClF/oB,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvBsC,OAAQX,EAAW5Y,QAGvB,aADMwyB,EAAiBuN,EAA4BnnB,EAAYkpB,EAAmBvoB,QAC3EuoB,CAAkB,KAEvBsR,EAAyBza,EAA8BoH,EAA4B,CACrF/oB,aAAc,EACd1E,iBAAkB,WAClB2E,sBAAuB,WACvB1E,eAAgBvR,KAAKoD,IAAI,EAAGgc,EAAwB2yB,KAExD,IAAK,IAAIzuC,EAAI,EAAGA,EAAI2H,EAAQsG,eAAgBjO,GAAK,EAAG,CAChD2uC,EAAU3uC,GAAG8B,QAAQ8sC,EAA0B5uC,IAC/C,IAAK,IAAIsb,EAAI,EAAGA,EAAI3T,EAAQ+K,aAAc4I,GAAK,EAC3CszB,EAA0B5uC,GAAG8B,QAAQgtC,EAAwBxzB,EAAGtb,EAAI2H,EAAQ+K,aAAe4I,EAEnG,CACA,IAAK,MAAOle,EAAOogC,KAAuBqR,EAAoBzqC,UAC1Do5B,EAAmB17B,QAAQgtC,EAAwB,EAAGhzB,EAAwB1e,GAC9EogC,EAAmBh6B,MAAM,GAI7B,OAFAsrC,EAAuBhtC,QAAQ25B,EAA2BjmB,mBACpD3R,QAAQ6iB,IAAIioB,EAAUrpC,KAAK8sB,GAAa3L,EAAwBjL,EAAOigB,EAA4BrJ,MAClGyI,EAAgCY,EAA2B,EAEtE2U,EAAyB70B,GAAcC,EAA4B,IAArB5H,EAAyB,WAAa48B,IAAgB90B,EAA2B/T,EAASgU,EAAoBC,EAAsBC,EACtL,CACA,MAAMI,QAAwBm0B,EACxBjc,EAAwB7G,EAAkC5R,EAA2B,CACvF/S,OAAQ,KACR+J,aAAc,EACd1E,iBAAkB,MAClB2E,sBAAuB,WACvBqB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,KAEX46B,EAA2BC,EAA0BrP,GAAkB2Q,EACtD,OAApBr0B,IACAkY,EAAsBxrB,OAASsT,EAC/BkY,EAAsB3wB,MAAM,IAEhC2wB,EAAsBryB,QAAQitC,GAC9B,IAAK,IAAI/uC,EAAI,EAAG2c,EAAkC,EAAG3c,EAAIwb,EAAMtN,gBAAiBlO,GAAK,EAAG,CACpF,MAAM2vC,EAA0BX,EAAyBhvC,GACzD,IAAK,IAAIsb,EAAI,EAAGA,EAAIK,EAAmB3b,GAAIsb,GAAK,EAC5CyzB,EAA0BjtC,QAAQ6tC,EAAyBhzB,EAAkCrB,EAAGA,GAEpGqB,GAAmChB,EAAmB3b,EAC1D,CACA,OAAO2/B,CACX,CACA,GAAK4Q,EAQD,IAAK,MAAOE,EAAIn8B,KAAekH,EAAM7V,WAAWvB,gBACtCgpB,EAAkB1R,EAA2BpH,EAEnD+H,EAAuB1W,WAAWnD,IAAIiuC,SAV1C,IAAK,MAAOA,EAAIn8B,KAAekH,EAAM7V,WAAWvB,gBACtC8pB,EAAiBxS,EAA2BpH,EAElD+H,EAAuB1W,WAAWnD,IAAIiuC,IAW9C,aADMhqB,EAAwBjL,EAAOE,EAA2BW,GACzDA,CAAsB,EASlBsY,CAAgBnZ,EAAOE,EAClC,EACH,EqD0F8Bg1B,CAAsCtjB,GAAmB2gB,GAAwBzgB,GAAmC+G,GAA+B1T,GAAiC6U,GAAgCjU,GAAsB0sB,GAAkCE,GAA2BtyB,GAAkC3E,GAAoBM,GAAmC+P,GAAsC2G,GAAkBzH,GAAyBoU,IAClf8V,GqHvU4C,CAACpJ,GACvCr0B,GACGq0B,EAA+B/kC,IAAI0Q,GrHqUb09B,CAAmCrJ,IAClEsJ,GsHxU+C,CAACxC,GAC3C,CAAChyB,EAAwB/J,KAC5B+7B,EAAkC/rC,IAAI+Z,EAAwB/J,EAAa,EtHsU3Cw+B,CAAsCzC,IAExExgC,GAA8Bo5B,GzD9Ta,EAAC4G,EAA+B7kB,EAAsB6F,EAAkBshB,EAAgCH,EAA8B57B,EAAyBu8B,EAA8BtpB,EAAkBM,EAA6BnQ,EAAmCu5B,EAAiCF,EAAiCG,EAAwCxsB,IAC/Z,cAA+BwE,EAClC,WAAA7O,CAAYrM,EAASrJ,EAAMkD,GACvB,IAAIyd,EACJ,MAAMlS,EAAgBmU,EAAiBvZ,GACjCyL,EAAYoO,EAA4BzU,GACxCmY,EAAgB0lB,EAAgC,IAAK,MAAoBppC,IAE/EqpC,EAAuC3lB,GACvC,MAAMod,EAAoCh5B,EAAwCjN,IAAI0Q,GAChF0I,EAAuB6sB,aAA6F,EAASA,EAAkCjmC,IAAIiC,GAEnKokC,EAA2CtvB,GAAqC,WAAxBrG,EAAc/E,MACtE+E,EACuD,QAAtDkS,EAAKurB,EAA6Bz9B,UAAmC,IAAPkS,EAAgBA,EAAKlS,EACpFmJ,EAAyB2zB,EAA6BnH,EAA0CtvB,EAAY,KAAOzL,EAAQiS,YAAavI,EAAmC/S,EAAMmX,EAAsByP,GAM7M/B,MAAMxb,GAAS,EAAMuO,EALc9C,EAAY42B,EAA+B1rC,EAAM4mB,EAAezP,GAAwB,MAM3H,MAAMjW,EAAa,GACnB0W,EAAuB1W,WAAWsM,SAAQ,CAAC0H,EAAkB82B,KACzD,MAAMn8B,EAAaua,EAAiBjwB,KAAM2a,EAAWI,GACrDhU,EAAWhG,KAAK,CAAC8wC,EAAIn8B,GAAY,IAErC1V,KAAKqyC,wBAA0B50B,EAC/Bzd,KAAKsyC,kBAAoB,KACzBtyC,KAAKuyC,YAAc,IAAIj3B,GAAYvU,GAK/B4T,GACAs0B,EAA8B36B,EAAetU,MAEjD,MAAM,aAAE0T,GAAiB8B,EAAwBxV,MACjDiyC,EAAgCx0B,EAAwB/J,EAC5D,CACA,oBAAIi4B,GACA,OAAO3rC,KAAKsyC,iBAChB,CACA,oBAAI3G,CAAiB7uC,GACjB,MAAM01B,EAAmC,mBAAV11B,EAAuB8oB,EAAkB5lB,KAAMlD,GAAS,KACvFkD,KAAKqyC,wBAAwB1G,iBAAmBnZ,EAChD,MAAMggB,EAAyBxyC,KAAKqyC,wBAAwB1G,iBAC5D3rC,KAAKsyC,kBAC0B,OAA3BE,GAAmCA,IAA2BhgB,EACxD11B,EACA01C,CACd,CACA,cAAIzrC,GACA,OAAyB,OAArB/G,KAAKuyC,YAEEvyC,KAAKqyC,wBAAwBtrC,WAEjC/G,KAAKuyC,WAChB,CACA,QAAI9uC,GACA,OAAOzD,KAAKqyC,wBAAwB5uC,IACxC,GyDkQFgvC,CAAkCxD,GAA+B7kB,GAAsB6F,GAAkBshB,GAAgCH,GAA8B57B,GAAyBu8B,GAA8BtpB,GAAkBM,GAA6BnQ,IuH3UnO7P,IACrC,IACAA,EACHgU,wBAAmDre,IAA/BqK,EAAQgU,mBACtBhU,EAAQgU,mBACmB,IAA3BhU,EAAQsG,gBAAoD,IAA5BtG,EAAQuG,gBAMlC,CAACvG,EAAQ+K,cACXnC,MAAMW,KAAK,CAAE3T,OAAQoK,EAAQuG,kBAAmB,IAAM,OvH+T+Q2iC,IwH3UhSzwB,IACnD,MAAM,MAAEne,EAAK,MAAEC,GAAU,IAAIC,eAC7B,IAEIF,EAAM8B,YAAYqc,EACtB,CACA,QACIne,EAAMqb,QACNpb,EAAMob,OACV,IxHkU4ZkH,SAC1ZlnB,EAeAg0C,GyHzV8C,EAAC3gB,EAAyB1mB,EAAyBgZ,EAAoB2a,EAAoCzV,IACpJ,cAAkCyV,EACrC,WAAAzjB,CAAYxS,EAAU,CAAC,GACnB,GAAsC,OAAlCwgB,EACA,MAAM,IAAI3oB,MAAM,gDAEpB,IAAI+X,EACJ,IACIA,EAAqB,IAAI4Q,EAA8BxgB,EAC3D,CACA,MAAOJ,GAEH,GAAiB,KAAbA,EAAIN,MAA+B,+BAAhBM,EAAItE,QACvB,MAAMgH,IAEV,MAAM1C,CACV,CAEA,GAA2B,OAAvBgQ,EACA,MAAM0L,IAGV,IAAKxN,GAAmB9N,EAAQ+N,aAC5B,MAAM,IAAI9N,UAAU,uBAAuBD,EAAQ+N,+EAGvD,QAA2BpY,IAAvBqK,EAAQc,YAA4B8O,EAAmB9O,aAAed,EAAQc,WAC9E,MAAMwB,IAEVqf,MAAM/R,EAAoB,GAC1B,MAAM,YAAE7B,GAAgB/N,GAClB,WAAEc,GAAe8O,EAkCvB,GAhCA3Y,KAAK2yC,aACyC,iBAAnCh6B,EAAmBwI,YACpBxI,EAAmBwI,YACH,aAAhBrK,EACI,IAAMjN,EACU,gBAAhBiN,QAAiDpY,IAAhBoY,EAC7B,IAAMjN,EACU,aAAhBiN,EACI,KAAOjN,EAKuE,IAA3E/L,KAAKoD,IAAI,EAAGpD,KAAKsjB,IAAI,IAAKtjB,KAAKujB,MAAOvK,EAAcjN,EAAc,OAAgBA,EAC3G7J,KAAK4yC,oBAAsBj6B,EAEgB,uBAAvC4Q,EAA8B1jB,MAC9B7F,KAAK6yC,gBAAkBl6B,EAAmBK,aAC1ChZ,KAAKogC,sBAAwBznB,EAAmB2M,mBAChDtlB,KAAK6yC,gBAAgB18B,KAAKrZ,MAAQ,MAClCkD,KAAKogC,sBAAsBl9B,QAAQlD,KAAK6yC,iBAAiB3vC,QAAQyV,EAAmB/B,aACpF5W,KAAKogC,sBAAsBx7B,UAG3B5E,KAAK6yC,gBAAkB,KACvB7yC,KAAKogC,sBAAwB,MAEjCpgC,KAAK8yC,OAAS,KAKmB,YAA7Bn6B,EAAmBpJ,MAAqB,CACxCvP,KAAK8yC,OAAS,YACd,MAAMC,EAAc,KACI,cAAhB/yC,KAAK8yC,SACL9yC,KAAK8yC,OAAS,MAElBn6B,EAAmBvK,oBAAoB,cAAe2kC,EAAY,EAEtEp6B,EAAmBxU,iBAAiB,cAAe4uC,EACvD,CACJ,CACA,eAAI5xB,GACA,OAAOnhB,KAAK2yC,YAChB,CACA,SAAIpjC,GACA,OAAuB,OAAhBvP,KAAK8yC,OAAkB9yC,KAAK8yC,OAAS9yC,KAAK4yC,oBAAoBrjC,KACzE,CACA,KAAAmP,GAEI,MAAmB,WAAf1e,KAAKuP,MACEvP,KAAK4yC,oBAAoBl0B,QAAQuI,MAAK,KACzC,MAAM8K,GAAyB,KAInB,cAAhB/xB,KAAK8yC,SACL9yC,KAAK8yC,OAAS,MAEX9yC,KAAK4yC,oBAAoBl0B,QAAQuI,MAAK,KACZ,OAAzBjnB,KAAK6yC,iBAA2D,OAA/B7yC,KAAKogC,wBACtCpgC,KAAKogC,sBAAsBxwB,OAC3B5P,KAAK6yC,gBAAgBlvC,aACrB3D,KAAKogC,sBAAsBz8B,cAE/BgT,GAAqB3W,KAAK,IAElC,CACA,MAAA2P,GACI,MAAoB,cAAhB3P,KAAK8yC,OACE,IAAI7tC,SAAQ,CAACT,EAASD,KACzB,MAAMyuC,EAAiB,KACnBhzC,KAAK4yC,oBAAoBxkC,oBAAoB,cAAe4kC,GACrB,YAAnChzC,KAAK4yC,oBAAoBrjC,MACzB/K,IAGAxE,KAAK2P,SAASsX,KAAKziB,EAASD,EAChC,EAEJvE,KAAK4yC,oBAAoBzuC,iBAAiB,cAAe6uC,EAAe,IAGzEhzC,KAAK4yC,oBAAoBjjC,SAAS0Q,OAAO1X,IAG5C,QAAYjK,IAARiK,GAAkC,KAAbA,EAAIN,KACzB,MAAM0pB,IAEV,MAAMppB,CAAG,GAEjB,CACA,OAAAsqC,GACI,OAAOjzC,KAAK4yC,oBAAoBK,UAAU5yB,OAAO1X,IAE7C,QAAYjK,IAARiK,EACA,MAAMopB,IAEV,MAAMppB,CAAG,GAEjB,GzHmN+BuqC,CAAqC,GAAyB,GAAyB7uB,GAAoB2a,GAAoCzV,IAEhL4pB,G0H7V+C,EAAC9nC,EAAyBsd,IACpE,CAAC3T,EAAkBrW,EAAQkL,KAC9B,GAA6C,OAAzC8e,EACA,MAAM,IAAI/nB,MAAM,uDAEpB,IACI,OAAO,IAAI+nB,EAAqC3T,EAAkBrW,EAAQkL,EAC9E,CACA,MAAOlB,GAEH,GAAiB,gBAAbA,EAAI9C,KACJ,MAAMwF,IAEV,MAAM1C,CACV,G1H+UgCyqC,CAAsC,GAAyBzqB,IACjG0T,G2H7V8B,EAACtP,EAAkBrG,EAAiBgB,EAAsBmnB,EAAgC5S,EAAiC1nB,EAAqD8Y,EAAmCO,IAC5O,CAAChX,EAAakG,IAA8B4K,EAAqB9Q,GACnErO,OAAOqO,EAAakG,GAKpBmK,MAAK,IAAMhiB,QAAQ6iB,IAAInW,MAAMW,KAAKu8B,EAA+B/xB,IAA4BpW,KAAKyI,GAAqBuY,EAAqBvY,GAAkB5G,OAAO4G,EAAkB2N,QACvLmK,MAAK,IAAMgV,EAAgCnf,KAC3CmK,MAAMpS,IAGoC,mBAAhCA,EAAYiH,iBACnBuR,EAAkCxY,GAClCD,GAAoCC,IAG9B6R,EAAgBnS,GAAqD,IAAMA,EAAoDM,MACrI+Y,EAA6C/Y,GAEjDkY,EAAiB3Z,IAAIyB,GACdA,K3HwUQw+B,CAAqBtmB,GAAkBrG,GAAiBgB,GAAsBmnB,GAAgC5S,GAAiC1nB,GAAqD8Y,GAAmCO,I4H3VxP0lB,I/JEqD,EAAC5sB,EAAiBqL,EAAyBohB,EAAiCnU,EAAoC3C,KA6DtK,EmC6RyCkX,CAA4C7sB,GAAiB,GAAyBysB,GAAiCnU,GAAoC3C,IhB1VrJ,EAACiQ,EAA6B5lB,EAAiBqL,EAAyBohB,EAAiC9W,KAuExJ,EgBqRkCmX,CAAqClH,GAA6B5lB,GAAiB,GAAyBysB,GAAiC9W,I6HjW7I,EAAC3T,EAAciB,KAIjD,E7HoW4B8pB,CAAwB/iC,EAAeiZ,I8HxWpC,EAAC+pB,EAAgB15B,KAC+B,E9HwWtD25B,CAAqBpjC,EAAkB,I+HzWhC,EAAC4f,EAAiBpG,KAC+B,E/HyWvD6pB,CAAsBnjC,EAAmBsZ,IgI1W1B,EAACrB,EAAcK,KAIxD,EhIuWmC8qB,CAA+BnjC,EAAeqY,I4HxWhE,+FKAf,MCHM+qB,GAAgC,CAACC,EAAU19B,KACpD,GAAIA,GAAU09B,EAAS73B,WACnB,OAAO,KAEX,MAAM83B,EAAOD,EAASE,SAAS59B,GAC/B,GAAI29B,EAAO,IACP,OAAO,EAEX,GAAIA,EAAO,GACP,OAAO,EAEX,GAAIA,EAAO,GACP,OAAO,EAEX,GAAIA,EAAO,GACP,OAAO,EAEX,GAAIA,EAAO,EACP,OAAO,EAEX,GAAIA,EAAO,EACP,OAAO,EAEX,GAAIA,EAAO,EACP,OAAO,EAEX,GAAIA,EAAO,EACP,OAAO,EAEX,MAAMr1C,EAASm1C,GAA8BC,EAAU19B,EAAS,GAChE,OAAkB,OAAX1X,EAAkB,KAAOA,EAAS,CAAC,ECHxCu1C,GAAiB,GACjB,GC5B+C,oBAAXvoC,OAAyB,KAAOA,OD8BpEwoC,GnR9BgC,CAACC,GAC5B,CAACn3C,EAAMo3C,KAEV,GAAmC,OAA/BD,EAAqC,CACrC,MAAM,KAAEhwC,KAASkwC,GAAcD,EACzBE,EAAgB,IAAIC,MAAMv3C,EAAMq3C,GAEtC,OADAC,EAAcnwC,KAAOA,EACdmwC,CACX,CACA,OAAO,IAAIH,EAA2Bn3C,EAAMo3C,EAAc,EmRqB1CI,CE9BwB,CAAC9oC,GAC9B,OAAXA,QAAwCjN,IAArBiN,EAAO+oC,UACnB/oC,EAAO+oC,UAEX,KFyBwBC,CAAiC,KAE9DC,GPhB4C,EAACT,EAAiBhpC,EAAgC4mB,EAAyB1mB,IAClH,CAACwpC,EAAa/G,EAAa/iC,KAC9B,IAAIyb,EACJ,MAAM3c,EAAwD,QAA1C2c,EAAKsnB,EAAYG,iBAAiB,UAAuB,IAAPznB,OAAgB,EAASA,EAAGsuB,cAAcjrC,WAC1GkrC,EAAe,IAAI,GAAoB,CAAEj+B,YAAa,WAAYjN,eAClElL,EAASb,KAAKoD,IAAI,KAAMpD,KAAK6B,KAAKo1C,EAAa5zB,YAAc4zB,EAAalrC,aAC1EgL,EAAc,IAAI,GAAY,CAAElW,SAAQkL,WAAYkrC,EAAalrC,aACjEmrC,EAAuB,GACvBC,EAA6B1mC,GAA+BrE,IAC9D,QAA8BxL,IAA1BiQ,GACA,MAAM,IAAI/N,MAAM0yC,IAEpB,OAAO3kC,GAAsBomC,EAAc7qC,EAAI,IAEnD,IAAIgrC,EAAiB,KACjBC,EAAa,KACbC,EAAiC,KACjCC,EAA2B,KAC3BC,GAAwB,EAC5B,MAAMC,EAA8B1qC,IAChCgqC,EAAY72B,cAAcm2B,EAAgB,gBAAiB,CAAE/vC,KAAM,IAAI6F,KAAKY,EAAc,CAAE5N,KAAM8N,MAAe,EAE/GyqC,EAA8BpyC,MAAOwH,EAAWjB,KAClD,MAAMkB,QAAqBpB,EAAOmB,EAAWjB,GACN,OAAnCyrC,EACAJ,EAAqBj0C,QAAQ8J,IAG7B0qC,EAA2B1qC,GAC3BwqC,EAA2BG,EAA4B5qC,EAAWjB,GACtE,EAEEgG,EAAS,KACX2lC,GAAwB,EACjBP,EAAaplC,UAElBC,EAAO,KAC8B,OAAnCwlC,IAGmB,OAAnBF,IACApH,EAAY1/B,oBAAoB,WAAY8mC,GAC5CpH,EAAY1/B,oBAAoB,cAAe8mC,IAEhC,OAAfC,GACA1pB,aAAa0pB,GAEjBC,EAA+BnuB,MAAK7jB,OAASw7B,qBAAoBh0B,YAAW6qC,6BAA4BC,+BACnE,OAA7BL,IACAA,EAAyBh1B,OAAM,SAG/Bg1B,EAA2B,YAEzBK,EAAyB9lC,OAC/B6lC,EAA2B9xC,WAAW+xC,GACtC9W,EAAmBhvB,OACnB,MAAM/E,QAAqBpB,EAAOmB,EAAW,MACN,OAAnCwqC,SACMnC,IAEVsC,EAA2B,IAAIP,KAAyBnqC,IACxDmqC,EAAqBr2C,OAAS,EAC9Bk2C,EAAY72B,cAAc,IAAIw2B,MAAM,QAAQ,IAEhDY,EAAiC,KAAI,EAEnCnC,EAAU,KACZqC,GAAwB,EACjBP,EAAa9B,WAGxB,OADAA,IACO,CACH,YAAIloC,GACA,OAAOA,CACX,EACA,SAAIwE,GACA,OAA0C,OAAnC6lC,EAA0C,WAAaE,EAAwB,YAAc,QACxG,EACA,KAAA7lC,GACI,GAAuC,OAAnC2lC,EACA,MAAMrjB,IAENujB,IACArC,IACA4B,EAAY72B,cAAc,IAAIw2B,MAAM,UAE5C,EACA,MAAA7kC,GACI,GAAuC,OAAnCylC,EACA,MAAMrjB,IAELujB,IACD3lC,IACAklC,EAAY72B,cAAc,IAAIw2B,MAAM,WAE5C,EACA,KAAA5vC,CAAM+E,GACF,IAAI6c,EACJ,GAAuC,OAAnC4uB,EACA,MAAMrjB,IAEV,GAAI+b,EAAY6H,iBAAiBh3C,OAAS,EACtC,MAAM0M,IAEVwpC,EAAY72B,cAAc,IAAIw2B,MAAM,UACpC,MAAMoB,EAAc9H,EAAYG,iBAE1Bn6B,EAAsC,IAAvB8hC,EAAYj3C,OAC3B,EACqD,QAApD6nB,EAAKovB,EAAY,GAAGd,cAAchhC,oBAAiC,IAAP0S,EAAgBA,EAAK,EACxF4uB,EAAiCnwC,QAAQ6iB,IAAI,CACzCnY,IACAslC,EAA2BhuB,MAAK,IA3HH7jB,OAAOyR,EAAakgC,EAAcjhC,EAAcg6B,EAAa/iC,KAC1G,MAAM,UAAEH,EAAS,KAAEnH,SAAeqH,EAAYC,EAAUgqC,EAAalrC,YACrE,QAAyBnL,IAArB,GACA,MAAM,IAAIkC,MAAM0yC,IAKpB,MAAO,CAAE/d,sBAHqB,IAAI,GAAsBwf,EAAc,CAAEhrC,OAAQ8K,IAGhDjK,YAAW6qC,2BAFR,IAAI,GAA2BV,EAAc,CAAEjH,gBAEXrqC,OAAMiyC,yBAD5C7mC,EAA+B,GAAkBkmC,EAAc,CAAEjhC,iBACK,EAmHjD+hC,CAAyChhC,EAAakgC,EAAcjhC,EAAcg6B,EAAa/iC,OACtIkc,MAAK7jB,OAAQ,EAAImyB,wBAAuB3qB,YAAW6qC,6BAA4BhyC,OAAMiyC,gCACpFD,EAA2BvyC,QAAQwyC,SAC7B,IAAIzwC,SAAST,IACf+wB,EAAsBhD,QAAU/tB,EAChC+wB,EAAsBryB,QAAQwyC,GAC9BngB,EAAsB3wB,MAAMmwC,EAAatkB,YAAc9xB,EAASo2C,EAAalrC,WAAW,IAE5F0rB,EAAsB5xB,WAAW+xC,GAEjC,MAAM9W,EAAqB,IAAI,GAAmBmW,EAAc,CAAE1+B,OAAQ,IAQ1E,OAPAuoB,EAAmBrM,QAAU,IAAMqM,EAAmBj7B,aACtDi7B,EAAmB17B,QAAQ6xC,EAAan+B,aACxCgoB,EAAmBh6B,cACb8wC,EAAyB9rC,OAAOnG,QACpB/E,IAAdiL,IACA0rC,EAA2BG,EAA4B5qC,EAAWjB,IAE/D,CAAEi1B,qBAAoBh0B,YAAW6qC,6BAA4BC,2BAA0B,IAElG,MAAMI,EAAShI,EAAYiI,YAC3Bb,EAAiB,KACbtlC,IACAilC,EAAY72B,cAAc,IAAIC,WAAW,QAAS,CAAEvZ,MAAOyG,MAAoC,EAEnG2iC,EAAY3pC,iBAAiB,WAAY+wC,GACzCpH,EAAY3pC,iBAAiB,cAAe+wC,GAC5CC,EAAaa,aAAY,KACrB,MAAMC,EAAgBnI,EAAYiI,YAC7BE,EAAct3C,SAAWm3C,EAAOn3C,SAAUs3C,EAAcz8B,MAAK,CAAC08B,EAAO13C,IAAU03C,IAAUJ,EAAOt3C,MAC9E,OAAnB02C,GACAA,GACJ,GACD,IACP,EACAtlC,OACH,EOrI2BumC,CAAmChC,GAAiBhpC,GG/BjD,KACnC,IACI,OAAO,IAAIC,aAAa,GAAI,oBAChC,CACA,MAAOzC,GAIH,OAFAA,EAAIN,KAAO,GACXM,EAAI9C,KAAO,oBACJ8C,CACX,IHsB6I0C,GAC3I+qC,GIhCuC,CAACtC,GACnC,CAACC,EAAU19B,KACd,MAAM1X,EAASm1C,EAA8BC,EAAU19B,GACvD,GAAe,OAAX1X,EACA,OAAOA,EAEX,MAAM03C,EAAsBhgC,EAASvY,KAAK2B,OAAOd,EAAS,GAAK,GAC/D,GAAI03C,EAAsB13C,EAASo1C,EAAS73B,WACxC,OAAO,KAGX,IAAIpf,EADkBi3C,EAASE,SAASoC,IACV,GAAM,EAAK13C,EAAS,GAAO,EACzD,IAAK,IAAIyC,EAAI,EAAGA,EAAIzC,EAAQyC,GAAK,EAC7BtE,GAASA,GAAS,GAAKi3C,EAASE,SAASoC,EAAsBj1C,GAEnE,MAAO,CAAEzC,SAAQ7B,QAAO,EJiBAw5C,CAA8BxC,IACxDyC,GKjCkC,CAACH,GAC9B,CAACrC,EAAU19B,EAAQpZ,EAAM6W,EAAe,KAC3C,MAAM0iC,EAAiBJ,EAAwBrC,EAAU19B,GACzD,GAAuB,OAAnBmgC,EACA,OAAOA,EAEX,MAAM,OAAE73C,EAAM,MAAE7B,GAAU05C,EAC1B,GAAa,WAATv5C,EACA,MAAO,CAAEw5C,QAAS,KAAM93C,UAE5B,GAAI0X,EAAS1X,EAAS7B,EAAQi3C,EAAS73B,WACnC,OAAO,KAEX,GAAa,WAATjf,EAAmB,CACnB,MAAMy5C,GAAmB55C,EAAQ4X,aAAa0H,kBAAoB,GAAKtI,EACjE2iC,EAAU9kC,MAAMW,KAAK,CAAE3T,OAAQmV,IAAgB,IAAM,IAAIY,aAAagiC,KAC5E,IAAK,IAAIt1C,EAAI,EAAGA,EAAIs1C,EAAiBt1C,GAAK,EAAG,CACzC,MAAMu1C,EAAgBv1C,EAAI0S,EAAe,EACzC,IAAK,IAAI4I,EAAI,EAAGA,EAAI5I,EAAc4I,GAAK,EACnC+5B,EAAQ/5B,GAAGtb,GAAK2yC,EAAS6C,WAAWvgC,EAAS1X,GAAUg4C,EAAgBj6B,GAAKhI,aAAa0H,mBAAmB,EAEpH,CACA,MAAO,CAAEq6B,UAAS93C,OAAQA,EAAS7B,EACvC,CACA,MAAO,CAAE25C,QAAS,KAAM93C,OAAQA,EAAS7B,EAAO,ELS7B+5C,CAAyBT,IAC9CU,GMlC+B,CAACV,GAC3B,CAACrC,EAAU19B,KACd,MAAMmgC,EAAiBJ,EAAwBrC,EAAU19B,GACzD,GAAuB,OAAnBmgC,EACA,OAAOA,EAEX,MAAM,OAAE73C,EAAM,MAAE7B,GAAU05C,EAC1B,OAAc,KAAV15C,EACO,CAAE6B,SAAQ1B,KAAM,UAEb,KAAVH,GACU,KAAVA,GACU,WAAVA,GACU,YAAVA,GACU,YAAVA,GACU,YAAVA,GACU,YAAVA,EACO,CAAE6B,SAAQ1B,KAAM,UAEpB,CAAE0B,SAAQ1B,KAAM,UAAW,ENelB85C,CAAsBX,IACxCY,GOnC+B,EAACT,EAAoBO,IAC/C,CAAC/C,EAAUkD,EAAanjC,KAC3B,MAAMojC,EAAW,GACjB,IAAIC,EAAqBF,EACrB5gC,EAAS,EACb,KAAOA,EAAS09B,EAAS73B,YACrB,GAA2B,OAAvBi7B,EAA6B,CAC7B,MAAMC,EAAgBN,EAAgB/C,EAAU19B,GAChD,GAAsB,OAAlB+gC,EACA,MAEJ,MAAM,OAAEz4C,EAAM,KAAE1B,GAASm6C,EACzBD,EAAqBl6C,EACrBoZ,GAAU1X,CACd,KACK,CACD,MAAM04C,EAAmBd,EAAmBxC,EAAU19B,EAAQ8gC,EAAoBrjC,GAClF,GAAyB,OAArBujC,EACA,MAEJ,MAAM,QAAEZ,EAAO,OAAE93C,GAAW04C,EAC5BF,EAAqB,KACrB9gC,GAAU1X,EACM,OAAZ83C,GACAS,EAASn2C,KAAK01C,EAEtB,CAEJ,MAAO,CAAES,WAAUC,qBAAoB9gC,SAAQ,EPO/BihC,CAAsBf,GAAoBO,IAC5DS,GFjC2C,EAACpD,EAAiBhpC,EAAgCE,EAAyB2rC,EAAiBZ,IAClI,CAACvB,EAAa2C,EAAgC1J,EAAa/iC,KAC9D,MAAM6qC,EAAc9H,EAAYG,iBAC1B+G,EAAuB,GAEvBlhC,EAAsC,IAAvB8hC,EAAYj3C,YAC3BD,EACAk3C,EAAY,GAAGd,cAAchhC,aAC7B2jC,EAAsB,IAAID,EAA+B1J,EAAa,CAAE/iC,SAAU,0BAClFlB,EAAoC,IAAvB+rC,EAAYj3C,YAAeD,EAAYk3C,EAAY,GAAGd,cAAcjrC,WACvF,IAAIwrC,EAA2B,KAC3BqC,EAAgB,OACpB,MAAMnC,EAA8B1qC,IAChCgqC,EAAY72B,cAAcm2B,EAAgB,gBAAiB,CAAE/vC,KAAM,IAAI6F,KAAKY,EAAc,CAAE5N,KAAM8N,MAAe,EAE/GyqC,EAA8BpyC,MAAOwH,EAAWjB,KAClD,MAAMkB,QAAqBpB,EAAOmB,EAAWjB,GACX,aAA9B8tC,EAAoBloC,MACpBylC,EAAqBj0C,QAAQ8J,IAG7B0qC,EAA2B1qC,GAC3BwqC,EAA2BG,EAA4B5qC,EAAWjB,GACtE,EAEEiG,EAAO,KACyB,aAA9B6nC,EAAoBloC,QAGS,OAA7B8lC,IACAA,EAAyBh1B,OAAM,SAG/Bg1B,EAA2B,MAE/BqC,IACAA,EAAgB,OAChBD,EAAoB7nC,OAAM,EAQ9B,OANA6nC,EAAoBtzC,iBAAiB,SAAS,KAC1CyL,IAEAilC,EAAY72B,cAAc,IAAIC,WAAW,QAAS,CAAEvZ,MAAOyG,MAAoC,IAEnGssC,EAAoBtzC,iBAAiB,SAAS,IAAM0wC,EAAY72B,cAAc,IAAIw2B,MAAM,YACjF,CACH,YAAIzpC,GACA,OAAOA,CACX,EACA,SAAIwE,GACA,OAAOkoC,EAAoBloC,KAC/B,EACA,KAAAE,GACI,OAAOgoC,EAAoBhoC,OAC/B,EACA,MAAAE,GACI,OAAO8nC,EAAoB9nC,QAC/B,EACA,KAAA/K,CAAM+E,GAKF,GAAImkC,EAAY6H,iBAAiBh3C,OAAS,EACtC,MAAM0M,IAEV,GAAkC,aAA9BosC,EAAoBloC,MAAsB,CAC1C,QAAmB7Q,IAAfmL,EACA,MAAM,IAAIjJ,MAAM,kCAEpB,IAAI+2C,GAAc,EACdhyB,GAAY,EAEZiyB,EAAqB,EACrBC,EAA8C/sC,EAAYC,EAAUlB,GACxE6tC,EAAgB,KACZ/xB,GAAY,CAAI,EAEpB,MAAMvX,EAAsBX,EAAGgqC,EAAqB,gBAAxBhqC,EAAyC,EAAGrJ,WACpEwzC,GAAsB,EACtBC,EAA8CA,EAA4C5wB,MAAK7jB,OAAS2wC,WAAW,KAAMkD,cAAc,KAAMrsC,YAAWnH,WACpJ,MAAM8a,QAAoBna,EAAKma,cAC/Bq5B,GAAsB,EACtB,MAAME,EAA+B,OAAb/D,EAClB,IAAI,GAAAgE,oBAAoB,CAACx5B,IACzB,IAAI,GAAAw5B,oBAAoB,IAAIhE,EAASiE,QAASz5B,GAAcw1B,EAASkE,YAC3E,IAAKN,GAA6C,cAA9BF,EAAoBloC,QAA0BoW,EAAW,CACzE,MAAM6wB,EAAiBJ,EAAwB0B,EAAiB,GAChE,GAAuB,OAAnBtB,EACA,MAAO,CAAEzC,SAAU+D,EAAiBb,cAAarsC,YAAWnH,QAEhE,MAAM,MAAE3G,GAAU05C,EAClB,GAAc,YAAV15C,EACA,MAAO,CAAEi3C,WAAUkD,cAAarsC,YAAWnH,QAE/Ck0C,GAAc,CAClB,CACA,MAAM,mBAAER,EAAkB,OAAE9gC,EAAM,SAAE6gC,GAAaF,EAAgBc,EAAiBb,EAAanjC,GACzFokC,EAAoB7hC,EAASyhC,EAAgB57B,WAC7C,IAAI,GAAA67B,oBAAoBD,EAAgBE,QAASF,EAAgBG,WAAa5hC,GAC9E,KAYN,OAXA6gC,EAAS7jC,SAASojC,GAAYhzC,EAAK0B,YAAYsxC,EAASA,EAAQ/vC,KAAI,EAAGqD,YAAaA,OACzD,IAAvB6tC,GAA2D,aAA9BH,EAAoBloC,QAAwBoW,IACzElc,EAAOmB,EAAW,MAAMqc,MAAMpc,IAC1B0qC,EAA2B,IAAIP,KAAyBnqC,IACxDmqC,EAAqBr2C,OAAS,EAC9Bk2C,EAAY72B,cAAc,IAAIw2B,MAAM,QAAQ,IAEhD/wC,EAAK0B,YAAY,IACjB1B,EAAKib,QACLtQ,KAEG,CAAE2lC,SAAUmE,EAAmBjB,YAAaE,EAAoBvsC,YAAWnH,OAAM,GAC1F,SAEY/E,IAAdiL,GACAkuC,EAA4C5wB,MAAK,EAAGrc,eAAiByqC,EAA2BG,EAA4B5qC,EAAWjB,IAE/I,CACA8tC,EAAoB7yC,MAAM,IAC9B,EACAgL,OACH,EEzF0BuoC,CAAkChE,GAAiBhpC,EAAgCE,EAAyB2rC,GAAiBZ,IAC1JgC,GQrCkC,CAACzsC,GAC9B,KACH,GAAe,OAAXA,EACA,MAAM,IAAI/K,MAAM,8CAEpB,OAAO+K,EAAO2+B,SAASE,cAAc,IAAI,ERgCvB6N,CAAyB,IAC7Cb,GStC8C,CAAC7rC,GAClC,OAAXA,QAG4BjN,IAAzBiN,EAAO2sC,cAFH,KAEwC3sC,EAAO2sC,cTkCvBC,CAAqC,IACtEC,GUvC0C,EAACrtC,EAAgCE,IACtE,CAACmsC,EAAgCjK,EAAQkL,KAC5C,MAAMC,EAAgB,GAChBC,EAAyB,IAAI/1C,QAC7Bg2C,EAAiB,IAAIh2C,QACrB60C,EAAsB,IAAID,EAA+BjK,EAAQkL,GACjEI,EAAgB,IAAIj2C,QAC1B,IAAIkY,GAAW,EACwB,IAAE3W,EA0DH6Z,EAaM5P,EA0BdxJ,EAe9B,OAhHA6yC,EAAoBtzC,kBAAqBA,EAyDtCszC,EAAoBtzC,iBAxDZ,CAAClH,EAAMiR,EAAUnF,KACpB,IAAI2nC,EAAuBxiC,EAqD3B,MApDwB,mBAAbA,IACM,kBAATjR,GAEAyzC,EAAwBviC,IACpBud,YAAW,KACP,GAAI5Q,GAA0C,aAA9B28B,EAAoBloC,MAChCmpC,EAAc33C,KAAKoN,EAAM/J,UAExB,CACD,GAAIs0C,EAAc/5C,OAAS,EAAG,CAC1B,MAAMqL,EAAOmE,EAAM/J,KACnBmB,OAAO4c,eAAehU,EAAO,OAAQ,CACjCrR,MAAO,IAAImN,KAAK,IAAIyuC,EAAe1uC,GAAO,CAAE/M,KAAM+M,EAAK/M,SAE3Dy7C,EAAc/5C,OAAS,CAC3B,CACAuP,EAAS/K,KAAKs0C,EAAqBtpC,EACvC,IACF,EAENwqC,EAAuBj1C,IAAIwK,EAAUwiC,IAEvB,UAATzzC,GAELyzC,EAAwBviC,IAEpB,QAAoBzP,IAAhByP,EAAMzJ,MACNwJ,EAAS/K,KAAKs0C,EAAqB,IAAIx5B,WAAW,QAAS,CAAEvZ,MAAOyG,YAGnE,GAAyB,iBAArBgD,EAAMzJ,MAAMmB,KAAyB,CAC1C,MAAMxB,EAAU8J,EAAMzJ,MAAML,QAC5B6J,EAAS/K,KAAKs0C,EAAqB,IAAIx5B,WAAW,QAAS,CAAEvZ,MAAOyG,EAA+B9G,KACvG,MACS8J,aAAiB8P,WACtB/P,EAAS/K,KAAKs0C,EAAqBtpC,GAGnCD,EAAS/K,KAAKs0C,EAAqB,IAAIx5B,WAAW,QAAS,CAAEvZ,MAAOyJ,EAAMzJ,QAC9E,EAEJk0C,EAAel1C,IAAIwK,EAAUwiC,IAEf,SAATzzC,IAELyzC,EAAwBviC,IACpB2M,GAAW,EACX4Q,YAAW,IAAMxd,EAAS/K,KAAKs0C,EAAqBtpC,IAAO,EAE/D0qC,EAAcn1C,IAAIwK,EAAUwiC,KAG7BvsC,EAAiBhB,KAAKs0C,EAAqBx6C,EAAMyzC,EAAsB3nC,EAAQ,GAG9F0uC,EAAoBz5B,eAAkBA,EAYnCy5B,EAAoBz5B,cAVX7P,IACJ,IAAI2qC,EACJptB,YAAW,KACPotB,EAAYh+B,EACZA,GAAW,CAAK,IAEpB,MAAMX,EAAc6D,EAAc7a,KAAKs0C,EAAqBtpC,GAE5D,OADAud,YAAW,IAAO5Q,EAAWg+B,IACtB3+B,CAAW,GAG1Bs9B,EAAoBrpC,qBAAwBA,EAyBzCqpC,EAAoBrpC,oBAxBZ,CAACnR,EAAMiR,EAAUnF,KACpB,IAAI2nC,EAAuBxiC,EAC3B,GAAwB,mBAAbA,EACP,GAAa,kBAATjR,EAA0B,CAC1B,MAAM87C,EAAwBJ,EAAuB/0C,IAAIsK,QAC3BxP,IAA1Bq6C,IACArI,EAAuBqI,EAE/B,MACK,GAAa,UAAT97C,EAAkB,CACvB,MAAM+7C,EAAgBJ,EAAeh1C,IAAIsK,QACnBxP,IAAlBs6C,IACAtI,EAAuBsI,EAE/B,MACK,GAAa,SAAT/7C,EAAiB,CACtB,MAAMg8C,EAAeJ,EAAcj1C,IAAIsK,QAClBxP,IAAjBu6C,IACAvI,EAAuBuI,EAE/B,CAEJ,OAAO7qC,EAAoBjL,KAAKs0C,EAAqBx6C,EAAMyzC,EAAsB3nC,EAAQ,GAGjG0uC,EAAoB7yC,OAAUA,EAc3B6yC,EAAoB7yC,MAbX+E,IAKJ,QAAsCjL,IAAlC+5C,EAAqB1tC,UACrB0tC,EAAqB1tC,SAASmuC,WAAW,WACzC3L,EAAOoI,iBAAiBh3C,OAAS,EACjC,MAAM0M,IAGV,OADAyP,OAAyBpc,IAAdiL,OACUjL,IAAdiL,EAA0B/E,EAAMzB,KAAKs0C,GAAuB7yC,EAAMzB,KAAKs0C,EAAqB9tC,EAAU,GAG9G8tC,CAAmB,EVjFA0B,CAAiChuC,EAAgCE,GAC7F+tC,GWxCwC,EAACZ,EAA2BntC,EAAyBupC,EAA6B2C,EAA4BrD,EAAgB/qB,EAAwBquB,IACzL,cAA4BruB,EAC/B,WAAA5N,CAAYgyB,EAAQxkC,EAAU,CAAC,GAC3B,MAAM,SAAEgC,GAAahC,EACrB,GAAuC,OAAnCyuC,SAEc94C,IAAbqM,QACuDrM,IAAnD84C,EAA+B6B,iBAC5B7B,EAA+B6B,gBAAgBtuC,IAAa,CACpE,MAAMuuC,EAAwBd,EAA0BhB,EAAgCjK,EAAQxkC,GAChG2hB,MAAM4uB,GACNt5C,KAAKu5C,uBAAyBD,CAClC,KACK,SAAiB56C,IAAbqM,IAA0BmpC,EAAe16B,MAAMggC,GAAUA,EAAMpwC,KAAK2B,KAiBzE,MAHuC,OAAnCysC,GACAgB,EAA0BhB,EAAgCjK,EAAQxkC,GAEhEsC,IAhBNqf,QAEuC,OAAnC8sB,QACmD94C,IAAnD84C,EAA+B6B,iBAC/B7B,EAA+B6B,gBAAgB,yBAC/Cr5C,KAAKu5C,uBAAyBhC,EAA2Bv3C,KAAMw3C,EAAgCjK,EAAQxiC,GAGvG/K,KAAKu5C,uBAAyB3E,EAA4B50C,KAAMutC,EAAQxiC,EAShF,CACA/K,KAAKy5C,iBAAmB,KACxBz5C,KAAK05C,SAAW,KAChB15C,KAAK25C,SAAW,KAChB35C,KAAK45C,UAAY,KACjB55C,KAAK65C,SAAW,KAChB75C,KAAK85C,QAAU,IACnB,CACA,YAAI/uC,GACA,OAAO/K,KAAKu5C,uBAAuBxuC,QACvC,CACA,mBAAIgvC,GACA,OAAiC,OAA1B/5C,KAAKy5C,iBAA4Bz5C,KAAKy5C,iBAAmBz5C,KAAKy5C,iBAAiB,EAC1F,CACA,mBAAIM,CAAgBj9C,GAIhB,GAH8B,OAA1BkD,KAAKy5C,kBACLz5C,KAAKoO,oBAAoB,gBAAiBpO,KAAKy5C,iBAAiB,IAE/C,mBAAV38C,EAAsB,CAC7B,MAAMk9C,EAAgBl9C,EAAM4P,KAAK1M,MACjCA,KAAKmE,iBAAiB,gBAAiB61C,GACvCh6C,KAAKy5C,iBAAmB,CAAC38C,EAAOk9C,EACpC,MAEIh6C,KAAKy5C,iBAAmB,IAEhC,CACA,WAAI/O,GACA,OAAyB,OAAlB1qC,KAAK05C,SAAoB15C,KAAK05C,SAAW15C,KAAK05C,SAAS,EAClE,CACA,WAAIhP,CAAQ5tC,GAIR,GAHsB,OAAlBkD,KAAK05C,UACL15C,KAAKoO,oBAAoB,QAASpO,KAAK05C,SAAS,IAE/B,mBAAV58C,EAAsB,CAC7B,MAAMk9C,EAAgBl9C,EAAM4P,KAAK1M,MACjCA,KAAKmE,iBAAiB,QAAS61C,GAC/Bh6C,KAAK05C,SAAW,CAAC58C,EAAOk9C,EAC5B,MAEIh6C,KAAK05C,SAAW,IAExB,CACA,WAAIO,GACA,OAAyB,OAAlBj6C,KAAK25C,SAAoB35C,KAAK25C,SAAW35C,KAAK25C,SAAS,EAClE,CACA,WAAIM,CAAQn9C,GAIR,GAHsB,OAAlBkD,KAAK25C,UACL35C,KAAKoO,oBAAoB,QAASpO,KAAK25C,SAAS,IAE/B,mBAAV78C,EAAsB,CAC7B,MAAMk9C,EAAgBl9C,EAAM4P,KAAK1M,MACjCA,KAAKmE,iBAAiB,QAAS61C,GAC/Bh6C,KAAK25C,SAAW,CAAC78C,EAAOk9C,EAC5B,MAEIh6C,KAAK25C,SAAW,IAExB,CACA,YAAIO,GACA,OAA0B,OAAnBl6C,KAAK45C,UAAqB55C,KAAK45C,UAAY55C,KAAK45C,UAAU,EACrE,CACA,YAAIM,CAASp9C,GAIT,GAHuB,OAAnBkD,KAAK45C,WACL55C,KAAKoO,oBAAoB,SAAUpO,KAAK45C,UAAU,IAEjC,mBAAV98C,EAAsB,CAC7B,MAAMk9C,EAAgBl9C,EAAM4P,KAAK1M,MACjCA,KAAKmE,iBAAiB,SAAU61C,GAChCh6C,KAAK45C,UAAY,CAAC98C,EAAOk9C,EAC7B,MAEIh6C,KAAK45C,UAAY,IAEzB,CACA,WAAIO,GACA,OAAyB,OAAlBn6C,KAAK65C,SAAoB75C,KAAK65C,SAAW75C,KAAK65C,SAAS,EAClE,CACA,WAAIM,CAAQr9C,GAIR,GAHsB,OAAlBkD,KAAK65C,UACL75C,KAAKoO,oBAAoB,QAASpO,KAAK65C,SAAS,IAE/B,mBAAV/8C,EAAsB,CAC7B,MAAMk9C,EAAgBl9C,EAAM4P,KAAK1M,MACjCA,KAAKmE,iBAAiB,QAAS61C,GAC/Bh6C,KAAK65C,SAAW,CAAC/8C,EAAOk9C,EAC5B,MAEIh6C,KAAK65C,SAAW,IAExB,CACA,UAAIO,GACA,OAAwB,OAAjBp6C,KAAK85C,QAAmB95C,KAAK85C,QAAU95C,KAAK85C,QAAQ,EAC/D,CACA,UAAIM,CAAOt9C,GAIP,GAHqB,OAAjBkD,KAAK85C,SACL95C,KAAKoO,oBAAoB,OAAQpO,KAAK85C,QAAQ,IAE7B,mBAAVh9C,EAAsB,CAC7B,MAAMk9C,EAAgBl9C,EAAM4P,KAAK1M,MACjCA,KAAKmE,iBAAiB,OAAQ61C,GAC9Bh6C,KAAK85C,QAAU,CAACh9C,EAAOk9C,EAC3B,MAEIh6C,KAAK85C,QAAU,IAEvB,CACA,SAAIvqC,GACA,OAAOvP,KAAKu5C,uBAAuBhqC,KACvC,CACA,KAAAE,GACI,OAAOzP,KAAKu5C,uBAAuB9pC,OACvC,CACA,MAAAE,GACI,OAAO3P,KAAKu5C,uBAAuB5pC,QACvC,CACA,KAAA/K,CAAM+E,GACF,OAAO3J,KAAKu5C,uBAAuB30C,MAAM+E,EAC7C,CACA,IAAAiG,GACI,OAAO5P,KAAKu5C,uBAAuB3pC,MACvC,CACA,sBAAOypC,CAAgBtuC,GACnB,OAA4C,OAAnCysC,QAE8C94C,IAAnD84C,EAA+B6B,iBAC/B7B,EAA+B6B,gBAAgBtuC,IAC/CmpC,EAAe16B,MAAMggC,GAAUA,EAAMpwC,KAAK2B,IAClD,GXvHyBsvC,CAA+B7B,GAA2BntC,EAAyBupC,GAA6B2C,GAA4BrD,GYxCjI,EAACkE,EAAmBxyB,IACrD,MACH,WAAArK,CAAY++B,EAAoB,MAC5Bt6C,KAAKqpB,WAAa,IAAIzmB,QACtB5C,KAAKopB,mBAA2C,OAAtBkxB,EAA6BlC,IAAsBkC,CACjF,CACA,gBAAAn2C,CAAiBlH,EAAMiR,EAAUnF,GAC7B,GAAiB,OAAbmF,EAAmB,CACnB,IAAIob,EAAuBtpB,KAAKqpB,WAAWzlB,IAAIsK,QAClBxP,IAAzB4qB,IACAA,EAAuB1D,EAAkB5lB,KAAMkO,GACvB,mBAAbA,GACPlO,KAAKqpB,WAAW3lB,IAAIwK,EAAUob,IAGtCtpB,KAAKopB,mBAAmBjlB,iBAAiBlH,EAAMqsB,EAAsBvgB,EACzE,CACJ,CACA,aAAAiV,CAAc7P,GACV,OAAOnO,KAAKopB,mBAAmBpL,cAAc7P,EACjD,CACA,mBAAAC,CAAoBnR,EAAMiR,EAAUnF,GAChC,MAAMugB,EAAoC,OAAbpb,OAAoBxP,EAAYsB,KAAKqpB,WAAWzlB,IAAIsK,GACjFlO,KAAKopB,mBAAmBhb,oBAAoBnR,OAA+ByB,IAAzB4qB,EAAqC,KAAOA,EAAsBvgB,EACxH,GZgBqLwxC,CAA6BnC,IaxCzL,CAACx6C,EAAQ0V,IAC9BnF,IACJ,MAAM0X,EAAa,CAAE/oB,MAAOc,GAK5B,OAJA2H,OAAOiK,iBAAiBrB,EAAO,CAC3B2X,cAAeD,EACfjoB,OAAQioB,IAEiB,mBAAlBvS,EACAA,EAAcnQ,KAAKvF,EAAQuQ,GAE/BmF,EAAcyS,YAAY5iB,KAAKvF,EAAQuQ,EAAM,Ib8BqMqpC,IAEpP,GAAc,Ic1Ca,CAAC7rC,GACtB,OAAXA,QACuBjN,IAAvBiN,EAAO0iC,kBAImB3vC,IAAzBiN,EAAO2sC,oBAAwE55C,IAAzCiN,EAAO2sC,cAAce,gBA8BzDp0C,QAAQT,SAAQ,GAzBZ,IAAIS,SAAST,IAEhB,QAA6B9F,IAAzBiN,EAAO2sC,cACP,OAAO9zC,GAAQ,GAGnB,MAAMg2C,EAAgBlQ,SAASE,cAAc,UAG7C,GADAgQ,EAAcC,WAAW,MACkB,mBAAhCD,EAAcE,cACrB,OAAOl2C,GAAQ,GAEnB,MAAMspC,EAAc0M,EAAcE,gBAC5B3vC,EAAW,aACjB,IACI,MAAM4vC,EAAgB,IAAIhvC,EAAO2sC,cAAcxK,EAAa,CAAE/iC,aAC9D4vC,EAAcx2C,iBAAiB,iBAAiB,EAAGC,UAAWI,EAAQJ,EAAKnH,OAAS8N,KACpF4vC,EAAc/1C,QACd8mB,YAAW,IAAMivB,EAAc/qC,QAAQ,GAC3C,CACA,MAAOjH,GACHnE,EAAqB,sBAAbmE,EAAI9C,KAChB,KdSqB,CAAyB,IAC7C,GAAWzC,MAAOK,IAC3BywC,GAAenzC,WAAW,EAAM0C,GAAM,uBexCjC,SAAWhH,GAAW,aAE3B,IAAIm+C,EAAwB,SAA+B11C,GACzD,OAAO,SAAUxB,GACf,IAAIm3C,EAAS31C,EAAqBxB,GAElC,OADAA,EAAI0P,IAAIynC,GACDA,CACT,CACF,EAEIC,EAAc,SAAqBC,GACrC,OAAO,SAAUC,EAAYC,GAE3B,OADAF,EAAkBr3C,IAAIs3C,EAAYC,GAC3BA,CACT,CACF,EAMIC,OAA+Cx8C,IAA5ByyB,OAAO+pB,iBAAiC,iBAAmB/pB,OAAO+pB,iBACrFC,EAAkC,UAClCC,EAA+D,EAAlCD,EAC7BE,EAA6B,SAAoCC,EAAOP,GAC1E,OAAO,SAAUC,GACf,IAAIO,EAAaR,EAAkBn3C,IAAIo3C,GASnCC,OAA4Bv8C,IAAf68C,EAA2BP,EAAWhoC,KAAOuoC,EAAaH,EAA6BG,EAAa,EAAI,EACzH,IAAKP,EAAWh3C,IAAIi3C,GAClB,OAAOK,EAAMN,EAAYC,GAQ3B,GAAID,EAAWhoC,KAAOmoC,EAAiC,CACrD,KAAOH,EAAWh3C,IAAIi3C,IACpBA,EAAan9C,KAAK2B,MAAM3B,KAAK09C,SAAWJ,GAE1C,OAAOE,EAAMN,EAAYC,EAC3B,CAEA,GAAID,EAAWhoC,KAAOkoC,EACpB,MAAM,IAAIt6C,MAAM,kGAGlB,KAAOo6C,EAAWh3C,IAAIi3C,IACpBA,EAAan9C,KAAK2B,MAAM3B,KAAK09C,SAAWN,GAE1C,OAAOI,EAAMN,EAAYC,EAC3B,CACF,EAEIQ,EAAuB,IAAI74C,QAC3B04C,EAAQR,EAAYW,GACpBv2C,EAAuBm2C,EAA2BC,EAAOG,GACzDzwC,EAAkB4vC,EAAsB11C,GAE5CzI,EAAQuO,gBAAkBA,EAC1BvO,EAAQyI,qBAAuBA,CAElC,CA1EkExC,CAAQjG,+EC8F3E,UA3FkBi/C,KAEd,MAAM,EAAC/D,EAAY,EAACgE,IAAkBC,EAAAA,EAAAA,WAAS,GA8B/C,OACIC,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAG,CACAC,MAAM,eAEVF,EAAAA,cAAA,YACIA,EAAAA,cAAA,QAAM/Q,KAAK,0DAA0DkR,IAAI,eAGzEH,EAAAA,cAAA,OAAKI,UAAU,OACXJ,EAAAA,cAAA,OAAKI,UAAU,qBACXJ,EAAAA,cAAA,OAAKI,UAAU,gBACXJ,EAAAA,cAAA,MAAII,UAAU,wBACTtE,EACKkE,EAAAA,cAAA,OAAKI,UAAU,SAAQ,IAACJ,EAAAA,cAAA,SAAG,iBAE7BA,EAAAA,cAAA,OAAKI,UAAU,SACXJ,EAAAA,cAAA,SAAG,eAEHA,EAAAA,cAAA,SAAG,2BAOvBA,EAAAA,cAACK,EAAAA,mBAAkB,CACfC,OAAK,EACL5zC,OAAQ5K,IAAA,IAAC,eAAEy+C,EAAc,cAAE1E,EAAa,aAAE2E,GAAc1+C,EAAA,OAEpDk+C,EAAAA,cAAA,OAAKI,UAAU,qCACXJ,EAAAA,cAAA,UAAQI,UAAS,eAAgBtE,EAAc,UAAY,IAAMrzC,GAAG,OAChEu3C,EAAAA,cAAA,QAAMS,QAASA,KACXX,GAAgBhE,GAEG,GAAfA,EACAyE,KAEA1E,IAnExCt0C,eAA4Bm5C,GACxBC,QAAQC,IAAIF,GAEZ,MAAMG,QAAkBvR,MAAMoR,GAAUt1B,MAAM01B,GAAMA,EAAE3yC,SACtDwyC,QAAQC,IAAIC,GACZ,MAAME,EAAY,IAAIC,KAAK,CAACH,GAAY,YAAa,CAAEz/C,KAAM,cAG7D,IAAI6/C,EAAe,IAAIC,SACvBD,EAAaE,OAAO,gBAAiBJ,GACrCE,EAAaE,OAAO,aAAc,GAiBtC,CAyCwCC,CAAaZ,GACjB,EACDJ,UAAU,kBAAiB,QAEjCI,GACGR,EAAAA,cAAA,SAAOqB,QAAM,EAACtS,IAAKyR,EAAcc,UAAQ,EAACC,UAAQ,IAGpD,MAQvB,oBCjEX,IAAIz3C,EAAoB,SAAS03C,GAC7B,IAAIj8C,EAAGk8C,EAGHjsC,EAAQ,MAAMlK,KAAKk2C,GACvB,IAAIhsC,EAGA,MAAO,KAEX,IAAIksC,GAJAD,EAAOjsC,EAAM,IAIC/H,cAEdk0C,EAAY,CAAC,SAAU,OAAQ,QACnC,IAAKp8C,KAAKo8C,EACN,GAAoC,GAAhCD,EAAOE,QAAQD,EAAUp8C,IACzB,MAAO,KAIf,GAAqB,GAAjBm8C,EAAO5+C,OACP,MAAI,eAAe8+C,QAAQF,IAAW,EAC3B,KAEA,IAIf,GAAID,EAAKjsC,MAAM,oGACX,MAAO,KAIX,IAAIqsC,EAAU,CAAC,SAAU,WAAY,kBAAmB,yBACxD,IAAKt8C,EAAI,EAAGA,EAAIs8C,EAAQ/+C,OAAQyC,IAC5B,GAAIm8C,EAAOlsC,MAAMqsC,EAAQt8C,IACrB,MAAO,IAIf,OAAIk8C,EAAKjsC,MAAM,gBACJ,IAEFisC,GAAQA,EAAKl3C,cACd,eAAeq3C,QAAQF,EAAO,KAAO,EAC9B,KAEA,IAIX,QAAQE,QAAQF,EAAO,KAAO,GAI9BA,EAAOlsC,MAAM,2CAHN,KAMJ,GACX,OAEkE,IAAnBxI,EAAOpM,QAClDoM,EAAOpM,QAAUkJ,EAEjBgG,OAAOhG,kBAAoBA,yBCrFtB,SAAWlJ,EAASC,EAAgBC,EAAiBC,GAAgB,aAE1E,SAAS+gD,EAAuBC,GAAK,OAAOA,GAAkB,iBAANA,GAAkB,YAAaA,EAAIA,EAAI,CAAE,QAAWA,EAAK,CAEjH,IAAIC,EAAuCF,EAAsBjhD,GAC7DohD,EAAwCH,EAAsBhhD,GAC9DohD,EAAqCJ,EAAsB/gD,GAE/D,SAASohD,EAA2BC,EAAGC,GAAkB,IAAIC,EAAuB,oBAAX99C,QAA0B49C,EAAE59C,OAAOC,WAAa29C,EAAE,cAAe,IAAKE,EAAI,CAAE,GAAIxsC,MAAMC,QAAQqsC,KAAOE,EAAKC,EAA4BH,KAAOC,GAAkBD,GAAyB,iBAAbA,EAAEt/C,OAAqB,CAAMw/C,IAAIF,EAAIE,GAAI,IAAI/8C,EAAI,EAAOi9C,EAAI,WAAc,EAAG,MAAO,CAAEC,EAAGD,EAAGE,EAAG,WAAe,OAAIn9C,GAAK68C,EAAEt/C,OAAe,CAAE6/C,MAAM,GAAe,CAAEA,MAAM,EAAO1hD,MAAOmhD,EAAE78C,KAAQ,EAAGw8C,EAAG,SAAWa,GAAM,MAAMA,CAAI,EAAGC,EAAGL,EAAK,CAAE,MAAM,IAAIr1C,UAAU,wIAA0I,CAAE,IAA6CL,EAAzCg2C,GAAmB,EAAMC,GAAS,EAAY,MAAO,CAAEN,EAAG,WAAeH,EAAKA,EAAGh7C,KAAK86C,EAAI,EAAGM,EAAG,WAAe,IAAIM,EAAOV,EAAG9xC,OAAsC,OAA9BsyC,EAAmBE,EAAKL,KAAaK,CAAM,EAAGjB,EAAG,SAAWkB,GAAOF,GAAS,EAAMj2C,EAAMm2C,CAAK,EAAGJ,EAAG,WAAe,IAAWC,GAAoC,MAAhBR,EAAW,QAAWA,EAAW,QAAK,CAAE,QAAU,GAAIS,EAAQ,MAAMj2C,CAAK,CAAE,EAAK,CAC3+B,SAASy1C,EAA4BH,EAAGc,GAAU,GAAKd,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAOe,EAAkBf,EAAGc,GAAS,IAAIR,EAAIh5C,OAAOiH,UAAUgF,SAASrO,KAAK86C,GAAGv9C,MAAM,GAAI,GAAiE,MAAnD,WAAN69C,GAAkBN,EAAE1iC,cAAagjC,EAAIN,EAAE1iC,YAAY1V,MAAgB,QAAN04C,GAAqB,QAANA,EAAoB5sC,MAAMW,KAAK2rC,GAAc,cAANM,GAAqB,2CAA2Cn1C,KAAKm1C,GAAWS,EAAkBf,EAAGc,QAAzG,CAA7O,CAA+V,CAC/Z,SAASC,EAAkBC,EAAKC,IAAkB,MAAPA,GAAeA,EAAMD,EAAItgD,UAAQugD,EAAMD,EAAItgD,QAAQ,IAAK,IAAIyC,EAAI,EAAG+9C,EAAO,IAAIxtC,MAAMutC,GAAM99C,EAAI89C,EAAK99C,IAAO+9C,EAAK/9C,GAAK69C,EAAI79C,GAAM,OAAO+9C,CAAM,CACtL,IAAIpH,EAAmC,WACrC,SAASA,EAAoBC,GAC3B,IAAIC,EAAa9vC,UAAUxJ,OAAS,QAAsBD,IAAjByJ,UAAU,GAAmBA,UAAU,GAAK,EACjF+T,EAAa/T,UAAUxJ,OAAS,EAAIwJ,UAAU,QAAKzJ,EAEvD,GADAo/C,EAAkC,QAAE99C,KAAM+3C,GACtCE,EAAa,QAAoBv5C,IAAfwd,GAA4BA,EAAa,EAC7D,MAAM,IAAI8E,WAEZ,IAAIo+B,EAAiBpH,EAAQjyC,QAAO,SAAUpH,EAAQoL,GACpD,OAAOpL,EAASoL,EAAOmS,UACzB,GAAG,GACH,GAAI+7B,EAAamH,QAAiC1gD,IAAfwd,GAA4B+7B,EAAa/7B,EAAakjC,EACvF,MAAM,IAAIp+B,WAEZ,IAMEq+B,EANEC,EAAY,GACZC,OAAqC7gD,IAAfwd,EAA2BkjC,EAAiBnH,EAAa/7B,EAC/EsjC,EAAmB,GACnBC,EAAqB,EACrBC,EAAsBzH,EACtB0H,EAAY3B,EAA2BhG,GAE3C,IACE,IAAK2H,EAAUrB,MAAOe,EAAQM,EAAUpB,KAAKC,MAAO,CAClD,IAAIz0C,EAASs1C,EAAMviD,MACnB,GAAgC,IAA5B0iD,EAAiB7gD,OACnB,GAAIoL,EAAOmS,WAAawjC,EAAqB,CAE3C,IAAIE,GADJH,EAAqB11C,EAAOmS,WAAawjC,GACOH,EAAsBA,EAAsBE,EAC5FH,EAAUv+C,KAAK,IAAI8+C,SAAS91C,EAAQ21C,EAAqBE,IACzDJ,EAAiBz+C,KAAKgJ,EACxB,MACE21C,GAAuB31C,EAAOmS,gBAE3B,GAAIujC,EAAqBF,EAAqB,CAEnD,IAAIO,GADJL,GAAsB11C,EAAOmS,YACoBqjC,EAAsBx1C,EAAOmS,WAAaujC,EAAqBF,EAAsBx1C,EAAOmS,WAC7IojC,EAAUv+C,KAAK,IAAI8+C,SAAS91C,EAAQ,EAAG+1C,IACvCN,EAAiBz+C,KAAKgJ,EACxB,CACF,CACF,CAAE,MAAOpB,GACPg3C,EAAU/B,EAAEj1C,EACd,CAAE,QACAg3C,EAAUjB,GACZ,CACA1+C,KAAK+/C,SAAWP,EAChBx/C,KAAKggD,YAAcT,EACnBv/C,KAAKigD,YAAcP,EACnB1/C,KAAKkgD,WAAaZ,EAClBt/C,KAAKmgD,gBAAkB,IAAIN,SAAS,IAAIO,YAAY,GACtD,CAuLA,OAtLArC,EAA+B,QAAEhG,EAAqB,CAAC,CACrD33C,IAAK,UACLwD,IAAK,WACH,OAAO5D,KAAK+/C,QACd,GACC,CACD3/C,IAAK,aACLwD,IAAK,WACH,OAAO5D,KAAKggD,WACd,GACC,CACD5/C,IAAK,aACLwD,IAAK,WACH,OAAO5D,KAAKigD,WACd,GACC,CACD7/C,IAAK,aACLtD,MAAO,SAAoBm7C,EAAYoI,GAKrC,OAJArgD,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IACrDj4C,KAAKmgD,gBAAgBvJ,WAAW,EAAGyJ,EAC5C,GACC,CACDjgD,IAAK,aACLtD,MAAO,SAAoBm7C,EAAYoI,GASrC,OARArgD,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IACrDj4C,KAAKmgD,gBAAgBI,WAAW,EAAGF,EAC5C,GACC,CACDjgD,IAAK,WACLtD,MAAO,SAAkBm7C,EAAYoI,GAGnC,OAFArgD,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IACrDj4C,KAAKmgD,gBAAgBK,SAAS,EAAGH,EAC1C,GACC,CACDjgD,IAAK,WACLtD,MAAO,SAAkBm7C,EAAYoI,GAKnC,OAJArgD,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IACrDj4C,KAAKmgD,gBAAgBM,SAAS,EAAGJ,EAC1C,GACC,CACDjgD,IAAK,UACLtD,MAAO,SAAiBm7C,GACtB,IAAIyI,EAAwB1gD,KAAK2gD,wBAAwB1I,GACvD2I,EAAyB/C,EAAiC,QAAE6C,EAAuB,GACnF3M,EAAW6M,EAAuB,GAClCC,EAAuBD,EAAuB,GAChD,OAAO7M,EAAS+M,QAAQ7I,EAAa4I,EACvC,GACC,CACDzgD,IAAK,YACLtD,MAAO,SAAmBm7C,EAAYoI,GAGpC,OAFArgD,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IACrDj4C,KAAKmgD,gBAAgBY,UAAU,EAAGV,EAC3C,GACC,CACDjgD,IAAK,YACLtD,MAAO,SAAmBm7C,EAAYoI,GAKpC,OAJArgD,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IAC5Dj4C,KAAKmgD,gBAAgBG,SAAS,EAAGtgD,KAAKi0C,SAASgE,EAAa,IACrDj4C,KAAKmgD,gBAAgBa,UAAU,EAAGX,EAC3C,GACC,CACDjgD,IAAK,WACLtD,MAAO,SAAkBm7C,GACvB,IAAIgJ,EAAyBjhD,KAAK2gD,wBAAwB1I,GACxDiJ,EAAyBrD,EAAiC,QAAEoD,EAAwB,GACpFlN,EAAWmN,EAAuB,GAClCL,EAAuBK,EAAuB,GAChD,OAAOnN,EAASE,SAASgE,EAAa4I,EACxC,GACC,CACDzgD,IAAK,aACLtD,MAAO,SAAoBm7C,EAAYn7C,EAAOujD,GAC5CrgD,KAAKmgD,gBAAgBgB,WAAW,EAAGrkD,EAAOujD,GAC1CrgD,KAAKsgD,SAASrI,EAAYj4C,KAAKmgD,gBAAgBlM,SAAS,IACxDj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,GAC9D,GACC,CACD7zC,IAAK,aACLtD,MAAO,SAAoBm7C,EAAYn7C,EAAOujD,GAC5CrgD,KAAKmgD,gBAAgBiB,WAAW,EAAGtkD,EAAOujD,GAC1CrgD,KAAKsgD,SAASrI,EAAYj4C,KAAKmgD,gBAAgBlM,SAAS,IACxDj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,GAC9D,GACC,CACD7zC,IAAK,WACLtD,MAAO,SAAkBm7C,EAAYn7C,EAAOujD,GAC1CrgD,KAAKmgD,gBAAgBkB,SAAS,EAAGvkD,EAAOujD,GACxCrgD,KAAKsgD,SAASrI,EAAYj4C,KAAKmgD,gBAAgBlM,SAAS,IACxDj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,GAC9D,GACC,CACD7zC,IAAK,WACLtD,MAAO,SAAkBm7C,EAAYn7C,EAAOujD,GAC1CrgD,KAAKmgD,gBAAgBmB,SAAS,EAAGxkD,EAAOujD,GACxCrgD,KAAKsgD,SAASrI,EAAYj4C,KAAKmgD,gBAAgBlM,SAAS,IACxDj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,GAC9D,GACC,CACD7zC,IAAK,UACLtD,MAAO,SAAiBm7C,EAAYn7C,GAClC,IAAIykD,EAAyBvhD,KAAK2gD,wBAAwB1I,GACxDuJ,EAAyB3D,EAAiC,QAAE0D,EAAwB,GACpFxN,EAAWyN,EAAuB,GAClCX,EAAuBW,EAAuB,GAChDzN,EAAS0N,QAAQxJ,EAAa4I,EAAsB/jD,EACtD,GACC,CACDsD,IAAK,YACLtD,MAAO,SAAmBm7C,EAAYn7C,EAAOujD,GAC3CrgD,KAAKmgD,gBAAgBuB,UAAU,EAAG5kD,EAAOujD,GACzCrgD,KAAKsgD,SAASrI,EAAYj4C,KAAKmgD,gBAAgBlM,SAAS,IACxDj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,GAC9D,GACC,CACD7zC,IAAK,YACLtD,MAAO,SAAmBm7C,EAAYn7C,EAAOujD,GAC3CrgD,KAAKmgD,gBAAgBwB,UAAU,EAAG7kD,EAAOujD,GACzCrgD,KAAKsgD,SAASrI,EAAYj4C,KAAKmgD,gBAAgBlM,SAAS,IACxDj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,IAC5Dj0C,KAAKsgD,SAASrI,EAAa,EAAGj4C,KAAKmgD,gBAAgBlM,SAAS,GAC9D,GACC,CACD7zC,IAAK,WACLtD,MAAO,SAAkBm7C,EAAYn7C,GACnC,IAAI8kD,EAAyB5hD,KAAK2gD,wBAAwB1I,GACxD4J,EAAyBhE,EAAiC,QAAE+D,EAAwB,GACpF7N,EAAW8N,EAAuB,GAClChB,EAAuBgB,EAAuB,GAChD9N,EAASuM,SAASrI,EAAa4I,EAAsB/jD,EACvD,GACC,CACDsD,IAAK,0BACLtD,MAAO,SAAiCm7C,GACtC,IAEE6J,EAFEjB,EAAuB,EACvBkB,EAAa/D,EAA2Bh+C,KAAKkgD,YAEjD,IACE,IAAK6B,EAAWzD,MAAOwD,EAASC,EAAWxD,KAAKC,MAAO,CACrD,IAAIzK,EAAW+N,EAAOhlD,MAClBklD,EAA2BnB,EAAuB9M,EAAS73B,WAC/D,GAAI+7B,GAAc4I,GAAwB5I,EAAa+J,EACrD,MAAO,CAACjO,EAAU8M,GAEpBA,EAAuBmB,CACzB,CACF,CAAE,MAAOr5C,GACPo5C,EAAWnE,EAAEj1C,EACf,CAAE,QACAo5C,EAAWrD,GACb,CACA,MAAM,IAAI19B,UACZ,KAEK+2B,CACT,CA1OuC,GA4OvCt7C,EAAQs7C,oBAAsBA,EAE9BxyC,OAAO4c,eAAe1lB,EAAS,aAAc,CAAEK,OAAO,GAEzD,CA9PkE4F,CAAQjG,EAAS,EAAQ,MAAyC,EAAQ,MAA0C,EAAQ,6BCD/LoM,EAAOpM,QAAU,EAAjB,yCCAa,IAAIwlD,EAAWjiD,MAAMA,KAAKiiD,WAAY,SAASvmC,EAAQwmC,EAAWC,EAAEC,GACjF,OAAO,IAAID,IAAIA,EAAEl9C,WAAU,SAAST,EAAQD,GAAQ,SAAS89C,EAAUvlD,GAAO,IAAI+hD,EAAKuD,EAAU/1C,KAAKvP,GAAQ,CAAC,MAAM8gD,GAAGr5C,EAAOq5C,EAAG,CAAC,CACnI,SAAS0E,EAASxlD,GAAO,IAAI+hD,EAAKuD,EAAiB,MAAEtlD,GAAQ,CAAC,MAAM8gD,GAAGr5C,EAAOq5C,EAAG,CAAC,CAClF,SAASiB,EAAKl6C,GAH8E,IAAe7H,EAGrF6H,EAAO65C,KAAKh6C,EAAQG,EAAO7H,QAH0DA,EAG7C6H,EAAO7H,MAHoDA,aAAiBqlD,EAAErlD,EAAM,IAAIqlD,GAAE,SAAS39C,GAASA,EAAQ1H,EAAO,KAG7GmqB,KAAKo7B,EAAUC,EAAU,CACrGzD,GAAMuD,EAAUA,EAAU7nC,MAAMmB,EAAQwmC,GAAY,KAAK71C,OAAQ,GAAG,EAAMk2C,EAAaviD,MAAMA,KAAKuiD,aAAc,SAAS7mC,EAAQ8mC,GAAM,IAAkF9D,EAAEniC,EAAEkmC,EAAEC,EAApFnS,EAAE,CAACoS,MAAM,EAAEC,KAAK,WAAW,GAAQ,EAALH,EAAE,GAAK,MAAMA,EAAE,GAAG,OAAOA,EAAE,EAAG,EAAEI,KAAK,GAAGC,IAAI,IAAY,OAAOJ,EAAE,CAACr2C,KAAK02C,EAAK,GAAG,MAAQA,EAAK,GAAG,OAASA,EAAK,IAAoB,mBAAT1iD,SAAsBqiD,EAAEriD,OAAOC,UAAU,WAAW,OAAON,IAAK,GAAG0iD,EAAE,SAASK,EAAKxE,GAAG,OAAO,SAASyE,GAAG,OAC1Y,SAAcC,GAAI,GAAGvE,EAAE,MAAM,IAAI11C,UAAU,mCAAmC,KAAMunC,OAAM,GAAGmO,EAAE,EAAEniC,IAAIkmC,EAAQ,EAANQ,EAAG,GAAK1mC,EAAU,OAAE0mC,EAAG,GAAG1mC,EAAS,SAAKkmC,EAAElmC,EAAU,SAAIkmC,EAAEt/C,KAAKoZ,GAAG,GAAGA,EAAElQ,SAASo2C,EAAEA,EAAEt/C,KAAKoZ,EAAE0mC,EAAG,KAAKzE,KAAK,OAAOiE,EAAgC,OAA3BlmC,EAAE,EAAEkmC,IAAEQ,EAAG,CAAO,EAANA,EAAG,GAAKR,EAAE3lD,QAAcmmD,EAAG,IAAI,KAAK,EAAE,KAAK,EAAER,EAAEQ,EAAG,MAAM,KAAK,EAAY,OAAV1S,EAAEoS,QAAc,CAAC7lD,MAAMmmD,EAAG,GAAGzE,MAAK,GAAO,KAAK,EAAEjO,EAAEoS,QAAQpmC,EAAE0mC,EAAG,GAAGA,EAAG,CAAC,GAAG,SAAS,KAAK,EAAEA,EAAG1S,EAAEuS,IAAIjyB,MAAM0f,EAAEsS,KAAKhyB,MAAM,SAAS,QAAQ,KAAK4xB,EAAElS,EAAEsS,MAAKJ,EAAEA,EAAE9jD,OAAO,GAAG8jD,EAAEA,EAAE9jD,OAAO,KAAc,IAARskD,EAAG,IAAgB,IAARA,EAAG,IAAQ,CAAC1S,EAAE,EAAE,QAAS,CAC3f,GAAW,IAAR0S,EAAG,MAAUR,GAAIQ,EAAG,GAAGR,EAAE,IAAIQ,EAAG,GAAGR,EAAE,IAAK,CAAClS,EAAEoS,MAAMM,EAAG,GAAG,KAAM,CAClE,GAAW,IAARA,EAAG,IAAQ1S,EAAEoS,MAAMF,EAAE,GAAG,CAAClS,EAAEoS,MAAMF,EAAE,GAAGA,EAAEQ,EAAG,KAAM,CACpD,GAAGR,GAAGlS,EAAEoS,MAAMF,EAAE,GAAG,CAAClS,EAAEoS,MAAMF,EAAE,GAAGlS,EAAEuS,IAAI/hD,KAAKkiD,GAAI,KAAM,CACnDR,EAAE,IAAGlS,EAAEuS,IAAIjyB,MAAM0f,EAAEsS,KAAKhyB,MAAM,SACjCoyB,EAAGT,EAAKr/C,KAAKuY,EAAQ60B,EAAG,CAAC,MAAMqN,GAAGqF,EAAG,CAAC,EAAErF,GAAGrhC,EAAE,CAAE,CAAC,QAAQmiC,EAAE+D,EAAE,CAAE,CAC9D,GAAS,EAANQ,EAAG,GAAK,MAAMA,EAAG,GAAG,MAAM,CAACnmD,MAAMmmD,EAAG,GAAGA,EAAG,QAAG,EAAOzE,MAAK,EAAM,CAP+UK,CAAK,CAACN,EAAEyE,GAAI,CAAE,CAO5V,EAAEz9C,OAAO4c,eAAe1lB,EAAtB,cAA4CK,OAAM,IAAOL,EAAQy/C,mBAAmBz/C,EAAQymD,sBAAsBzmD,EAAQ0mD,oBAAe,EAAO,IAAmMA,EAA/LC,EAA4B,EAAQ,MAAiCC,EAAQ,EAAQ,MAAaC,EAAwC,EAAQ,KAAsiB,SAASJ,EAAsB18B,GAAI,IAAI+8B,EAAMvjD,KAASwjD,EAAGh9B,EAAG21B,MAAMA,OAAW,IAALqH,GAAiBA,EAAGC,EAAGj9B,EAAGk9B,MAAMA,OAAW,IAALD,GAAkBA,EAAGE,EAAGn9B,EAAGo9B,OAAOA,OAAY,IAALD,EAAY,WAAW,OAAO,IAAK,EAAEA,EAAGlF,EAAGj4B,EAAGq9B,QAAQA,OAAa,IAALpF,EAAY,WAAW,OAAO,IAAK,EAAEA,EAAGqF,EAAgBt9B,EAAGs9B,gBAAgBC,EAAGv9B,EAAGw9B,OAAOA,OAAY,IAALD,GAAkBA,EAAGE,EAAGz9B,EAAGiyB,qBAAqBA,OAA0B,IAALwL,OAAYvlD,EAAUulD,EAAGC,EAAG19B,EAAG29B,kBAAkBA,OAAuB,IAALD,EAAY,KAAKA,EAAGE,EAAG59B,EAAG69B,kBAAkBA,OAAuB,IAALD,GAAiBA,EAAGE,EAAG99B,EAAG+9B,qBAAqBA,OAA0B,IAALD,GAAkBA,EAAO3J,GAAc,EAAG0I,EAAQmB,QAAQ,MAAUC,GAAY,EAAGpB,EAAQmB,QAAQ,IAAQ1W,GAAY,EAAGuV,EAAQmB,QAAQ,MAAUE,GAAG,EAAGrB,EAAQzH,UAAU,QAAQhzC,EAAO87C,EAAG,GAAGC,EAAUD,EAAG,GAAOE,GAAG,EAAGvB,EAAQzH,WAAU,GAAOiJ,EAAaD,EAAG,GAAGE,EAAgBF,EAAG,GAAOG,GAAG,EAAG1B,EAAQzH,eAAUl9C,GAAW29C,EAAa0I,EAAG,GAAGC,EAAgBD,EAAG,GAAOE,GAAG,EAAG5B,EAAQzH,UAAU,QAAQl3C,EAAMugD,EAAG,GAAGC,EAASD,EAAG,IAAG,EAAG5B,EAAQ8B,YAAW,WAAuClD,EAAUsB,OAAM,OAAO,GAAO,WAAW,IAAI/8B,EAAG,OAAO+7B,EAAYviD,MAAK,SAASwjD,GAAI,OAAOA,EAAGb,OAAO,KAAK,EAA0C,OAAxCn8B,EAAG48B,EAA4Bn4C,SAAe,CAAC,GAAE,EAAGq4C,EAAwCpgD,YAAY,KAAK,EAAE,MAAM,CAAC,EAAEsjB,EAAGjM,WAAM,EAAO,CAACipC,EAAGZ,UAAU,KAAK,EAAY,OAAVY,EAAGZ,OAAa,CAAC,GAAI,GAAG,GAAa,GAAE,IAAI,IAAIwC,GAAe,EAAG/B,EAAQgC,cAAa,WAAW,OAAOpD,EAAUsB,OAAM,OAAO,GAAO,WAAW,IAAI+B,EAAcC,EAAqBhY,EAAOiY,EAAQ,OAAOjD,EAAYviD,MAAK,SAASwmB,GAAI,OAAOA,EAAGm8B,OAAO,KAAK,EAAEgC,EAAU,mBAAmBW,EAAc,CAACnJ,MAAqB,kBAARA,IAAoBA,EAAMA,EAAMuH,MAAqB,kBAARA,IAAoBA,EAAMA,GAAQl9B,EAAGm8B,MAAM,EAAE,KAAK,EAA0B,OAAxBn8B,EAAGq8B,KAAK9hD,KAAK,CAAC,EAAE,EAAE,CAAC,KAASojD,GAA8BrW,EAAY2X,QAAQtB,EAAwB,CAAC,EAAE,IAArD,CAAC,EAAE,GAAqD,KAAK,EAAE,OAAIH,EAAyB,CAAC,EAAEr4C,OAAO+5C,UAAUC,aAAaC,gBAAgB,CAAClC,MAAMA,IAAO,KAA3E,CAAC,EAAE,GAAiF,KAAK,EAA2G,OAAzG6B,EAAU/+B,EAAGo8B,QAAiBjN,iBAAiB,GAAGxxC,iBAAiB,SAAQ,WAAWuzC,GAAgB,IAAOyE,EAAwB,CAAC,EAAExwC,OAAO+5C,UAAUC,aAAaE,aAAa,CAAC1J,MAAMA,KAAjE,CAAC,EAAE,GAAwE,KAAK,EAAc31B,EAAGo8B,OAAmB3U,iBAAiB56B,SAAQ,SAASyyC,GAAY,OAAOP,EAASQ,SAASD,EAAY,IAAGt/B,EAAGm8B,MAAM,EAAE,KAAK,EAA+B,OAA7B7U,EAAY2X,QAAQF,EAAe,CAAC,EAAE,GAAG,KAAK,EAAE,MAAM,CAAC,EAAE55C,OAAO+5C,UAAUC,aAAaE,aAAaP,IAAgB,KAAK,EAAE/X,EAAO/mB,EAAGo8B,OAAO9U,EAAY2X,QAAQlY,EAAO/mB,EAAGm8B,MAAM,EAAE,KAAK,EAAoB,OAAlBgC,EAAU,QAAc,CAAC,EAAE,IAAI,KAAK,EAA6D,OAA3Da,EAAQh/B,EAAGo8B,OAAOsC,EAASM,EAAQ3/C,MAAM8+C,EAAU,QAAc,CAAC,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,GAAI,GAAG,GAAG,GAAE,CAACxI,EAAMuH,EAAMM,KAAS,EAAGX,EAAQ8B,YAAW,WAAW,IAAIx5C,OAAO2sC,cAAe,MAAM,IAAI13C,MAAM,uBACvjH,GAAGojD,IAAYr4C,OAAO+5C,UAAUC,aAAaC,gBAAiB,MAAM,IAAIhlD,MAAM,iDAC9E,IAAIolD,EAAiB,SAASC,GAAW,IAAIC,EAA0BR,UAAUC,aAAaQ,0BAA8BC,EAAuB7gD,OAAOoW,KAAKsqC,GAAW1zC,QAAO,SAAS8zC,GAAY,OAAOH,EAA0BG,EAAY,IAAMD,EAAuBznD,OAAO,GAAG69C,QAAQ93C,MAAM,mBAAmB4B,OAAO8/C,EAAuBz/C,KAAK,KAAK,qFAAuF,EAI1b,MAJ8c,iBAARw1C,GAAkB6J,EAAiB7J,GACvd,iBAARuH,GAAkBsC,EAAiBtC,GAC1CjL,GAAsBA,EAAqB1tC,WAAcutC,cAAce,gBAAgBZ,EAAqB1tC,WAAWyxC,QAAQ93C,MAAM,yFACpIopC,EAAY2X,SAASlB,GAAsBa,IACxC,WAActX,EAAY2X,SAAoB3X,EAAY2X,QAAQ1P,YAAmB1iC,SAAQ,SAAS6iC,GAAO,OAAOA,EAAMoQ,QAAQ12C,MAAO,GAAI,CAAE,GAAE,CAACusC,EAAM6H,EAAON,EAAM0B,EAAe3M,EAAqB8L,IAAwB,IACwNgC,EAAkB,SAAS//B,GAAI,IAAIpiB,EAAKoiB,EAAGpiB,KAAKqgD,EAAYgB,QAAQ1kD,KAAKqD,EAAM,EAAMoiD,EAAiB,WAAW3C,GAAU,EAAM4C,EAAgB,WAAW,IAAIC,EAAMjC,EAAYgB,QAAQ,GAAOkB,EAAaphD,OAAOqhD,OAAO,CAAC3pD,KAAKypD,EAAMzpD,MAAM6mD,IAAkBJ,EAAM,CAACzmD,KAAK,aAAa,CAACA,KAAK,eAAmB+M,EAAK,IAAIC,KAAKw6C,EAAYgB,QAAQkB,GAAkBz8C,EAAIC,IAAIC,gBAAgBJ,GAAM26C,EAAU,WAAWK,EAAgB96C,GAAK05C,EAAO15C,EAAIF,EAAM,EAAM68C,EAAU,SAASC,GAAMhC,EAAgBgC,GAAShZ,EAAY2X,SAAS3X,EAAY2X,QAAQxX,iBAAiB56B,SAAQ,SAASyyC,GAAY,OAAOA,EAAWiB,SAASD,CAAM,GAAI,EAAwTpP,EAAc,WAAciD,EAAc8K,SAA0C,aAA9B9K,EAAc8K,QAAQl2C,QAAoBo1C,EAAU,YAAYhK,EAAc8K,QAAQ71C,OAAUy0C,GAAmBvW,EAAY2X,SAAS3X,EAAY2X,QAAQ1P,YAAY1iC,SAAQ,SAAS6iC,GAAO,OAAOA,EAAMtmC,MAAO,IACrnD60C,EAAYgB,QAAQ,GAAK,EAAE,MAAM,CAAC/gD,MAAMy+C,EAAez+C,GAAOmiD,UAAU,WAAW,OAAOA,GAAU,EAAM,EAAEG,YAAY,WAAW,OAAOH,GAAU,EAAO,EAAEzK,eAF8F,WAAW,OAAO6F,EAAUsB,OAAM,OAAO,GAAO,WAA6B,OAAOhB,EAAYviD,MAAK,SAASwmB,GAAI,OAAOA,EAAGm8B,OAAO,KAAK,EAAmB,OAAjBuC,EAAS,QAAapX,EAAY2X,QAAc,CAAC,EAAE,GAAS,CAAC,EAAEL,KAAkB,KAAK,EAAE5+B,EAAGo8B,OAAOp8B,EAAGm8B,MAAM,EAAE,KAAK,EAAE,OAAI7U,EAAY2X,QAAkC3X,EAAY2X,QAAQ1P,YAAYv8B,MAAK,SAAS08B,GAAO,MAA0B,UAAnBA,EAAM+Q,UAAqB,IAAuC,CAAC,EAAE7B,KAAf,CAAC,EAAE,GAAzI,CAAC,EAAE,GAAoK,KAAK,EAAE5+B,EAAGo8B,OAAOp8B,EAAGm8B,MAAM,EAAE,KAAK,EAAE,IAAI7U,EAAY2X,QAAQyB,OAAQ,MAAM,CAAC,GACxwBvM,EAAc8K,QAAQ,IAAIrC,EAA4B9K,cAAcxK,EAAY2X,QAAQhN,QAAsB/5C,GAAWi8C,EAAc8K,QAAQ1L,gBAAgBwM,EAAkB5L,EAAc8K,QAAQrL,OAAOqM,EAAgB9L,EAAc8K,QAAQtL,QAAQqM,EAAiB7L,EAAc8K,QAAQ/a,QAAQ,WAAWwa,EAAS,eAAeP,EAAU,OAAQ,EAAEhK,EAAc8K,QAAQ7gD,QAAQ+/C,EAAU,aAAan+B,EAAGm8B,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,GAAI,GAAG,GAAG,EAC/PwE,eAD64B,WAAcxM,EAAc8K,SAAuC,cAA9B9K,EAAc8K,QAAQl2C,QAAqBo1C,EAAU,UAAUhK,EAAc8K,QAAQh2C,QAAS,EACl/B23C,gBADwgC,WAAczM,EAAc8K,SAAuC,WAA9B9K,EAAc8K,QAAQl2C,QAAkBo1C,EAAU,aAAahK,EAAc8K,QAAQ91C,SAAU,EAC5mC+nC,cAAcA,EAAc2E,aAAaA,EAAazzC,OAAOA,EAAOi8C,aAAaA,EAAawC,cAAcvZ,EAAY2X,QAAQ,IAAIpX,YAAYP,EAAY2X,QAAQ9P,kBAAkB,KAAK2R,mBAAmBxZ,EAAY2X,QAAQ,IAAIpX,YAAYP,EAAY2X,QAAQxX,kBAAkB,KAAKsZ,aAAa,WAAclL,GAAclyC,IAAIM,gBAAgB4xC,GACnlB2I,OAAgBtmD,GAAWimD,EAAU,OAAQ,EAAI,EATsX,SAAUxB,GAAgBA,EAA2B,WAAE,gBAAgBA,EAAgC,gBAAE,oBAAoBA,EAA8B,cAAE,2BAA2BA,EAAiC,iBAAE,eAAeA,EAAqC,qBAAE,4BAA4BA,EAA0B,UAAE,iBAAiBA,EAAqB,KAAE,GAAGA,EAA4B,YAAE,gBAAkB,CAApa,CAAsaA,EAAe1mD,EAAQ0mD,iBAAiB1mD,EAAQ0mD,eAAe,CAAC,IAU74B1mD,EAAQymD,sBAAsBA,EAAiHzmD,EAAQy/C,mBAA5E,SAASsL,GAAO,OAAOA,EAAMj/C,OAAO26C,EAAsBsE,GAAQ,uBCjBpI,SAAW/qD,GAAW,aAE3B,IAAIm+C,EAAwB,SAA+B11C,GACzD,OAAO,SAAUxB,GACf,IAAIm3C,EAAS31C,EAAqBxB,GAElC,OADAA,EAAI0P,IAAIynC,GACDA,CACT,CACF,EAEIC,EAAc,SAAqBC,GACrC,OAAO,SAAUC,EAAYC,GAE3B,OADAF,EAAkBr3C,IAAIs3C,EAAYC,GAC3BA,CACT,CACF,EAMIC,OAA+Cx8C,IAA5ByyB,OAAO+pB,iBAAiC,iBAAmB/pB,OAAO+pB,iBACrFC,EAAkC,UAClCC,EAA+D,EAAlCD,EAC7BE,EAA6B,SAAoCC,EAAOP,GAC1E,OAAO,SAAUC,GACf,IAAIO,EAAaR,EAAkBn3C,IAAIo3C,GASnCC,OAA4Bv8C,IAAf68C,EAA2BP,EAAWhoC,KAAOuoC,EAAaH,EAA6BG,EAAa,EAAI,EACzH,IAAKP,EAAWh3C,IAAIi3C,GAClB,OAAOK,EAAMN,EAAYC,GAQ3B,GAAID,EAAWhoC,KAAOmoC,EAAiC,CACrD,KAAOH,EAAWh3C,IAAIi3C,IACpBA,EAAan9C,KAAK2B,MAAM3B,KAAK09C,SAAWJ,GAE1C,OAAOE,EAAMN,EAAYC,EAC3B,CAEA,GAAID,EAAWhoC,KAAOkoC,EACpB,MAAM,IAAIt6C,MAAM,kGAGlB,KAAOo6C,EAAWh3C,IAAIi3C,IACpBA,EAAan9C,KAAK2B,MAAM3B,KAAK09C,SAAWN,GAE1C,OAAOI,EAAMN,EAAYC,EAC3B,CACF,EAEIQ,EAAuB,IAAI74C,QAC3B04C,EAAQR,EAAYW,GACpBv2C,EAAuBm2C,EAA2BC,EAAOG,GACzDzwC,EAAkB4vC,EAAsB11C,GAE5CzI,EAAQuO,gBAAkBA,EAC1BvO,EAAQyI,qBAAuBA,CAElC,CA1EkExC,CAAQjG,mBCI3EoM,EAAOpM,QALP,SAA2BwiD,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAItgD,UAAQugD,EAAMD,EAAItgD,QAC/C,IAAK,IAAIyC,EAAI,EAAG+9C,EAAO,IAAIxtC,MAAMutC,GAAM99C,EAAI89C,EAAK99C,IAAK+9C,EAAK/9C,GAAK69C,EAAI79C,GACnE,OAAO+9C,CACT,EACoCt2C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,0BCFzGoM,EAAOpM,QAHP,SAAyBwiD,GACvB,GAAIttC,MAAMC,QAAQqtC,GAAM,OAAOA,CACjC,EACkCp2C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,8BCHvG,IAAIirD,EAAmB,EAAQ,IAI/B7+C,EAAOpM,QAHP,SAA4BwiD,GAC1B,GAAIttC,MAAMC,QAAQqtC,GAAM,OAAOyI,EAAiBzI,EAClD,EACqCp2C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,0BCC1GoM,EAAOpM,QALP,SAAyBwxB,EAAU05B,GACjC,KAAM15B,aAAoB05B,GACxB,MAAM,IAAI3+C,UAAU,oCAExB,EACkCH,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,8BCLvG,IAAImrD,EAAgB,EAAQ,MAC5B,SAASC,EAAkBjqD,EAAQ4pD,GACjC,IAAK,IAAIpmD,EAAI,EAAGA,EAAIomD,EAAM7oD,OAAQyC,IAAK,CACrC,IAAIykB,EAAa2hC,EAAMpmD,GACvBykB,EAAWiiC,WAAajiC,EAAWiiC,aAAc,EACjDjiC,EAAW4iB,cAAe,EACtB,UAAW5iB,IAAYA,EAAWkiC,UAAW,GACjDxiD,OAAO4c,eAAevkB,EAAQgqD,EAAc/hC,EAAWzlB,KAAMylB,EAC/D,CACF,CASAhd,EAAOpM,QARP,SAAsBkrD,EAAaK,EAAYC,GAM7C,OALID,GAAYH,EAAkBF,EAAYn7C,UAAWw7C,GACrDC,GAAaJ,EAAkBF,EAAaM,GAChD1iD,OAAO4c,eAAewlC,EAAa,YAAa,CAC9CI,UAAU,IAELJ,CACT,EAC+B9+C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,0BCfpGoM,EAAOpM,QAHP,SAA0ByrD,GACxB,GAAsB,oBAAX7nD,QAAmD,MAAzB6nD,EAAK7nD,OAAOC,WAA2C,MAAtB4nD,EAAK,cAAuB,OAAOv2C,MAAMW,KAAK41C,EACtH,EACmCr/C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,0BCwBxGoM,EAAOpM,QA3BP,SAA+BkgD,EAAGwL,GAChC,IAAI1F,EAAI,MAAQ9F,EAAI,KAAO,oBAAsBt8C,QAAUs8C,EAAEt8C,OAAOC,WAAaq8C,EAAE,cACnF,GAAI,MAAQ8F,EAAG,CACb,IAAI7E,EACFW,EACAn9C,EACAgnD,EACAtlC,EAAI,GACJ47B,GAAI,EACJT,GAAI,EACN,IACE,GAAI78C,GAAKqhD,EAAIA,EAAEt/C,KAAKw5C,IAAItwC,KAAM,IAAM87C,EAAG,CACrC,GAAI5iD,OAAOk9C,KAAOA,EAAG,OACrB/D,GAAI,CACN,MAAO,OAASA,GAAKd,EAAIx8C,EAAE+B,KAAKs/C,IAAIjE,QAAU17B,EAAE/hB,KAAK68C,EAAE9gD,OAAQgmB,EAAEnkB,SAAWwpD,GAAIzJ,GAAI,GACtF,CAAE,MAAO/B,GACPsB,GAAI,EAAIM,EAAI5B,CACd,CAAE,QACA,IACE,IAAK+B,GAAK,MAAQ+D,EAAU,SAAM2F,EAAI3F,EAAU,SAAKl9C,OAAO6iD,KAAOA,GAAI,MACzE,CAAE,QACA,GAAInK,EAAG,MAAMM,CACf,CACF,CACA,OAAOz7B,CACT,CACF,EACwCja,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,0BCxB7GoM,EAAOpM,QAHP,WACE,MAAM,IAAIuM,UAAU,4IACtB,EACmCH,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,0BCAxGoM,EAAOpM,QAHP,WACE,MAAM,IAAIuM,UAAU,uIACtB,EACqCH,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,8BCH1G,IAAI4rD,EAAiB,EAAQ,MACzBC,EAAuB,EAAQ,MAC/BC,EAA6B,EAAQ,MACrCC,EAAkB,EAAQ,MAI9B3/C,EAAOpM,QAHP,SAAwBwiD,EAAK79C,GAC3B,OAAOinD,EAAepJ,IAAQqJ,EAAqBrJ,EAAK79C,IAAMmnD,EAA2BtJ,EAAK79C,IAAMonD,GACtG,EACiC3/C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,8BCPtG,IAAIgsD,EAAoB,EAAQ,MAC5BC,EAAkB,EAAQ,MAC1BH,EAA6B,EAAQ,MACrCI,EAAoB,EAAQ,MAIhC9/C,EAAOpM,QAHP,SAA4BwiD,GAC1B,OAAOwJ,EAAkBxJ,IAAQyJ,EAAgBzJ,IAAQsJ,EAA2BtJ,IAAQ0J,GAC9F,EACqC9/C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,8BCP1G,IAAImsD,EAAU,gBAWd//C,EAAOpM,QAVP,SAAqBgmD,EAAG9F,GACtB,GAAI,UAAYiM,EAAQnG,KAAOA,EAAG,OAAOA,EACzC,IAAI7E,EAAI6E,EAAEpiD,OAAOwoD,aACjB,QAAI,IAAWjL,EAAG,CAChB,IAAIx8C,EAAIw8C,EAAEz6C,KAAKs/C,EAAG9F,GAAK,WACvB,GAAI,UAAYiM,EAAQxnD,GAAI,OAAOA,EACnC,MAAM,IAAI4H,UAAU,+CACtB,CACA,OAAQ,WAAa2zC,EAAImM,OAAS33B,QAAQsxB,EAC5C,EAC8B55C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,8BCXnG,IAAImsD,EAAU,gBACVC,EAAc,EAAQ,MAK1BhgD,EAAOpM,QAJP,SAAuBgmD,GACrB,IAAIrhD,EAAIynD,EAAYpG,EAAG,UACvB,MAAO,UAAYmG,EAAQxnD,GAAKA,EAAI0nD,OAAO1nD,EAC7C,EACgCyH,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,0BCNrG,SAASmsD,EAAQ3K,GAGf,OAAQp1C,EAAOpM,QAAUmsD,EAAU,mBAAqBvoD,QAAU,iBAAmBA,OAAOC,SAAW,SAAU29C,GAC/G,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqB59C,QAAU49C,EAAE1iC,cAAgBlb,QAAU49C,IAAM59C,OAAOmM,UAAY,gBAAkByxC,CACpH,EAAGp1C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,QAAUmsD,EAAQ3K,EAC5F,CACAp1C,EAAOpM,QAAUmsD,EAAS//C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM,8BCT/F,IAAIirD,EAAmB,EAAQ,IAS/B7+C,EAAOpM,QARP,SAAqCwhD,EAAGc,GACtC,GAAKd,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOyJ,EAAiBzJ,EAAGc,GACtD,IAAIR,EAAIh5C,OAAOiH,UAAUgF,SAASrO,KAAK86C,GAAGv9C,MAAM,GAAI,GAEpD,MADU,WAAN69C,GAAkBN,EAAE1iC,cAAagjC,EAAIN,EAAE1iC,YAAY1V,MAC7C,QAAN04C,GAAqB,QAANA,EAAoB5sC,MAAMW,KAAK2rC,GACxC,cAANM,GAAqB,2CAA2Cn1C,KAAKm1C,GAAWmJ,EAAiBzJ,EAAGc,QAAxG,CALc,CAMhB,EAC8Cl2C,EAAOpM,QAAQgrD,YAAa,EAAM5+C,EAAOpM,QAAiB,QAAIoM,EAAOpM","sources":["webpack://ai-financial-awareness/./node_modules/automation-events/build/es5/bundle.js","webpack://ai-financial-awareness/./node_modules/broker-factory/build/es2019/guards/message-port.js","webpack://ai-financial-awareness/./node_modules/broker-factory/build/es2019/helpers/port-map.js","webpack://ai-financial-awareness/./node_modules/broker-factory/build/es2019/module.js","webpack://ai-financial-awareness/./node_modules/broker-factory/build/es2019/helpers/extend-broker-implementation.js","webpack://ai-financial-awareness/./node_modules/compilerr/build/es5/bundle.js","webpack://ai-financial-awareness/./node_modules/dashify/index.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder-wav-encoder-broker/build/es2019/module.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder-wav-encoder/build/es2019/module.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder-wav-encoder/build/es2019/worker/worker.js","webpack://ai-financial-awareness/./node_modules/media-encoder-host-broker/build/es2019/module.js","webpack://ai-financial-awareness/./node_modules/media-encoder-host/build/es2019/module.js","webpack://ai-financial-awareness/./node_modules/media-encoder-host/build/es2019/worker/worker.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js","webpack://ai-financial-awareness/./node_modules/rxjs-interop/dist/esm/symbols.js","webpack://ai-financial-awareness/./node_modules/rxjs-interop/dist/esm/to-observer.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/animation-frame.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/functions/emit-not-supported-error.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/module.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/window.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/wrap-subscribe-function.js","webpack://ai-financial-awareness/./node_modules/rxjs-interop/dist/esm/patch.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/mutations.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/map-subscribable-thing.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/prepend-subscribable-thing.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/attribute.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/geolocation.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/intersections.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/media-devices.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/media-query-match.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/metrics.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/midi-inputs.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/midi-outputs.js","webpack://ai-financial-awareness/./node_modules/subscribable-things/build/es2019/factories/on.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/helpers/error-renderers.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/build/es2019/module.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/node_modules/worker-factory/build/es2019/helpers/extend-worker-implementation.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/build/es2019/factories/add-recorder-audio-worklet-module.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/build/es2019/worklet/worklet.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/build/es2019/factories/recorder-audio-worklet-node-factory.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/build/es2019/factories/listener.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/build/es2019/factories/post-message-factory.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/build/es2019/functions/validate-state.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/globals.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/constants.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/module.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack://ai-financial-awareness/./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/module.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/window.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js","webpack://ai-financial-awareness/./node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js","webpack://ai-financial-awareness/./node_modules/fast-unique-numbers/build/es5/bundle.js","webpack://ai-financial-awareness/./src/pages/voice-chat.js","webpack://ai-financial-awareness/./node_modules/indefinite-article/indefinite-article.js","webpack://ai-financial-awareness/./node_modules/multi-buffer-data-view/build/es5/bundle.js","webpack://ai-financial-awareness/./node_modules/react-media-recorder/index.js","webpack://ai-financial-awareness/./node_modules/react-media-recorder/lib/index.js","webpack://ai-financial-awareness/./node_modules/recorder-audio-worklet/node_modules/fast-unique-numbers/build/es5/bundle.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/createClass.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/typeof.js","webpack://ai-financial-awareness/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n        target = _ref.target,\n        timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n        value = _ref.value;\n      if (valueAtStartTime === value) {\n        return value;\n      }\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n        value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n        startTime = _ref.startTime,\n        values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function (_Symbol$iterator) {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck(this, AutomationEventList);\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n      _createClass(AutomationEventList, [{\n        key: _Symbol$iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n            var removedAutomationEvent = this._automationEvents[index];\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n                var startTime = lastAutomationEvent === undefined ? removedAutomationEvent.insertTime : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = lastAutomationEvent === undefined ? this._defaultValue : isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                var duration = eventTime - lastAutomationEvent.startTime;\n                var ratio = (lastAutomationEvent.values.length - 1) / lastAutomationEvent.duration;\n                var length = Math.max(2, 1 + Math.ceil(duration * ratio));\n                var fraction = duration / (length - 1) * ratio;\n                var values = lastAutomationEvent.values.slice(0, length);\n                if (fraction < 1) {\n                  for (var i = 1; i < length; i += 1) {\n                    var factor = fraction * i % 1;\n                    values[i] = lastAutomationEvent.values[i - 1] * (1 - factor) + lastAutomationEvent.values[i] * factor;\n                  }\n                }\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(values, lastAutomationEvent.startTime, duration);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n          var indexOfNextEvent = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n          var nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n          var indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n          var currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n              startTime = _getEndTimeAndValueOf2[0],\n              value = _getEndTimeAndValueOf2[1];\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n              _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n              _startTime = _getEndTimeAndValueOf4[0],\n              _value = _getEndTimeAndValueOf4[1];\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n          return this._defaultValue;\n        }\n      }]);\n      return AutomationEventList;\n    }(Symbol.iterator);\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n}));\n","export const isMessagePort = (sender) => {\n    return typeof sender.start === 'function';\n};\n//# sourceMappingURL=message-port.js.map","export const PORT_MAP = new WeakMap();\n//# sourceMappingURL=port-map.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { isMessagePort } from './guards/message-port';\nimport { extendBrokerImplementation } from './helpers/extend-broker-implementation';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst ONGOING_REQUESTS = new WeakMap();\nconst createOrGetOngoingRequests = (sender) => {\n    if (ONGOING_REQUESTS.has(sender)) {\n        // @todo TypeScript needs to be convinced that has() works as expected.\n        return ONGOING_REQUESTS.get(sender);\n    }\n    const ongoingRequests = new Map();\n    ONGOING_REQUESTS.set(sender, ongoingRequests);\n    return ongoingRequests;\n};\nexport const createBroker = (brokerImplementation) => {\n    const fullBrokerImplementation = extendBrokerImplementation(brokerImplementation);\n    return (sender) => {\n        const ongoingRequests = createOrGetOngoingRequests(sender);\n        sender.addEventListener('message', (({ data: message }) => {\n            const { id } = message;\n            if (id !== null && ongoingRequests.has(id)) {\n                const { reject, resolve } = ongoingRequests.get(id);\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }));\n        if (isMessagePort(sender)) {\n            sender.start();\n        }\n        const call = (method, params = null, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                if (params === null) {\n                    sender.postMessage({ id, method }, transferables);\n                }\n                else {\n                    sender.postMessage({ id, method, params }, transferables);\n                }\n            });\n        };\n        const notify = (method, params, transferables = []) => {\n            sender.postMessage({ id: null, method, params }, transferables);\n        };\n        let functions = {};\n        for (const [key, handler] of Object.entries(fullBrokerImplementation)) {\n            functions = { ...functions, [key]: handler({ call, notify }) };\n        }\n        return { ...functions };\n    };\n};\n//# sourceMappingURL=module.js.map","import { PORT_MAP } from './port-map';\nexport const extendBrokerImplementation = (partialBrokerImplementation) => ({\n    ...partialBrokerImplementation,\n    connect: ({ call }) => {\n        return async () => {\n            const { port1, port2 } = new MessageChannel();\n            const portId = await call('connect', { port: port1 }, [port1]);\n            PORT_MAP.set(port2, portId);\n            return port2;\n        };\n    },\n    disconnect: ({ call }) => {\n        return async (port) => {\n            const portId = PORT_MAP.get(port);\n            if (portId === undefined) {\n                throw new Error('The given port is not connected.');\n            }\n            await call('disconnect', { portId });\n        };\n    },\n    isSupported: ({ call }) => {\n        return () => call('isSupported');\n    }\n});\n//# sourceMappingURL=extend-broker-implementation.js.map","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/toConsumableArray'), require('dashify'), require('indefinite-article')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/toConsumableArray', 'dashify', 'indefinite-article'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.compilerr = {}, global._toConsumableArray, global.dashify, global.indefiniteArticle));\n})(this, (function (exports, _toConsumableArray, dashify, indefiniteArticle) { 'use strict';\n\n    var applyModifiers = function applyModifiers(name, modifiers) {\n      if (modifiers === undefined) {\n        return name;\n      }\n      return modifiers.reduce(function (modifiedName, modifier) {\n        if (modifier === 'capitalize') {\n          var head = modifiedName.charAt(0).toUpperCase();\n          var tail = modifiedName.slice(1);\n          return \"\".concat(head).concat(tail);\n        }\n        if (modifier === 'dashify') {\n          return dashify(modifiedName);\n        }\n        if (modifier === 'prependIndefiniteArticle') {\n          return \"\".concat(indefiniteArticle(modifiedName), \" \").concat(modifiedName);\n        }\n        return modifiedName;\n      }, name);\n    };\n    var buildRegex = function buildRegex(variable) {\n      var expression = variable.name + variable.modifiers.map(function (modifier) {\n        return \"\\\\.\".concat(modifier, \"\\\\(\\\\)\");\n      }).join('');\n      return new RegExp(\"\\\\$\\\\{\".concat(expression, \"}\"), 'g');\n    };\n    var preRenderString = function preRenderString(string, parameters) {\n      var expressionRegex = /\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g;\n      var variables = [];\n      var expressionResult = expressionRegex.exec(string);\n      while (expressionResult !== null) {\n        var variable = {\n          modifiers: [],\n          name: expressionResult[1]\n        };\n        if (expressionResult[3] !== undefined) {\n          var modifiersRegex = /\\.[^(]+\\(\\)/g;\n          var modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n          while (modifiersRegexResult !== null) {\n            variable.modifiers.push(modifiersRegexResult[0].slice(1, -2));\n            modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n          }\n        }\n        variables.push(variable);\n        expressionResult = expressionRegex.exec(string);\n      }\n      var preRenderedParts = variables.reduce(function (parts, variable) {\n        return parts.map(function (part) {\n          if (typeof part === 'string') {\n            return part.split(buildRegex(variable)).reduce(function (prts, prt, index) {\n              if (index === 0) {\n                return [prt];\n              }\n              if (variable.name in parameters) {\n                return [].concat(_toConsumableArray(prts), [applyModifiers(parameters[variable.name], variable.modifiers), prt]);\n              }\n              return [].concat(_toConsumableArray(prts), [function (prmtrs) {\n                return applyModifiers(prmtrs[variable.name], variable.modifiers);\n              }, prt]);\n            }, []);\n          }\n          return [part];\n        }).reduce(function (prts, part) {\n          return [].concat(_toConsumableArray(prts), _toConsumableArray(part));\n        }, []);\n      }, [string]);\n      return function (missingParameters) {\n        return preRenderedParts.reduce(function (renderedParts, preRenderedPart) {\n          if (typeof preRenderedPart === 'string') {\n            return [].concat(_toConsumableArray(renderedParts), [preRenderedPart]);\n          }\n          return [].concat(_toConsumableArray(renderedParts), [preRenderedPart(missingParameters)]);\n        }, []).join('');\n      };\n    };\n    var compile = function compile(template) {\n      var knownParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var renderCode = template.code === undefined ? undefined : preRenderString(template.code, knownParameters);\n      var renderMessage = template.message === undefined ? undefined : preRenderString(template.message, knownParameters);\n      function render() {\n        var causeOrMissingParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var optionalCause = arguments.length > 1 ? arguments[1] : undefined;\n        var hasNoOptionalCause = optionalCause === undefined && (causeOrMissingParameters instanceof Error || causeOrMissingParameters.code !== undefined && causeOrMissingParameters.code.slice(-9) === 'Exception');\n        var _ref = hasNoOptionalCause ? {\n            cause: causeOrMissingParameters,\n            missingParameters: {}\n          } : {\n            cause: optionalCause,\n            missingParameters: causeOrMissingParameters\n          },\n          cause = _ref.cause,\n          missingParameters = _ref.missingParameters;\n        var err = renderMessage === undefined ? new Error() : new Error(renderMessage(missingParameters));\n        if (cause !== null) {\n          err.cause = cause;\n        }\n        if (renderCode !== undefined) {\n          err.code = renderCode(missingParameters);\n        }\n        if (template.status !== undefined) {\n          err.status = template.status;\n        }\n        return err;\n      }\n      return render;\n    };\n\n    exports.compile = compile;\n\n}));\n","/*!\n * dashify <https://github.com/jonschlinkert/dashify>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = (str, options) => {\n  if (typeof str !== 'string') throw new TypeError('expected a string');\n  return str.trim()\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\W/g, m => /[À-ž]/.test(m) ? m : '-')\n    .replace(/^-+|-+$/g, '')\n    .replace(/-{2,}/g, m => options && options.condense ? '-' : m)\n    .toLowerCase();\n};\n","import { createBroker } from 'broker-factory';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const wrap = createBroker({\n    characterize: ({ call }) => {\n        return () => call('characterize');\n    },\n    encode: ({ call }) => {\n        return (recordingId, timeslice) => {\n            return call('encode', { recordingId, timeslice });\n        };\n    },\n    record: ({ call }) => {\n        return async (recordingId, sampleRate, typedArrays) => {\n            await call('record', { recordingId, sampleRate, typedArrays }, typedArrays.map(({ buffer }) => buffer));\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","import { load } from 'extendable-media-recorder-wav-encoder-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst extendableMediaRecorderWavEncoder = load(url);\nexport const characterize = extendableMediaRecorderWavEncoder.characterize;\nexport const connect = extendableMediaRecorderWavEncoder.connect;\nexport const disconnect = extendableMediaRecorderWavEncoder.disconnect;\nexport const encode = extendableMediaRecorderWavEncoder.encode;\nexport const isSupported = extendableMediaRecorderWavEncoder.isSupported;\nexport const record = extendableMediaRecorderWavEncoder.record;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the extendable-media-recorder-wav-encoder-worker package.\nexport const worker = `(()=>{var e={455:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,s=536870912,a=2*s,o=function(e,t){return function(r){var o=t.get(r),i=void 0===o?r.size:o<a?o+1:0;if(!r.has(i))return e(r,i);if(r.size<s){for(;r.has(i);)i=Math.floor(Math.random()*a);return e(r,i)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,l=r(i),c=o(l,i),u=t(c);e.addUniqueNumber=u,e.generateUniqueNumber=c}(t)}},t={};function r(n){var s=t[n];if(void 0!==s)return s.exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,r),a.exports}(()=>{\"use strict\";const e=-32603,t=-32602,n=-32601,s=(e,t)=>Object.assign(new Error(e),{status:t}),a=t=>s('The handler of the method called \"'.concat(t,'\" returned an unexpected result.'),e),o=(t,r)=>async o=>{let{data:{id:i,method:l,params:c}}=o;const u=r[l];try{if(void 0===u)throw(e=>s('The requested method called \"'.concat(e,'\" is not supported.'),n))(l);const r=void 0===c?u():u(c);if(void 0===r)throw(t=>s('The handler of the method called \"'.concat(t,'\" returned no required result.'),e))(l);const o=r instanceof Promise?await r:r;if(null===i){if(void 0!==o.result)throw a(l)}else{if(void 0===o.result)throw a(l);const{result:e,transferables:r=[]}=o;t.postMessage({id:i,result:e},r)}}catch(e){const{message:r,status:n=-32603}=e;t.postMessage({error:{code:n,message:r},id:i})}};var i=r(455);const l=new Map,c=(e,r,n)=>({...r,connect:t=>{let{port:n}=t;n.start();const s=e(n,r),a=(0,i.generateUniqueNumber)(l);return l.set(a,(()=>{s(),n.close(),l.delete(a)})),{result:a}},disconnect:e=>{let{portId:r}=e;const n=l.get(r);if(void 0===n)throw(e=>s('The specified parameter called \"portId\" with the given value \"'.concat(e,'\" does not identify a port connected to this worker.'),t))(r);return n(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=n();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),u=function(e,t){const r=c(u,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0),n=o(e,r);return e.addEventListener(\"message\",n),()=>e.removeEventListener(\"message\",n)},d=e=>e.reduce(((e,t)=>e+t.length),0),h=(e,t)=>{const r=[];let n=0;e:for(;n<t;){const t=e.length;for(let s=0;s<t;s+=1){const t=e[s];void 0===r[s]&&(r[s]=[]);const a=t.shift();if(void 0===a)break e;r[s].push(a),0===s&&(n+=a.length)}}if(n>t){const s=n-t;r.forEach(((t,r)=>{const n=t.pop(),a=n.length-s;t.push(n.subarray(0,a)),e[r].unshift(n.subarray(a))}))}return r},f=new Map,m=(e=>(t,r,n)=>{const s=e.get(t);if(void 0===s){const s={channelDataArrays:n.map((e=>[e])),isComplete:!0,sampleRate:r};return e.set(t,s),s}return s.channelDataArrays.forEach(((e,t)=>e.push(n[t]))),s})(f),p=((e,t)=>(r,n,s,a)=>{const o=s>>3,i=\"subsequent\"===n?0:44,l=r.length,c=e(r[0]),u=new ArrayBuffer(c*l*o+i),d=new DataView(u);return\"subsequent\"!==n&&t(d,s,l,\"complete\"===n?c:Number.POSITIVE_INFINITY,a),r.forEach(((e,t)=>{let r=i+t*o;e.forEach((e=>{const t=e.length;for(let n=0;n<t;n+=1){const t=e[n];d.setInt16(r,t<0?32768*Math.max(-1,t):32767*Math.min(1,t),!0),r+=l*o}}))})),[u]})(d,((e,t,r,n,s)=>{const a=t>>3,o=Math.min(n*r*a,4294967251);e.setUint32(0,1380533830),e.setUint32(4,o+36,!0),e.setUint32(8,1463899717),e.setUint32(12,1718449184),e.setUint32(16,16,!0),e.setUint16(20,1,!0),e.setUint16(22,r,!0),e.setUint32(24,s,!0),e.setUint32(28,s*r*a,!0),e.setUint16(32,r*a,!0),e.setUint16(34,t,!0),e.setUint32(36,1684108385),e.setUint32(40,o,!0)})),v=new Map;u(self,{characterize:()=>({result:/^audio\\\\/wav$/}),encode:e=>{let{recordingId:t,timeslice:r}=e;const n=v.get(t);void 0!==n&&(v.delete(t),n.reject(new Error(\"Another request was made to initiate an encoding.\")));const s=f.get(t);if(null!==r){if(void 0===s||d(s.channelDataArrays[0])*(1e3/s.sampleRate)<r)return new Promise(((e,n)=>{v.set(t,{reject:n,resolve:e,timeslice:r})}));const e=h(s.channelDataArrays,Math.ceil(r*(s.sampleRate/1e3))),n=p(e,s.isComplete?\"initial\":\"subsequent\",16,s.sampleRate);return s.isComplete=!1,{result:n,transferables:n}}if(void 0!==s){const e=p(s.channelDataArrays,s.isComplete?\"complete\":\"subsequent\",16,s.sampleRate);return f.delete(t),{result:e,transferables:e}}return{result:[],transferables:[]}},record:e=>{let{recordingId:t,sampleRate:r,typedArrays:n}=e;const s=m(t,r,n),a=v.get(t);if(void 0!==a&&d(s.channelDataArrays[0])*(1e3/r)>=a.timeslice){const e=h(s.channelDataArrays,Math.ceil(a.timeslice*(r/1e3))),n=p(e,s.isComplete?\"initial\":\"subsequent\",16,r);s.isComplete=!1,v.delete(t),a.resolve({result:n,transferables:n})}return{result:null}}})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderIds = new Set();\nexport const wrap = createBroker({\n    encode: ({ call }) => {\n        return async (encoderId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderId, timeslice });\n            encoderIds.delete(encoderId);\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderId = addUniqueNumber(encoderIds);\n            const port = await call('instantiate', { encoderId, mimeType, sampleRate });\n            return { encoderId, port };\n        };\n    },\n    register: ({ call }) => {\n        return (port) => {\n            return call('register', { port }, [port]);\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst mediaEncoderHost = loadWorker(url);\nexport const connect = mediaEncoderHost.connect;\nexport const disconnect = mediaEncoderHost.disconnect;\nexport const encode = mediaEncoderHost.encode;\nexport const instantiate = mediaEncoderHost.instantiate;\nexport const isSupported = mediaEncoderHost.isSupported;\nexport const register = mediaEncoderHost.register;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the media-encoder-host-worker package.\nexport const worker = `(()=>{var e={455:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,s=2*o,a=function(e,t){return function(r){var a=t.get(r),c=void 0===a?r.size:a<s?a+1:0;if(!r.has(c))return e(r,c);if(r.size<o){for(;r.has(c);)c=Math.floor(Math.random()*s);return e(r,c)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(c);)c=Math.floor(Math.random()*n);return e(r,c)}},c=new WeakMap,i=r(c),l=a(i,c),u=t(l);e.addUniqueNumber=u,e.generateUniqueNumber=l}(t)}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}(()=>{\"use strict\";const e=-32603,t=-32602,n=-32601,o=(e,t)=>Object.assign(new Error(e),{status:t}),s=t=>o('The handler of the method called \"'.concat(t,'\" returned an unexpected result.'),e),a=(t,r)=>async a=>{let{data:{id:c,method:i,params:l}}=a;const u=r[i];try{if(void 0===u)throw(e=>o('The requested method called \"'.concat(e,'\" is not supported.'),n))(i);const r=void 0===l?u():u(l);if(void 0===r)throw(t=>o('The handler of the method called \"'.concat(t,'\" returned no required result.'),e))(i);const a=r instanceof Promise?await r:r;if(null===c){if(void 0!==a.result)throw s(i)}else{if(void 0===a.result)throw s(i);const{result:e,transferables:r=[]}=a;t.postMessage({id:c,result:e},r)}}catch(e){const{message:r,status:n=-32603}=e;t.postMessage({error:{code:n,message:r},id:c})}};var c=r(455);const i=new Map,l=(e,r,n)=>({...r,connect:t=>{let{port:n}=t;n.start();const o=e(n,r),s=(0,c.generateUniqueNumber)(i);return i.set(s,(()=>{o(),n.close(),i.delete(s)})),{result:s}},disconnect:e=>{let{portId:r}=e;const n=i.get(r);if(void 0===n)throw(e=>o('The specified parameter called \"portId\" with the given value \"'.concat(e,'\" does not identify a port connected to this worker.'),t))(r);return n(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=n();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),u=function(e,t){const r=l(u,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0),n=a(e,r);return e.addEventListener(\"message\",n),()=>e.removeEventListener(\"message\",n)},d=e=>{e.onmessage=null,e.close()},h=new WeakMap,f=new WeakMap,p=(e=>{const t=(r=e,{...r,connect:e=>{let{call:t}=e;return async()=>{const{port1:e,port2:r}=new MessageChannel,n=await t(\"connect\",{port:e},[e]);return h.set(r,n),r}},disconnect:e=>{let{call:t}=e;return async e=>{const r=h.get(e);if(void 0===r)throw new Error(\"The given port is not connected.\");await t(\"disconnect\",{portId:r})}},isSupported:e=>{let{call:t}=e;return()=>t(\"isSupported\")}});var r;return e=>{const r=(e=>{if(f.has(e))return f.get(e);const t=new Map;return f.set(e,t),t})(e);e.addEventListener(\"message\",(e=>{let{data:t}=e;const{id:n}=t;if(null!==n&&r.has(n)){const{reject:e,resolve:o}=r.get(n);r.delete(n),void 0===t.error?o(t.result):e(new Error(t.error.message))}})),(e=>\"function\"==typeof e.start)(e)&&e.start();const n=function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return new Promise(((s,a)=>{const i=(0,c.generateUniqueNumber)(r);r.set(i,{reject:a,resolve:s}),null===n?e.postMessage({id:i,method:t},o):e.postMessage({id:i,method:t,params:n},o)}))},o=function(t,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];e.postMessage({id:null,method:t,params:r},n)};let s={};for(const[e,r]of Object.entries(t))s={...s,[e]:r({call:n,notify:o})};return{...s}}})({characterize:e=>{let{call:t}=e;return()=>t(\"characterize\")},encode:e=>{let{call:t}=e;return(e,r)=>t(\"encode\",{recordingId:e,timeslice:r})},record:e=>{let{call:t}=e;return async(e,r,n)=>{await t(\"record\",{recordingId:e,sampleRate:r,typedArrays:n},n.map((e=>{let{buffer:t}=e;return t})))}}}),w=async(e,t)=>{const r=p(t),n=await r.characterize(),o=n.toString();if(e.has(o))throw new Error(\"There is already an encoder stored which handles exactly the same mime types.\");return e.set(o,[n,r]),n},m=new Map,g=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error(\"There was no instance of an encoder stored with the given id.\");return r})(m),v=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(m,g),y=new Map,M=((e,t)=>r=>{const[n,o,s,a]=t(r);return s?new Promise((t=>{o.onmessage=s=>{let{data:c}=s;0===c.length?(e(o),t(n.encode(r,null))):n.record(r,a,c)}})):n.encode(r,null)})(d,v),E=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error(\"There is no encoder registered which could handle the given mimeType.\")})(y),b=((e,t,r)=>(n,o,s)=>{if(t.has(n))throw new Error('There is already an encoder registered with an id called \"'.concat(n,'\".'));const a=r(o),{port1:c,port2:i}=new MessageChannel,l=[a,c,!0,s];return t.set(n,l),c.onmessage=t=>{let{data:r}=t;0===r.length?(e(c),l[2]=!1):a.record(n,s,r.map((e=>\"number\"==typeof e?new Float32Array(e):e)))},i})(d,m,E),T=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(g);u(self,{encode:async e=>{let{encoderId:t,timeslice:r}=e;const n=null===r?await M(t):await T(t,r);return{result:n,transferables:n}},instantiate:e=>{let{encoderId:t,mimeType:r,sampleRate:n}=e;const o=b(t,r,n);return{result:o,transferables:[o]}},register:async e=>{let{port:t}=e;return{result:await w(y,t)}}})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","export const createBlobEventFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        // Bug #14: Safari does not yet support the BlobEvent.\n        if (nativeBlobEventConstructor === null) {\n            const { data, ...eventInit } = blobEventInit;\n            const fakeBlobEvent = new Event(type, eventInit);\n            fakeBlobEvent.data = data;\n            return fakeBlobEvent;\n        }\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n//# sourceMappingURL=blob-event-factory.js.map","export const createInvalidModificationError = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-modification-error.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=not-supported-error.js.map","export const observable = Symbol.observable || \"@@observable\";\r\n//# sourceMappingURL=symbols.js.map","const noop = () => { };\r\nconst rethrow = (error) => {\r\n    throw error;\r\n};\r\nexport function toObserver(observer) {\r\n    if (observer) {\r\n        if (observer.next && observer.error && observer.complete) {\r\n            return observer;\r\n        }\r\n        return {\r\n            complete: (observer.complete ?? noop).bind(observer),\r\n            error: (observer.error ?? rethrow).bind(observer),\r\n            next: (observer.next ?? noop).bind(observer),\r\n        };\r\n    }\r\n    return {\r\n        complete: noop,\r\n        error: rethrow,\r\n        next: noop,\r\n    };\r\n}\r\n//# sourceMappingURL=to-observer.js.map","export const createAnimationFrame = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null || window.cancelAnimationFrame === undefined || window.requestAnimationFrame === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let animationFrameHandle = window.requestAnimationFrame(function animationFrameCallback(timestamp) {\n            animationFrameHandle = window.requestAnimationFrame(animationFrameCallback);\n            observer.next(timestamp);\n        });\n        return () => window.cancelAnimationFrame(animationFrameHandle);\n    });\n};\n//# sourceMappingURL=animation-frame.js.map","export const emitNotSupportedError = (observer) => {\n    observer.error(new Error('The required browser API seems to be not supported.'));\n    return () => { }; // tslint:disable-line:no-empty\n};\n//# sourceMappingURL=emit-not-supported-error.js.map","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\nexport const on = createOn(wrapSubscribeFunction);\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n//# sourceMappingURL=module.js.map","// @todo TypeScript does not include type definitions for the Reporting API yet.\nexport const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapSubscribeFunction = (patch, toObserver) => {\n    const emptyFunction = () => { }; // tslint:disable-line:no-empty\n    const isNextFunction = (args) => typeof args[0] === 'function';\n    return (innerSubscribe) => {\n        const subscribe = ((...args) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n            return emptyFunction;\n        });\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args) => ({ unsubscribe: subscribe(...args) })\n        });\n        return patch(subscribe);\n    };\n};\n//# sourceMappingURL=wrap-subscribe-function.js.map","import { observable } from \"./symbols\";\r\nexport function patch(arg) {\r\n    if (!Symbol.observable) {\r\n        if (typeof arg === \"function\" &&\r\n            arg.prototype &&\r\n            arg.prototype[Symbol.observable]) {\r\n            arg.prototype[observable] = arg.prototype[Symbol.observable];\r\n            delete arg.prototype[Symbol.observable];\r\n        }\r\n        else {\r\n            arg[observable] = arg[Symbol.observable];\r\n            delete arg[Symbol.observable];\r\n        }\r\n    }\r\n    return arg;\r\n}\r\n//# sourceMappingURL=patch.js.map","export const createMutations = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.MutationObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const mutationObserver = new window.MutationObserver((records) => observer.next(records));\n        try {\n            mutationObserver.observe(htmlElement, options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => mutationObserver.disconnect();\n    });\n};\n//# sourceMappingURL=mutations.js.map","export const createMapSubscribableThing = (wrapSubscribeFunction) => (subscribableThing, map) => wrapSubscribeFunction((observer) => subscribableThing({ ...observer, next: (value) => observer.next(map(value)) }));\n//# sourceMappingURL=map-subscribable-thing.js.map","export const createPrependSubscribableThing = (wrapSubscribeFunction) => (subscribableThing, prependedValue) => wrapSubscribeFunction((observer) => {\n    observer.next(prependedValue);\n    return subscribableThing(observer);\n});\n//# sourceMappingURL=prepend-subscribable-thing.js.map","export const createAttribute = (mapSubscribableThing, mutations, prependSubscribableThing) => {\n    return (htmlElement, name) => {\n        const getAttribute = () => htmlElement.getAttribute(name);\n        return prependSubscribableThing(mapSubscribableThing(mutations(htmlElement, {\n            attributeFilter: [name],\n            childList: false,\n            subtree: false\n        }), () => getAttribute()), getAttribute());\n    };\n};\n//# sourceMappingURL=attribute.js.map","export const createGeolocation = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.geolocation === undefined ||\n            window.navigator.geolocation.clearWatch === undefined ||\n            window.navigator.geolocation.watchPosition === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const watchId = window.navigator.geolocation.watchPosition((position) => observer.next(position), (err) => observer.error(err), options);\n        return () => window.navigator.geolocation.clearWatch(watchId);\n    });\n};\n//# sourceMappingURL=geolocation.js.map","export const createIntersections = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (htmlElement, options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.IntersectionObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const intersectionObserverObserver = new window.IntersectionObserver((entries) => observer.next(entries), options);\n        try {\n            intersectionObserverObserver.observe(htmlElement);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => intersectionObserverObserver.disconnect();\n    });\n};\n//# sourceMappingURL=intersections.js.map","export const createMediaDevices = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return () => wrapSubscribeFunction((observer) => {\n        if (window === null ||\n            window.navigator === undefined ||\n            window.navigator.mediaDevices === undefined ||\n            window.navigator.mediaDevices.enumerateDevices === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        let isActive = true;\n        const enumerateDevices = () => {\n            window.navigator.mediaDevices.enumerateDevices().then((mediaDevices) => {\n                if (isActive) {\n                    observer.next(mediaDevices);\n                }\n            }, (err) => {\n                if (isActive) {\n                    unsubscribe();\n                    observer.error(err);\n                }\n            });\n        };\n        const unsubscribe = () => {\n            isActive = false;\n            window.navigator.mediaDevices.removeEventListener('devicechange', enumerateDevices);\n        };\n        enumerateDevices();\n        window.navigator.mediaDevices.addEventListener('devicechange', enumerateDevices);\n        return unsubscribe;\n    });\n};\n//# sourceMappingURL=media-devices.js.map","export const createMediaQueryMatch = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (mediaQueryString) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.matchMedia === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const mediaQueryList = window.matchMedia(mediaQueryString);\n        observer.next(mediaQueryList.matches);\n        mediaQueryList.onchange = () => observer.next(mediaQueryList.matches);\n        return () => {\n            mediaQueryList.onchange = null;\n        };\n    });\n};\n//# sourceMappingURL=media-query-match.js.map","export const createMetrics = (emitNotSupportedError, window, wrapSubscribeFunction) => {\n    return (options) => wrapSubscribeFunction((observer) => {\n        if (window === null || window.PerformanceObserver === undefined) {\n            return emitNotSupportedError(observer);\n        }\n        const performanceObserver = new window.PerformanceObserver((entryList) => observer.next(entryList.getEntries()));\n        try {\n            performanceObserver.observe(options);\n        }\n        catch (err) {\n            observer.error(err);\n        }\n        return () => performanceObserver.disconnect();\n    });\n};\n//# sourceMappingURL=metrics.js.map","export const createMidiInputs = (wrapSubscribeFunction) => {\n    return (midiAccess) => wrapSubscribeFunction((observer) => {\n        let midiInputs = Array.from(midiAccess.inputs.values());\n        const emitMidiInputs = () => {\n            const midiAccessInputs = midiAccess.inputs;\n            if (midiInputs.length !== midiAccessInputs.size || midiInputs.some(({ id }) => !midiAccessInputs.has(id))) {\n                midiInputs = Array.from(midiAccessInputs.values());\n                observer.next(midiInputs);\n            }\n        };\n        observer.next(midiInputs);\n        midiAccess.addEventListener('statechange', emitMidiInputs);\n        return () => midiAccess.removeEventListener('statechange', emitMidiInputs);\n    });\n};\n//# sourceMappingURL=midi-inputs.js.map","export const createMidiOutputs = (wrapSubscribeFunction) => {\n    return (midiAccess) => wrapSubscribeFunction((observer) => {\n        let midiOutputs = Array.from(midiAccess.outputs.values());\n        const emitMidiOutputs = () => {\n            const midiAccessOutputs = midiAccess.outputs;\n            if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(({ id }) => !midiAccessOutputs.has(id))) {\n                midiOutputs = Array.from(midiAccessOutputs.values());\n                observer.next(midiOutputs);\n            }\n        };\n        observer.next(midiOutputs);\n        midiAccess.addEventListener('statechange', emitMidiOutputs);\n        return () => midiAccess.removeEventListener('statechange', emitMidiOutputs);\n    });\n};\n//# sourceMappingURL=midi-outputs.js.map","export const createOn = (wrapSubscribeFunction) => {\n    return (target, type, options) => wrapSubscribeFunction((observer) => {\n        const listener = (event) => observer.next(event);\n        target.addEventListener(type, listener, options);\n        return () => target.removeEventListener(type, listener, options);\n    });\n};\n//# sourceMappingURL=on.js.map","import { compile } from 'compilerr';\nconst JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\nexport const renderMethodNotFoundError = compile({\n    message: 'The requested method called \"${method}\" is not supported.',\n    status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\nexport const renderMissingResponseError = compile({\n    message: 'The handler of the method called \"${method}\" returned no required result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnexpectedResultError = compile({\n    message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnknownPortIdError = compile({\n    message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n    status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});\n//# sourceMappingURL=error-renderers.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { on } from 'subscribable-things';\nimport { isSupported } from 'worker-factory';\nimport { createAddRecorderAudioWorkletModule } from './factories/add-recorder-audio-worklet-module';\nimport { createListener } from './factories/listener';\nimport { createPostMessageFactory } from './factories/post-message-factory';\nimport { createRecorderAudioWorkletNodeFactory } from './factories/recorder-audio-worklet-node-factory';\nimport { validateState } from './functions/validate-state';\nimport { worklet } from './worklet/worklet';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const addRecorderAudioWorkletModule = createAddRecorderAudioWorkletModule(Blob, URL, worklet);\nexport const createRecorderAudioWorkletNode = createRecorderAudioWorkletNodeFactory(createListener, createPostMessageFactory(generateUniqueNumber), on, validateState);\nexport { isSupported };\n//# sourceMappingURL=module.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { renderUnknownPortIdError } from './error-renderers';\nimport { isSupportingTransferables } from './is-supporting-transferables';\nconst DESTROY_WORKER_FUNCTIONS = new Map();\nexport const extendWorkerImplementation = (createWorker, partialWorkerImplementation, isSupportedFunction) => ({\n    ...partialWorkerImplementation,\n    connect: ({ port }) => {\n        port.start();\n        const destroyWorker = createWorker(port, partialWorkerImplementation);\n        const portId = generateUniqueNumber(DESTROY_WORKER_FUNCTIONS);\n        DESTROY_WORKER_FUNCTIONS.set(portId, () => {\n            destroyWorker();\n            port.close();\n            DESTROY_WORKER_FUNCTIONS.delete(portId);\n        });\n        return { result: portId };\n    },\n    disconnect: ({ portId }) => {\n        const destroyWorker = DESTROY_WORKER_FUNCTIONS.get(portId);\n        if (destroyWorker === undefined) {\n            throw renderUnknownPortIdError({ portId: portId.toString() });\n        }\n        destroyWorker();\n        return { result: null };\n    },\n    isSupported: async () => {\n        const isSelfSupported = await isSupportingTransferables();\n        if (isSelfSupported) {\n            const result = isSupportedFunction();\n            const synchronousResult = result instanceof Promise ? await result : result;\n            return { result: synchronousResult };\n        }\n        return { result: false };\n    }\n});\n//# sourceMappingURL=extend-worker-implementation.js.map","export const createAddRecorderAudioWorkletModule = (blobConstructor, urlConstructor, worklet) => {\n    return async (addAudioWorkletModule) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n        try {\n            await addAudioWorkletModule(url);\n        }\n        finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n//# sourceMappingURL=add-recorder-audio-worklet-module.js.map","// This is the minified and stringified code of the recorder-audio-worklet-processor package.\nexport const worklet = `(()=>{\"use strict\";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._state=\"inactive\",this.port.onmessage=e=>{let{data:t}=e;\"pause\"===t.method?\"active\"===this._state||\"recording\"===this._state?(this._state=\"paused\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"record\"===t.method?\"inactive\"===this._state?(this._encoderPort=t.params.encoderPort,this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"resume\"===t.method?\"paused\"===this._state?(this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"stop\"===t.method?\"active\"!==this._state&&\"paused\"!==this._state&&\"recording\"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(t.id):(this._stop(this._encoderPort),this._sendAcknowledgement(t.id)):\"number\"==typeof t.id&&this.port.postMessage({error:{code:-32601,message:\"The requested method is not supported.\"},id:t.id})}}process(e){let[t]=e;if(\"inactive\"===this._state||\"paused\"===this._state)return!0;if(\"active\"===this._state){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0===t.length)return!0;this._state=\"recording\"}if(\"recording\"===this._state&&null!==this._encoderPort){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0!==t.length)return this._encoderPort.postMessage(t,t.map((e=>{let{buffer:t}=e;return t}))),!0;this._stop(this._encoderPort)}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:\"The internal state does not allow to process the given message.\"},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state=\"stopped\"}}e.parameterDescriptors=[],registerProcessor(\"recorder-audio-worklet-processor\",e)})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worklet.js.map","export const createRecorderAudioWorkletNodeFactory = (createListener, createPostMessage, on, validateState) => {\n    return (audioWorkletNodeConstructor, context, options = {}) => {\n        const audioWorkletNode = new audioWorkletNodeConstructor(context, 'recorder-audio-worklet-processor', {\n            ...options,\n            channelCountMode: 'explicit',\n            numberOfInputs: 1,\n            numberOfOutputs: 0\n        });\n        const ongoingRequests = new Map();\n        const postMessage = createPostMessage(ongoingRequests, audioWorkletNode.port);\n        const unsubscribe = on(audioWorkletNode.port, 'message')(createListener(ongoingRequests));\n        audioWorkletNode.port.start();\n        let state = 'inactive';\n        Object.defineProperties(audioWorkletNode, {\n            pause: {\n                get() {\n                    return async () => {\n                        validateState(['recording'], state);\n                        state = 'paused';\n                        return postMessage({\n                            method: 'pause'\n                        });\n                    };\n                }\n            },\n            port: {\n                get() {\n                    throw new Error(\"The port of a RecorderAudioWorkletNode can't be accessed.\");\n                }\n            },\n            record: {\n                get() {\n                    return async (encoderPort) => {\n                        validateState(['inactive'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'record',\n                            params: { encoderPort }\n                        }, [encoderPort]);\n                    };\n                }\n            },\n            resume: {\n                get() {\n                    return async () => {\n                        validateState(['paused'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'resume'\n                        });\n                    };\n                }\n            },\n            stop: {\n                get() {\n                    return async () => {\n                        validateState(['paused', 'recording'], state);\n                        state = 'stopped';\n                        try {\n                            await postMessage({ method: 'stop' });\n                        }\n                        finally {\n                            unsubscribe();\n                        }\n                    };\n                }\n            }\n        });\n        return audioWorkletNode;\n    };\n};\n//# sourceMappingURL=recorder-audio-worklet-node-factory.js.map","export const createListener = (ongoingRequests) => {\n    return ({ data: message }) => {\n        const { id } = message;\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=listener.js.map","export const createPostMessageFactory = (generateUniqueNumber) => {\n    return (ongoingRequests, port) => {\n        return (message, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n//# sourceMappingURL=post-message-factory.js.map","export const validateState = (expectedStates, currentState) => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(`Expected the state to be ${expectedStates\n            .map((expectedState) => `\"${expectedState}\"`)\n            .join(' or ')} but it was \"${currentState}\".`);\n    }\n};\n//# sourceMappingURL=validate-state.js.map","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    let index = 0;\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise = nativeContext.audioWorklet === undefined\n            ? fetchSource(moduleURL)\n                .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n                .then(() => {\n                const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n                }, undefined, (name, processorCtor) => {\n                    if (name.trim() === '') {\n                        throw createNotSupportedError();\n                    }\n                    const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                    if (nodeNameToProcessorConstructorMap !== undefined) {\n                        if (nodeNameToProcessorConstructorMap.has(name)) {\n                            throw createNotSupportedError();\n                        }\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                    }\n                    else {\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                    }\n                }, nativeContext.sampleRate, undefined, undefined));\n            })\n            : Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const currentIndex = index + 1;\n                index = currentIndex;\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedAudioWorkletProcessor = isSupportingPostMessage\n                    ? 'AudioWorkletProcessor'\n                    : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })(\n                 *     ${ patchedAudioWorkletProcessor },\n                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *         __collectBuffers = (array) => {\n                 *             array.forEach((element) => this.__buffers.add(element.buffer));\n                 *         };\n                 *\n                 *         process (inputs, outputs, parameters) {\n                 *             inputs.forEach(this.__collectBuffers);\n                 *             outputs.forEach(this.__collectBuffers);\n                 *             this.__collectBuffers(Object.values(parameters));\n                 *\n                 *             return super.process(\n                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *                 outputs,\n                 *                 parameters\n                 *             );\n                 *         }\n                 *\n                 *     })\n                 * );\n                 *\n                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                 *\n                 *     process () {\n                 *         return false;\n                 *     }\n                 *\n                 * })`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return nativeContext;\n                    }\n                    // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                })\n                    .then((nativeContextOrBackupOfflineAudioContext) => {\n                    if (nativeAudioWorkletNodeConstructor === null) {\n                        throw new SyntaxError();\n                    }\n                    try {\n                        // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                        new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                    }\n                    catch {\n                        throw new SyntaxError();\n                    }\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n            if (updatedResolvedRequestsOfContext === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                updatedResolvedRequestsOfContext.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n            if (updatedOngoingRequestsOfContext !== undefined) {\n                updatedOngoingRequestsOfContext.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        }\n        else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n            channelData[0] = 1;\n            channelData[1] = 1;\n            const source = nativeAudioContext.createBufferSource();\n            source.buffer = ones;\n            source.loop = true;\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n                if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n                source.stop();\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n            source.start();\n        }\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            }\n            catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n                setAudioNodeTailTime(this, 0);\n            }\n            else {\n                this._isBufferNullified = false;\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=convolver-node-constructor.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1, port2 } = new MessageChannel();\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n            port1.close();\n            port2.close();\n            resolve();\n        };\n        port2.onmessage = () => closeAndResolve();\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            closeAndResolve();\n        }\n    });\n};\n//# sourceMappingURL=detach-array-buffer.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n            setAudioNodeTailTime(this, 0.006);\n        }\n        get attack() {\n            return this._attack;\n        }\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=filter-buffer.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=minimal-offline-audio-context-constructor.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n};\n//# sourceMappingURL=native-delay-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n//# sourceMappingURL=native-script-processor-node.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max', // This attribute has no effect for nodes with no inputs.\n    channelInterpretation: 'speakers', // This attribute has no effect for nodes with no inputs.\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","export const getFirstSample = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n    return buffer[0];\n};\n//# sourceMappingURL=get-first-sample.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        // Bug #196 Only Safari sets the defaultValue to the initial value.\n        const defaultValue = nativeAudioParam.value;\n        const automationEventList = new AutomationEventList(defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #194: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                const currentTime = audioNode.context.currentTime;\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(currentTime);\n                }\n                // Bug #195: Firefox does not implicitly call setValueAtTime() if there is no previous event.\n                if (Array.from(automationEventList).length === 0) {\n                    automationEventList.add(createSetValueAutomationEvent(defaultValue, currentTime));\n                    nativeAudioParam.setValueAtTime(defaultValue, currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n//# sourceMappingURL=set-audio-node-tail-time.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","export const sanitizeChannelSplitterOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n//# sourceMappingURL=sanitize-channel-splitter-options.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=native-convolver-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n                isScriptProcessorNodeCreated = true;\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                        lastOrientation = orientation;\n                    }\n                    const positon = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                        lastPosition = positon;\n                    }\n                };\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index) => (value) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index) => (value) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input, initialValue, setValue) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return initialValue;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n                overwriteAccessors(audioParam, 'value', (get) => () => get.call(audioParam), (set) => (value) => {\n                    try {\n                        set.call(audioParam, value);\n                    }\n                    catch (err) {\n                        if (err.code !== 9) {\n                            throw err;\n                        }\n                    }\n                    createScriptProcessorNode();\n                    if (isOffline) {\n                        // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                        setValue(value);\n                    }\n                });\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n                return audioParam;\n            };\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome & Edge throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n        // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = nativeContext.createPanner();\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        const buffer = new Float32Array(1);\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                getFirstSample(inputBuffer, buffer, 0),\n                getFirstSample(inputBuffer, buffer, 1),\n                getFirstSample(inputBuffer, buffer, 2)\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                getFirstSample(inputBuffer, buffer, 3),\n                getFirstSample(inputBuffer, buffer, 4),\n                getFirstSample(inputBuffer, buffer, 5)\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n            // Bug #197: Safari does not deliver the messages before the promise returned by startRendering() resolves.\n            await new Promise((resolve) => setTimeout(resolve));\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome and Edge do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete().then(() => resolve(audioBuffer));\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData).then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            }, (err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=base-audio-context-constructor.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","export const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n    return nativeMediaStreamAudioDestinationNode;\n};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=audio-context-constructor.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=create-native-offline-audio-context.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=start-rendering.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { addRecorderAudioWorkletModule, createRecorderAudioWorkletNode } from 'recorder-audio-worklet';\nimport { AudioBuffer, AudioBufferSourceNode, AudioWorkletNode, ConstantSourceNode, MediaStreamAudioSourceNode, MinimalAudioContext, addAudioWorkletModule } from 'standardized-audio-context';\nconst ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';\n// @todo This should live in a separate file.\nconst createPromisedAudioNodesEncoderIdAndPort = async (audioBuffer, audioContext, channelCount, mediaStream, mimeType) => {\n    const { encoderId, port } = await instantiate(mimeType, audioContext.sampleRate);\n    if (AudioWorkletNode === undefined) {\n        throw new Error(ERROR_MESSAGE);\n    }\n    const audioBufferSourceNode = new AudioBufferSourceNode(audioContext, { buffer: audioBuffer });\n    const mediaStreamAudioSourceNode = new MediaStreamAudioSourceNode(audioContext, { mediaStream });\n    const recorderAudioWorkletNode = createRecorderAudioWorkletNode(AudioWorkletNode, audioContext, { channelCount });\n    return { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode };\n};\nexport const createWebAudioMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError) => {\n    return (eventTarget, mediaStream, mimeType) => {\n        var _a;\n        const sampleRate = (_a = mediaStream.getAudioTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings().sampleRate;\n        const audioContext = new MinimalAudioContext({ latencyHint: 'playback', sampleRate });\n        const length = Math.max(1024, Math.ceil(audioContext.baseLatency * audioContext.sampleRate));\n        const audioBuffer = new AudioBuffer({ length, sampleRate: audioContext.sampleRate });\n        const bufferedArrayBuffers = [];\n        const promisedAudioWorkletModule = addRecorderAudioWorkletModule((url) => {\n            if (addAudioWorkletModule === undefined) {\n                throw new Error(ERROR_MESSAGE);\n            }\n            return addAudioWorkletModule(audioContext, url);\n        });\n        let abortRecording = null;\n        let intervalId = null;\n        let promisedAudioNodesAndEncoderId = null;\n        let promisedPartialRecording = null;\n        let isAudioContextRunning = true;\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (promisedAudioNodesAndEncoderId === null) {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const resume = () => {\n            isAudioContextRunning = true;\n            return audioContext.resume();\n        };\n        const stop = () => {\n            if (promisedAudioNodesAndEncoderId === null) {\n                return;\n            }\n            if (abortRecording !== null) {\n                mediaStream.removeEventListener('addtrack', abortRecording);\n                mediaStream.removeEventListener('removetrack', abortRecording);\n            }\n            if (intervalId !== null) {\n                clearTimeout(intervalId);\n            }\n            promisedAudioNodesAndEncoderId.then(async ({ constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode }) => {\n                if (promisedPartialRecording !== null) {\n                    promisedPartialRecording.catch(() => {\n                        /* @todo Only catch the errors caused by a duplicate call to encode. */\n                    });\n                    promisedPartialRecording = null;\n                }\n                await recorderAudioWorkletNode.stop();\n                mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);\n                constantSourceNode.stop();\n                const arrayBuffers = await encode(encoderId, null);\n                if (promisedAudioNodesAndEncoderId === null) {\n                    await suspend();\n                }\n                dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                bufferedArrayBuffers.length = 0;\n                eventTarget.dispatchEvent(new Event('stop'));\n            });\n            promisedAudioNodesAndEncoderId = null;\n        };\n        const suspend = () => {\n            isAudioContextRunning = false;\n            return audioContext.suspend();\n        };\n        suspend();\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return promisedAudioNodesAndEncoderId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';\n            },\n            pause() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (isAudioContextRunning) {\n                    suspend();\n                    eventTarget.dispatchEvent(new Event('pause'));\n                }\n            },\n            resume() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (!isAudioContextRunning) {\n                    resume();\n                    eventTarget.dispatchEvent(new Event('resume'));\n                }\n            },\n            start(timeslice) {\n                var _a;\n                if (promisedAudioNodesAndEncoderId !== null) {\n                    throw createInvalidStateError();\n                }\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                eventTarget.dispatchEvent(new Event('start'));\n                const audioTracks = mediaStream.getAudioTracks();\n                // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n                const channelCount = audioTracks.length === 0\n                    ? 2\n                    : (_a = audioTracks[0].getSettings().channelCount) !== null && _a !== void 0 ? _a : 2;\n                promisedAudioNodesAndEncoderId = Promise.all([\n                    resume(),\n                    promisedAudioWorkletModule.then(() => createPromisedAudioNodesEncoderIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType))\n                ]).then(async ([, { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }]) => {\n                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);\n                    await new Promise((resolve) => {\n                        audioBufferSourceNode.onended = resolve;\n                        audioBufferSourceNode.connect(recorderAudioWorkletNode);\n                        audioBufferSourceNode.start(audioContext.currentTime + length / audioContext.sampleRate);\n                    });\n                    audioBufferSourceNode.disconnect(recorderAudioWorkletNode);\n                    // Bug #17: Safari does throttle the processing on hidden tabs if there is no active audio output.\n                    const constantSourceNode = new ConstantSourceNode(audioContext, { offset: 0 });\n                    constantSourceNode.onended = () => constantSourceNode.disconnect();\n                    constantSourceNode.connect(audioContext.destination);\n                    constantSourceNode.start();\n                    await recorderAudioWorkletNode.record(port);\n                    if (timeslice !== undefined) {\n                        promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n                    }\n                    return { constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode };\n                });\n                const tracks = mediaStream.getTracks();\n                abortRecording = () => {\n                    stop();\n                    eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n                };\n                mediaStream.addEventListener('addtrack', abortRecording);\n                mediaStream.addEventListener('removetrack', abortRecording);\n                intervalId = setInterval(() => {\n                    const currentTracks = mediaStream.getTracks();\n                    if ((currentTracks.length !== tracks.length || currentTracks.some((track, index) => track !== tracks[index])) &&\n                        abortRecording !== null) {\n                        abortRecording();\n                    }\n                }, 1000);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=web-audio-media-recorder.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-offline-audio-context.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { MultiBufferDataView } from 'multi-buffer-data-view';\nimport { on } from 'subscribable-things';\nexport const createWebmPcmMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger) => {\n    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType) => {\n        const audioTracks = mediaStream.getAudioTracks();\n        const bufferedArrayBuffers = [];\n        // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n        const channelCount = audioTracks.length === 0\n            ? undefined\n            : audioTracks[0].getSettings().channelCount;\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, { mimeType: 'audio/webm;codecs=pcm' });\n        const sampleRate = audioTracks.length === 0 ? undefined : audioTracks[0].getSettings().sampleRate;\n        let promisedPartialRecording = null;\n        let stopRecording = () => { }; // tslint:disable-line:no-empty\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (nativeMediaRecorder.state === 'inactive') {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const stop = () => {\n            if (nativeMediaRecorder.state === 'inactive') {\n                return;\n            }\n            if (promisedPartialRecording !== null) {\n                promisedPartialRecording.catch(() => {\n                    /* @todo Only catch the errors caused by a duplicate call to encode. */\n                });\n                promisedPartialRecording = null;\n            }\n            stopRecording();\n            stopRecording = () => { }; // tslint:disable-line:no-empty\n            nativeMediaRecorder.stop();\n        };\n        nativeMediaRecorder.addEventListener('error', () => {\n            stop();\n            // Bug #3 & #4: Chrome throws an error event without any error.\n            eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n        });\n        nativeMediaRecorder.addEventListener('start', () => eventTarget.dispatchEvent(new Event('start')));\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return nativeMediaRecorder.state;\n            },\n            pause() {\n                return nativeMediaRecorder.pause();\n            },\n            resume() {\n                return nativeMediaRecorder.resume();\n            },\n            start(timeslice) {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                if (nativeMediaRecorder.state === 'inactive') {\n                    if (sampleRate === undefined) {\n                        throw new Error('The sampleRate is not defined.');\n                    }\n                    let isRecording = false;\n                    let isStopped = false;\n                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.\n                    let pendingInvocations = 0;\n                    let promisedDataViewElementTypeEncoderIdAndPort = instantiate(mimeType, sampleRate);\n                    stopRecording = () => {\n                        isStopped = true;\n                    };\n                    const removeEventListener = on(nativeMediaRecorder, 'dataavailable')(({ data }) => {\n                        pendingInvocations += 1;\n                        promisedDataViewElementTypeEncoderIdAndPort = promisedDataViewElementTypeEncoderIdAndPort.then(async ({ dataView = null, elementType = null, encoderId, port }) => {\n                            const arrayBuffer = await data.arrayBuffer();\n                            pendingInvocations -= 1;\n                            const currentDataView = dataView === null\n                                ? new MultiBufferDataView([arrayBuffer])\n                                : new MultiBufferDataView([...dataView.buffers, arrayBuffer], dataView.byteOffset);\n                            if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {\n                                const lengthAndValue = readVariableSizeInteger(currentDataView, 0);\n                                if (lengthAndValue === null) {\n                                    return { dataView: currentDataView, elementType, encoderId, port };\n                                }\n                                const { value } = lengthAndValue;\n                                if (value !== 172351395) {\n                                    return { dataView, elementType, encoderId, port };\n                                }\n                                isRecording = true;\n                            }\n                            const { currentElementType, offset, contents } = decodeWebMChunk(currentDataView, elementType, channelCount);\n                            const remainingDataView = offset < currentDataView.byteLength\n                                ? new MultiBufferDataView(currentDataView.buffers, currentDataView.byteOffset + offset)\n                                : null;\n                            contents.forEach((content) => port.postMessage(content, content.map(({ buffer }) => buffer)));\n                            if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {\n                                encode(encoderId, null).then((arrayBuffers) => {\n                                    dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                                    bufferedArrayBuffers.length = 0;\n                                    eventTarget.dispatchEvent(new Event('stop'));\n                                });\n                                port.postMessage([]);\n                                port.close();\n                                removeEventListener();\n                            }\n                            return { dataView: remainingDataView, elementType: currentElementType, encoderId, port };\n                        });\n                    });\n                    if (timeslice !== undefined) {\n                        promisedDataViewElementTypeEncoderIdAndPort.then(({ encoderId }) => (promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice)));\n                    }\n                }\n                nativeMediaRecorder.start(100);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=webm-pcm-media-recorder.js.map","export const readVariableSizeIntegerLength = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n    const byte = dataView.getUint8(offset);\n    if (byte > 127) {\n        return 1;\n    }\n    if (byte > 63) {\n        return 2;\n    }\n    if (byte > 31) {\n        return 3;\n    }\n    if (byte > 15) {\n        return 4;\n    }\n    if (byte > 7) {\n        return 5;\n    }\n    if (byte > 3) {\n        return 6;\n    }\n    if (byte > 1) {\n        return 7;\n    }\n    if (byte > 0) {\n        return 8;\n    }\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n    return length === null ? null : length + 8;\n};\n//# sourceMappingURL=read-variable-size-integer-length.js.map","import { register as rgstr } from 'media-encoder-host';\nimport { createBlobEventFactory } from './factories/blob-event-factory';\nimport { createDecodeWebMChunk } from './factories/decode-web-m-chunk';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createEventTargetFactory } from './factories/event-target-factory';\nimport { createInvalidModificationError } from './factories/invalid-modification-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaRecorderConstructor } from './factories/media-recorder-constructor';\nimport { createNativeBlobEventConstructor } from './factories/native-blob-event-constructor';\nimport { createNativeMediaRecorderFactory } from './factories/native-media-recorder';\nimport { createNativeMediaRecorderConstructor } from './factories/native-media-recorder-constructor';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createReadElementContent } from './factories/read-element-content';\nimport { createReadElementType } from './factories/read-element-type';\nimport { createReadVariableSizeInteger } from './factories/read-variable-size-integer';\nimport { createWebAudioMediaRecorderFactory } from './factories/web-audio-media-recorder';\nimport { createWebmPcmMediaRecorderFactory } from './factories/webm-pcm-media-recorder';\nimport { createWindow } from './factories/window';\nimport { readVariableSizeIntegerLength } from './functions/read-variable-size-integer-length';\nimport { wrapEventListener } from './functions/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderRegexes = [];\nconst window = createWindow();\nconst nativeBlobEventConstructor = createNativeBlobEventConstructor(window);\nconst createBlobEvent = createBlobEventFactory(nativeBlobEventConstructor);\nconst createWebAudioMediaRecorder = createWebAudioMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError);\nconst readVariableSizeInteger = createReadVariableSizeInteger(readVariableSizeIntegerLength);\nconst readElementContent = createReadElementContent(readVariableSizeInteger);\nconst readElementType = createReadElementType(readVariableSizeInteger);\nconst decodeWebMChunk = createDecodeWebMChunk(readElementContent, readElementType);\nconst createWebmPcmMediaRecorder = createWebmPcmMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger);\nconst createEventTarget = createEventTargetFactory(window);\nconst nativeMediaRecorderConstructor = createNativeMediaRecorderConstructor(window);\nconst createNativeMediaRecorder = createNativeMediaRecorderFactory(createInvalidModificationError, createNotSupportedError);\nconst mediaRecorderConstructor = createMediaRecorderConstructor(createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, createEventTargetConstructor(createEventTarget, wrapEventListener), nativeMediaRecorderConstructor);\nexport { mediaRecorderConstructor as MediaRecorder };\nexport const isSupported = () => createIsSupportedPromise(window);\nexport const register = async (port) => {\n    encoderRegexes.push(await rgstr(port));\n};\n//# sourceMappingURL=module.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createNativeBlobEventConstructor = (window) => {\n    if (window !== null && window.BlobEvent !== undefined) {\n        return window.BlobEvent;\n    }\n    return null;\n};\n//# sourceMappingURL=native-blob-event-constructor.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-state-error.js.map","export const createReadVariableSizeInteger = (readVariableSizeIntegerLength) => {\n    return (dataView, offset) => {\n        const length = readVariableSizeIntegerLength(dataView, offset);\n        if (length === null) {\n            return length;\n        }\n        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);\n        if (firstDataByteOffset + length > dataView.byteLength) {\n            return null;\n        }\n        const firstDataByte = dataView.getUint8(firstDataByteOffset);\n        let value = firstDataByte & ((1 << (8 - (length % 8))) - 1); // tslint:disable-line:no-bitwise\n        for (let i = 1; i < length; i += 1) {\n            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise\n        }\n        return { length, value };\n    };\n};\n//# sourceMappingURL=read-variable-size-integer.js.map","export const createReadElementContent = (readVariableSizeInteger) => {\n    return (dataView, offset, type, channelCount = 2) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (type === 'master') {\n            return { content: null, length };\n        }\n        if (offset + length + value > dataView.byteLength) {\n            return null;\n        }\n        if (type === 'binary') {\n            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;\n            const content = Array.from({ length: channelCount }, () => new Float32Array(numberOfSamples));\n            for (let i = 0; i < numberOfSamples; i += 1) {\n                const elementOffset = i * channelCount + 1;\n                for (let j = 0; j < channelCount; j += 1) {\n                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);\n                }\n            }\n            return { content, length: length + value };\n        }\n        return { content: null, length: length + value };\n    };\n};\n//# sourceMappingURL=read-element-content.js.map","export const createReadElementType = (readVariableSizeInteger) => {\n    return (dataView, offset) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (value === 35) {\n            return { length, type: 'binary' };\n        }\n        if (value === 46 ||\n            value === 97 ||\n            value === 88713574 ||\n            value === 106212971 ||\n            value === 139690087 ||\n            value === 172351395 ||\n            value === 256095861) {\n            return { length, type: 'master' };\n        }\n        return { length, type: 'unknown' };\n    };\n};\n//# sourceMappingURL=read-element-type.js.map","export const createDecodeWebMChunk = (readElementContent, readElementType) => {\n    return (dataView, elementType, channelCount) => {\n        const contents = [];\n        let currentElementType = elementType;\n        let offset = 0;\n        while (offset < dataView.byteLength) {\n            if (currentElementType === null) {\n                const lengthAndType = readElementType(dataView, offset);\n                if (lengthAndType === null) {\n                    break;\n                }\n                const { length, type } = lengthAndType;\n                currentElementType = type;\n                offset += length;\n            }\n            else {\n                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);\n                if (contentAndLength === null) {\n                    break;\n                }\n                const { content, length } = contentAndLength;\n                currentElementType = null;\n                offset += length;\n                if (content !== null) {\n                    contents.push(content);\n                }\n            }\n        }\n        return { contents, currentElementType, offset };\n    };\n};\n//# sourceMappingURL=decode-web-m-chunk.js.map","export const createEventTargetFactory = (window) => {\n    return () => {\n        if (window === null) {\n            throw new Error('A native EventTarget could not be created.');\n        }\n        return window.document.createElement('p');\n    };\n};\n//# sourceMappingURL=event-target-factory.js.map","export const createNativeMediaRecorderConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.MediaRecorder === undefined ? null : window.MediaRecorder;\n};\n//# sourceMappingURL=native-media-recorder-constructor.js.map","export const createNativeMediaRecorderFactory = (createInvalidModificationError, createNotSupportedError) => {\n    return (nativeMediaRecorderConstructor, stream, mediaRecorderOptions) => {\n        const bufferedBlobs = [];\n        const dataAvailableListeners = new WeakMap();\n        const errorListeners = new WeakMap();\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);\n        const stopListeners = new WeakMap();\n        let isActive = true;\n        nativeMediaRecorder.addEventListener = ((addEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            setTimeout(() => {\n                                if (isActive && nativeMediaRecorder.state === 'inactive') {\n                                    bufferedBlobs.push(event.data);\n                                }\n                                else {\n                                    if (bufferedBlobs.length > 0) {\n                                        const blob = event.data;\n                                        Object.defineProperty(event, 'data', {\n                                            value: new Blob([...bufferedBlobs, blob], { type: blob.type })\n                                        });\n                                        bufferedBlobs.length = 0;\n                                    }\n                                    listener.call(nativeMediaRecorder, event);\n                                }\n                            });\n                        };\n                        dataAvailableListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'error') {\n                        // Bug #12 & #13: Firefox fires a regular event with an error property.\n                        patchedEventListener = (event) => {\n                            // Bug #3 & #4: Chrome throws an error event without any error.\n                            if (event.error === undefined) {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError() }));\n                                // Bug #1 & #2: Firefox throws an error event with an UnknownError.\n                            }\n                            else if (event.error.name === 'UnknownError') {\n                                const message = event.error.message;\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError(message) }));\n                            }\n                            else if (event instanceof ErrorEvent) {\n                                listener.call(nativeMediaRecorder, event);\n                            }\n                            else {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: event.error }));\n                            }\n                        };\n                        errorListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'stop') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            isActive = false;\n                            setTimeout(() => listener.call(nativeMediaRecorder, event));\n                        };\n                        stopListeners.set(listener, patchedEventListener);\n                    }\n                }\n                return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.addEventListener);\n        nativeMediaRecorder.dispatchEvent = ((dispatchEvent) => {\n            // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n            return (event) => {\n                let wasActive;\n                setTimeout(() => {\n                    wasActive = isActive;\n                    isActive = false;\n                });\n                const returnValue = dispatchEvent.call(nativeMediaRecorder, event);\n                setTimeout(() => (isActive = wasActive));\n                return returnValue;\n            };\n        })(nativeMediaRecorder.dispatchEvent);\n        nativeMediaRecorder.removeEventListener = ((removeEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        const dataAvailableListener = dataAvailableListeners.get(listener);\n                        if (dataAvailableListener !== undefined) {\n                            patchedEventListener = dataAvailableListener;\n                        }\n                    }\n                    else if (type === 'error') {\n                        const errorListener = errorListeners.get(listener);\n                        if (errorListener !== undefined) {\n                            patchedEventListener = errorListener;\n                        }\n                    }\n                    else if (type === 'stop') {\n                        const stopListener = stopListeners.get(listener);\n                        if (stopListener !== undefined) {\n                            patchedEventListener = stopListener;\n                        }\n                    }\n                }\n                return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.removeEventListener);\n        nativeMediaRecorder.start = ((start) => {\n            return (timeslice) => {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaRecorderOptions.mimeType !== undefined &&\n                    mediaRecorderOptions.mimeType.startsWith('audio/') &&\n                    stream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                isActive = timeslice !== undefined;\n                return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);\n            };\n        })(nativeMediaRecorder.start);\n        return nativeMediaRecorder;\n    };\n};\n//# sourceMappingURL=native-media-recorder.js.map","export const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor) => {\n    return class MediaRecorder extends eventTargetConstructor {\n        constructor(stream, options = {}) {\n            const { mimeType } = options;\n            if (nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                super(internalMediaRecorder);\n                this._internalMediaRecorder = internalMediaRecorder;\n            }\n            else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                }\n                else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            }\n            else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n                throw createNotSupportedError();\n            }\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n        get mimeType() {\n            return this._internalMediaRecorder.mimeType;\n        }\n        get ondataavailable() {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('dataavailable', boundListener);\n                this._ondataavailable = [value, boundListener];\n            }\n            else {\n                this._ondataavailable = null;\n            }\n        }\n        get onerror() {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('error', boundListener);\n                this._onerror = [value, boundListener];\n            }\n            else {\n                this._onerror = null;\n            }\n        }\n        get onpause() {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('pause', boundListener);\n                this._onpause = [value, boundListener];\n            }\n            else {\n                this._onpause = null;\n            }\n        }\n        get onresume() {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('resume', boundListener);\n                this._onresume = [value, boundListener];\n            }\n            else {\n                this._onresume = null;\n            }\n        }\n        get onstart() {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('start', boundListener);\n                this._onstart = [value, boundListener];\n            }\n            else {\n                this._onstart = null;\n            }\n        }\n        get onstop() {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('stop', boundListener);\n                this._onstop = [value, boundListener];\n            }\n            else {\n                this._onstop = null;\n            }\n        }\n        get state() {\n            return this._internalMediaRecorder.state;\n        }\n        pause() {\n            return this._internalMediaRecorder.pause();\n        }\n        resume() {\n            return this._internalMediaRecorder.resume();\n        }\n        start(timeslice) {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n        stop() {\n            return this._internalMediaRecorder.stop();\n        }\n        static isTypeSupported(mimeType) {\n            return ((nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType)));\n        }\n    };\n};\n//# sourceMappingURL=media-recorder-constructor.js.map","export const createEventTargetConstructor = (createEventTarget, wrapEventListener) => {\n    return class EventTarget {\n        constructor(nativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","export const createIsSupportedPromise = (window) => {\n    if (window !== null &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n        /*\n         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n         * audio codec.\n         */\n        return new Promise((resolve) => {\n            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n            if (window.MediaRecorder === undefined) {\n                return resolve(true);\n            }\n            // @todo captureStream() is not defined yet.\n            const canvasElement = document.createElement('canvas');\n            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n            canvasElement.getContext('2d');\n            if (typeof canvasElement.captureStream !== 'function') {\n                return resolve(false);\n            }\n            const mediaStream = canvasElement.captureStream();\n            const mimeType = 'audio/webm';\n            try {\n                const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n                mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                mediaRecorder.start();\n                setTimeout(() => mediaRecorder.stop(), 10);\n            }\n            catch (err) {\n                resolve(err.name === 'NotSupportedError');\n            }\n        });\n    }\n    return Promise.resolve(false);\n};\n//# sourceMappingURL=is-supported-promise.js.map","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n          return cache(collection, nextNumber);\n        }\n        // Quickly check if there is a theoretical chance to generate a new number.\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        }\n        // Otherwise use the full scale of safely usable integers.\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n}));\n","import React, { useState   } from \"react\";\nimport Seo from \"../components/Seo/seo\";\nimport { ReactMediaRecorder } from 'react-media-recorder';\n\nconst VoiceChat = () => {\n\n    const [isRecording, setIsRecording] = useState(false);\n    async function handleSubmit(mediaUrl) {\n        console.log(mediaUrl);\n\n        const audioBlob = await fetch(mediaUrl).then((r) => r.blob());\n        console.log(audioBlob);\n        const audioFile = new File([audioBlob], 'voice.wav', { type: 'audio/wav' });\n      \n\n        let bodyFormData = new FormData();\n        bodyFormData.append(\"client_speech\", audioFile);\n        bodyFormData.append(\"session_id\", \"\");\n {/*\n        let submit = await fetch(\"https://48fa-41-191-207-34.ngrok-free.app/stt\", {\n            method: \"POST\",\n            body: bodyFormData,\n            headers: {\n              'content-type': 'multipart/form-data'\n            }\n        }).then((response) => response.json())\n        .then((data) => {\n            console.log(data);\n            return data;\n        });\n\n        console.log(submit);\n*/}\n\n    }\n\n    return (\n        <>\n            <Seo\n                title=\"Talk to AI\"\n            />\n            <main>\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n                </link>\n\n                <div className=\"p-5\">\n                    <div className=\"content-container\">\n                        <div className=\"text-center \">\n                            <h3 className=\"listening text-white\">\n                                {isRecording\n                                    ? <div className=\"pt-20\"> <p>listening...</p></div>\n                                    :\n                                    <div className=\"pt-20\">\n                                        <p>Hey, Tatolo</p>\n\n                                        <p>How can I help you?</p>\n                                    </div>\n                                }\n                            </h3>\n                        </div>\n\n                    </div>\n                    <ReactMediaRecorder\n                        audio\n                        render={({ startRecording, stopRecording, mediaBlobUrl }) => (\n\n                            <div className=\"flex justify-center items-center \">\n                                <button className={`mic-toggle ${isRecording ? 'clicked' : ''}`} id=\"mic\">\n                                    <span onClick={() => {\n                                        setIsRecording(!isRecording)\n\n                                        if (isRecording == false) {\n                                            startRecording();\n                                        } else {\n                                            stopRecording();\n                                            handleSubmit(mediaBlobUrl);\n                                        }\n                                    }} className=\"material-icons\">mic</span>\n                                </button>\n                                {mediaBlobUrl && (\n                                    <audio hidden src={mediaBlobUrl} controls autoPlay />\n                                )}\n\n                            </div>\n\n                        )}\n                    />\n                </div>\n\n            </main>\n\n        </>\n    )\n}\n\nexport default VoiceChat;","/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function(phrase) {\n    var i, word;\n\n    // Getting the first word\n    var match = /\\w+/.exec(phrase);\n    if (match)\n        word = match[0];\n    else\n        return \"an\";\n\n    var l_word = word.toLowerCase();\n    // Specific start of words that should be preceeded by 'an'\n    var alt_cases = [\"honest\", \"hour\", \"hono\"];\n    for (i in alt_cases) {\n        if (l_word.indexOf(alt_cases[i]) == 0)\n            return \"an\";\n    }\n\n    // Single letter word which should be preceeded by 'an'\n    if (l_word.length == 1) {\n        if (\"aedhilmnorsx\".indexOf(l_word) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Capital words which should likely be preceeded by 'an'\n    if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n        return \"an\";\n    }\n\n    // Special cases where a word that begins with a vowel should be preceeded by 'a'\n    var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n    for (i = 0; i < regexes.length; i++) {\n        if (l_word.match(regexes[i]))\n            return \"a\"\n    }\n\n    // Special capital words (UK, UN)\n    if (word.match(/^U[NK][AIEO]/)) {\n        return \"a\";\n    }\n    else if (word == word.toUpperCase()) {\n        if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Basic method of words that begin with a vowel being preceeded by 'an'\n    if (\"aeiou\".indexOf(l_word[0]) >= 0)\n        return \"an\";\n\n    // Instances where y follwed by specific letters is preceeded by 'an'\n    if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/))\n        return \"an\";\n\n    return \"a\";\n};\n\nif ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n    module.exports = indefiniteArticle;\n} else {\n    window.indefiniteArticle = indefiniteArticle;\n}\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.multiBufferDataView = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n})(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n    function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n    function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n    var MultiBufferDataView = /*#__PURE__*/function () {\n      function MultiBufferDataView(buffers) {\n        var byteOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var byteLength = arguments.length > 2 ? arguments[2] : undefined;\n        _classCallCheck__default[\"default\"](this, MultiBufferDataView);\n        if (byteOffset < 0 || byteLength !== undefined && byteLength < 0) {\n          throw new RangeError();\n        }\n        var availableBytes = buffers.reduce(function (length, buffer) {\n          return length + buffer.byteLength;\n        }, 0);\n        if (byteOffset > availableBytes || byteLength !== undefined && byteOffset + byteLength > availableBytes) {\n          throw new RangeError();\n        }\n        var dataViews = [];\n        var effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        var truncatedBuffers = [];\n        var consumedByteLength = 0;\n        var truncatedByteOffset = byteOffset;\n        var _iterator = _createForOfIteratorHelper(buffers),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var buffer = _step.value;\n            if (truncatedBuffers.length === 0) {\n              if (buffer.byteLength > truncatedByteOffset) {\n                consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                var byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n              } else {\n                truncatedByteOffset -= buffer.byteLength;\n              }\n            } else if (consumedByteLength < effectiveByteLength) {\n              consumedByteLength += buffer.byteLength;\n              var _byteLengthOfDataView = consumedByteLength > effectiveByteLength ? buffer.byteLength - consumedByteLength + effectiveByteLength : buffer.byteLength;\n              dataViews.push(new DataView(buffer, 0, _byteLengthOfDataView));\n              truncatedBuffers.push(buffer);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n      }\n      _createClass__default[\"default\"](MultiBufferDataView, [{\n        key: \"buffers\",\n        get: function get() {\n          return this._buffers;\n        }\n      }, {\n        key: \"byteLength\",\n        get: function get() {\n          return this._byteLength;\n        }\n      }, {\n        key: \"byteOffset\",\n        get: function get() {\n          return this._byteOffset;\n        }\n      }, {\n        key: \"getFloat32\",\n        value: function getFloat32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getFloat32(0, littleEndian);\n        }\n      }, {\n        key: \"getFloat64\",\n        value: function getFloat64(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n          this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n          this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n          this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n          return this._internalBuffer.getFloat64(0, littleEndian);\n        }\n      }, {\n        key: \"getInt16\",\n        value: function getInt16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          return this._internalBuffer.getInt16(0, littleEndian);\n        }\n      }, {\n        key: \"getInt32\",\n        value: function getInt32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getInt32(0, littleEndian);\n        }\n      }, {\n        key: \"getInt8\",\n        value: function getInt8(byteOffset) {\n          var _this$_findDataViewWi = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi2 = _slicedToArray__default[\"default\"](_this$_findDataViewWi, 2),\n            dataView = _this$_findDataViewWi2[0],\n            byteOffsetOfDataView = _this$_findDataViewWi2[1];\n          return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"getUint16\",\n        value: function getUint16(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          return this._internalBuffer.getUint16(0, littleEndian);\n        }\n      }, {\n        key: \"getUint32\",\n        value: function getUint32(byteOffset, littleEndian) {\n          this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n          this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n          this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n          this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n          return this._internalBuffer.getUint32(0, littleEndian);\n        }\n      }, {\n        key: \"getUint8\",\n        value: function getUint8(byteOffset) {\n          var _this$_findDataViewWi3 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi4 = _slicedToArray__default[\"default\"](_this$_findDataViewWi3, 2),\n            dataView = _this$_findDataViewWi4[0],\n            byteOffsetOfDataView = _this$_findDataViewWi4[1];\n          return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n        }\n      }, {\n        key: \"setFloat32\",\n        value: function setFloat32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setFloat64\",\n        value: function setFloat64(byteOffset, value, littleEndian) {\n          this._internalBuffer.setFloat64(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n          this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n          this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n          this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n          this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n        }\n      }, {\n        key: \"setInt16\",\n        value: function setInt16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt16(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setInt32\",\n        value: function setInt32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setInt32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setInt8\",\n        value: function setInt8(byteOffset, value) {\n          var _this$_findDataViewWi5 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi6 = _slicedToArray__default[\"default\"](_this$_findDataViewWi5, 2),\n            dataView = _this$_findDataViewWi6[0],\n            byteOffsetOfDataView = _this$_findDataViewWi6[1];\n          dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"setUint16\",\n        value: function setUint16(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint16(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        }\n      }, {\n        key: \"setUint32\",\n        value: function setUint32(byteOffset, value, littleEndian) {\n          this._internalBuffer.setUint32(0, value, littleEndian);\n          this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n          this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n          this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n          this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        }\n      }, {\n        key: \"setUint8\",\n        value: function setUint8(byteOffset, value) {\n          var _this$_findDataViewWi7 = this._findDataViewWithOffset(byteOffset),\n            _this$_findDataViewWi8 = _slicedToArray__default[\"default\"](_this$_findDataViewWi7, 2),\n            dataView = _this$_findDataViewWi8[0],\n            byteOffsetOfDataView = _this$_findDataViewWi8[1];\n          dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n        }\n      }, {\n        key: \"_findDataViewWithOffset\",\n        value: function _findDataViewWithOffset(byteOffset) {\n          var byteOffsetOfDataView = 0;\n          var _iterator2 = _createForOfIteratorHelper(this._dataViews),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var dataView = _step2.value;\n              var byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n              if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n              }\n              byteOffsetOfDataView = byteOffsetOfNextDataView;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          throw new RangeError();\n        }\n      }]);\n      return MultiBufferDataView;\n    }();\n\n    exports.MultiBufferDataView = MultiBufferDataView;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","module.exports = require(\"./lib\");\n","\"use strict\";var __awaiter=(this&&this.__awaiter)||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}\nreturn new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}\nfunction rejected(value){try{step(generator[\"throw\"](value));}catch(e){reject(e);}}\nfunction step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}\nstep((generator=generator.apply(thisArg,_arguments||[])).next());});};var __generator=(this&&this.__generator)||function(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1];},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),\"throw\":verb(1),\"return\":verb(2)},typeof Symbol===\"function\"&&(g[Symbol.iterator]=function(){return this;}),g;function verb(n){return function(v){return step([n,v]);};}\nfunction step(op){if(f)throw new TypeError(\"Generator is already executing.\");while(_)try{if(f=1,y&&(t=op[0]&2?y[\"return\"]:op[0]?y[\"throw\"]||((t=y[\"return\"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue;}\nif(op[0]===3&&(!t||(op[1]>t[0]&&op[1]<t[3]))){_.label=op[1];break;}\nif(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break;}\nif(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break;}\nif(t[2])_.ops.pop();_.trys.pop();continue;}\nop=body.call(thisArg,_);}catch(e){op=[6,e];y=0;}finally{f=t=0;}\nif(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true};}};Object.defineProperty(exports,\"__esModule\",{value:true});exports.ReactMediaRecorder=exports.useReactMediaRecorder=exports.RecorderErrors=void 0;var extendable_media_recorder_1=require(\"extendable-media-recorder\");var react_1=require(\"react\");var extendable_media_recorder_wav_encoder_1=require(\"extendable-media-recorder-wav-encoder\");var RecorderErrors;(function(RecorderErrors){RecorderErrors[\"AbortError\"]=\"media_aborted\";RecorderErrors[\"NotAllowedError\"]=\"permission_denied\";RecorderErrors[\"NotFoundError\"]=\"no_specified_media_found\";RecorderErrors[\"NotReadableError\"]=\"media_in_use\";RecorderErrors[\"OverconstrainedError\"]=\"invalid_media_constraints\";RecorderErrors[\"TypeError\"]=\"no_constraints\";RecorderErrors[\"NONE\"]=\"\";RecorderErrors[\"NO_RECORDER\"]=\"recorder_error\";})(RecorderErrors=exports.RecorderErrors||(exports.RecorderErrors={}));function useReactMediaRecorder(_a){var _this=this;var _b=_a.audio,audio=_b===void 0?true:_b,_c=_a.video,video=_c===void 0?false:_c,_d=_a.onStop,onStop=_d===void 0?function(){return null;}:_d,_e=_a.onStart,onStart=_e===void 0?function(){return null;}:_e,blobPropertyBag=_a.blobPropertyBag,_f=_a.screen,screen=_f===void 0?false:_f,_g=_a.mediaRecorderOptions,mediaRecorderOptions=_g===void 0?undefined:_g,_h=_a.customMediaStream,customMediaStream=_h===void 0?null:_h,_j=_a.stopStreamsOnStop,stopStreamsOnStop=_j===void 0?true:_j,_k=_a.askPermissionOnMount,askPermissionOnMount=_k===void 0?false:_k;var mediaRecorder=(0,react_1.useRef)(null);var mediaChunks=(0,react_1.useRef)([]);var mediaStream=(0,react_1.useRef)(null);var _l=(0,react_1.useState)(\"idle\"),status=_l[0],setStatus=_l[1];var _m=(0,react_1.useState)(false),isAudioMuted=_m[0],setIsAudioMuted=_m[1];var _o=(0,react_1.useState)(undefined),mediaBlobUrl=_o[0],setMediaBlobUrl=_o[1];var _p=(0,react_1.useState)(\"NONE\"),error=_p[0],setError=_p[1];(0,react_1.useEffect)(function(){var setup=function(){return __awaiter(_this,void 0,void 0,function(){var _a;return __generator(this,function(_b){switch(_b.label){case 0:_a=extendable_media_recorder_1.register;return[4,(0,extendable_media_recorder_wav_encoder_1.connect)()];case 1:return[4,_a.apply(void 0,[_b.sent()])];case 2:_b.sent();return[2];}});});};setup();},[]);var getMediaStream=(0,react_1.useCallback)(function(){return __awaiter(_this,void 0,void 0,function(){var requiredMedia,stream_1,audioStream,stream,error_1;return __generator(this,function(_a){switch(_a.label){case 0:setStatus(\"acquiring_media\");requiredMedia={audio:typeof audio===\"boolean\"?!!audio:audio,video:typeof video===\"boolean\"?!!video:video,};_a.label=1;case 1:_a.trys.push([1,9,,10]);if(!customMediaStream)return[3,2];mediaStream.current=customMediaStream;return[3,8];case 2:if(!screen)return[3,6];return[4,window.navigator.mediaDevices.getDisplayMedia({video:video||true,})];case 3:stream_1=(_a.sent());stream_1.getVideoTracks()[0].addEventListener(\"ended\",function(){stopRecording();});if(!audio)return[3,5];return[4,window.navigator.mediaDevices.getUserMedia({audio:audio,})];case 4:audioStream=_a.sent();audioStream.getAudioTracks().forEach(function(audioTrack){return stream_1.addTrack(audioTrack);});_a.label=5;case 5:mediaStream.current=stream_1;return[3,8];case 6:return[4,window.navigator.mediaDevices.getUserMedia(requiredMedia)];case 7:stream=_a.sent();mediaStream.current=stream;_a.label=8;case 8:setStatus(\"idle\");return[3,10];case 9:error_1=_a.sent();setError(error_1.name);setStatus(\"idle\");return[3,10];case 10:return[2];}});});},[audio,video,screen]);(0,react_1.useEffect)(function(){if(!window.MediaRecorder){throw new Error(\"Unsupported Browser\");}\nif(screen){if(!window.navigator.mediaDevices.getDisplayMedia){throw new Error(\"This browser doesn\\'t support screen capturing\");}}\nvar checkConstraints=function(mediaType){var supportedMediaConstraints=navigator.mediaDevices.getSupportedConstraints();var unSupportedConstraints=Object.keys(mediaType).filter(function(constraint){return!supportedMediaConstraints[constraint];});if(unSupportedConstraints.length>0){console.error(\"The constraints \".concat(unSupportedConstraints.join(\",\"),\" doesn't support on this browser. Please check your ReactMediaRecorder component.\"));}};if(typeof audio===\"object\"){checkConstraints(audio);}\nif(typeof video===\"object\"){checkConstraints(video);}\nif(mediaRecorderOptions&&mediaRecorderOptions.mimeType){if(!MediaRecorder.isTypeSupported(mediaRecorderOptions.mimeType)){console.error(\"The specified MIME type you supplied for MediaRecorder doesn't support this browser\");}}\nif(!mediaStream.current&&askPermissionOnMount){getMediaStream();}\nreturn function(){if(mediaStream.current){var tracks=mediaStream.current.getTracks();tracks.forEach(function(track){return track.clone().stop();});}};},[audio,screen,video,getMediaStream,mediaRecorderOptions,askPermissionOnMount,]);var startRecording=function(){return __awaiter(_this,void 0,void 0,function(){var isStreamEnded;return __generator(this,function(_a){switch(_a.label){case 0:setError(\"NONE\");if(!!mediaStream.current)return[3,2];return[4,getMediaStream()];case 1:_a.sent();_a.label=2;case 2:if(!mediaStream.current)return[3,5];isStreamEnded=mediaStream.current.getTracks().some(function(track){return track.readyState===\"ended\";});if(!isStreamEnded)return[3,4];return[4,getMediaStream()];case 3:_a.sent();_a.label=4;case 4:if(!mediaStream.current.active){return[2];}\nmediaRecorder.current=new extendable_media_recorder_1.MediaRecorder(mediaStream.current,mediaRecorderOptions||undefined);mediaRecorder.current.ondataavailable=onRecordingActive;mediaRecorder.current.onstop=onRecordingStop;mediaRecorder.current.onstart=onRecordingStart;mediaRecorder.current.onerror=function(){setError(\"NO_RECORDER\");setStatus(\"idle\");};mediaRecorder.current.start();setStatus(\"recording\");_a.label=5;case 5:return[2];}});});};var onRecordingActive=function(_a){var data=_a.data;mediaChunks.current.push(data);};var onRecordingStart=function(){onStart();};var onRecordingStop=function(){var chunk=mediaChunks.current[0];var blobProperty=Object.assign({type:chunk.type},blobPropertyBag||(video?{type:\"video/mp4\"}:{type:\"audio/wav\"}));var blob=new Blob(mediaChunks.current,blobProperty);var url=URL.createObjectURL(blob);setStatus(\"stopped\");setMediaBlobUrl(url);onStop(url,blob);};var muteAudio=function(mute){setIsAudioMuted(mute);if(mediaStream.current){mediaStream.current.getAudioTracks().forEach(function(audioTrack){return(audioTrack.enabled=!mute);});}};var pauseRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"recording\"){setStatus(\"paused\");mediaRecorder.current.pause();}};var resumeRecording=function(){if(mediaRecorder.current&&mediaRecorder.current.state===\"paused\"){setStatus(\"recording\");mediaRecorder.current.resume();}};var stopRecording=function(){if(mediaRecorder.current){if(mediaRecorder.current.state!==\"inactive\"){setStatus(\"stopping\");mediaRecorder.current.stop();if(stopStreamsOnStop){mediaStream.current&&mediaStream.current.getTracks().forEach(function(track){return track.stop();});}\nmediaChunks.current=[];}}};return{error:RecorderErrors[error],muteAudio:function(){return muteAudio(true);},unMuteAudio:function(){return muteAudio(false);},startRecording:startRecording,pauseRecording:pauseRecording,resumeRecording:resumeRecording,stopRecording:stopRecording,mediaBlobUrl:mediaBlobUrl,status:status,isAudioMuted:isAudioMuted,previewStream:mediaStream.current?new MediaStream(mediaStream.current.getVideoTracks()):null,previewAudioStream:mediaStream.current?new MediaStream(mediaStream.current.getAudioTracks()):null,clearBlobUrl:function(){if(mediaBlobUrl){URL.revokeObjectURL(mediaBlobUrl);}\nsetMediaBlobUrl(undefined);setStatus(\"idle\");},};}\nexports.useReactMediaRecorder=useReactMediaRecorder;var ReactMediaRecorder=function(props){return props.render(useReactMediaRecorder(props));};exports.ReactMediaRecorder=ReactMediaRecorder;","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.fastUniqueNumbers = {}));\n})(this, (function (exports) { 'use strict';\n\n    var createAddUniqueNumber = function createAddUniqueNumber(generateUniqueNumber) {\n      return function (set) {\n        var number = generateUniqueNumber(set);\n        set.add(number);\n        return number;\n      };\n    };\n\n    var createCache = function createCache(lastNumberWeakMap) {\n      return function (collection, nextNumber) {\n        lastNumberWeakMap.set(collection, nextNumber);\n        return nextNumber;\n      };\n    };\n\n    /*\n     * The value of the constant Number.MAX_SAFE_INTEGER equals (2 ** 53 - 1) but it\n     * is fairly new.\n     */\n    var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER === undefined ? 9007199254740991 : Number.MAX_SAFE_INTEGER;\n    var TWO_TO_THE_POWER_OF_TWENTY_NINE = 536870912;\n    var TWO_TO_THE_POWER_OF_THIRTY = TWO_TO_THE_POWER_OF_TWENTY_NINE * 2;\n    var createGenerateUniqueNumber = function createGenerateUniqueNumber(cache, lastNumberWeakMap) {\n      return function (collection) {\n        var lastNumber = lastNumberWeakMap.get(collection);\n        /*\n         * Let's try the cheapest algorithm first. It might fail to produce a new\n         * number, but it is so cheap that it is okay to take the risk. Just\n         * increase the last number by one or reset it to 0 if we reached the upper\n         * bound of SMIs (which stands for small integers). When the last number is\n         * unknown it is assumed that the collection contains zero based consecutive\n         * numbers.\n         */\n        var nextNumber = lastNumber === undefined ? collection.size : lastNumber < TWO_TO_THE_POWER_OF_THIRTY ? lastNumber + 1 : 0;\n        if (!collection.has(nextNumber)) {\n          return cache(collection, nextNumber);\n        }\n        /*\n         * If there are less than half of 2 ** 30 numbers stored in the collection,\n         * the chance to generate a new random number in the range from 0 to 2 ** 30\n         * is at least 50%. It's benifitial to use only SMIs because they perform\n         * much better in any environment based on V8.\n         */\n        if (collection.size < TWO_TO_THE_POWER_OF_TWENTY_NINE) {\n          while (collection.has(nextNumber)) {\n            nextNumber = Math.floor(Math.random() * TWO_TO_THE_POWER_OF_THIRTY);\n          }\n          return cache(collection, nextNumber);\n        }\n        // Quickly check if there is a theoretical chance to generate a new number.\n        if (collection.size > MAX_SAFE_INTEGER) {\n          throw new Error('Congratulations, you created a collection of unique numbers which uses all available integers!');\n        }\n        // Otherwise use the full scale of safely usable integers.\n        while (collection.has(nextNumber)) {\n          nextNumber = Math.floor(Math.random() * MAX_SAFE_INTEGER);\n        }\n        return cache(collection, nextNumber);\n      };\n    };\n\n    var LAST_NUMBER_WEAK_MAP = new WeakMap();\n    var cache = createCache(LAST_NUMBER_WEAK_MAP);\n    var generateUniqueNumber = createGenerateUniqueNumber(cache, LAST_NUMBER_WEAK_MAP);\n    var addUniqueNumber = createAddUniqueNumber(generateUniqueNumber);\n\n    exports.addUniqueNumber = addUniqueNumber;\n    exports.generateUniqueNumber = generateUniqueNumber;\n\n}));\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["exports","_slicedToArray","_classCallCheck","_createClass","createExtendedExponentialRampToValueAutomationEvent","value","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","target","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","undefined","length","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","floor","upperIndex","ceil","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","_Symbol$iterator","this","_automationEvents","_currenTime","_defaultValue","key","Symbol","iterator","eventTime","findIndex","removedAutomationEvent","slice","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","push","getValue","ratio","max","fraction","i","factor","_index","previousAutomationEvent","persistentAutomationEvent","splice","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","indexOfNextEvent","indexOfCurrentEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","factory","PORT_MAP","WeakMap","ONGOING_REQUESTS","createBroker","brokerImplementation","fullBrokerImplementation","partialBrokerImplementation","connect","call","async","port1","port2","MessageChannel","portId","port","set","disconnect","get","isSupported","sender","ongoingRequests","has","Map","createOrGetOngoingRequests","addEventListener","data","message","id","reject","resolve","delete","error","result","start","isMessagePort","method","params","transferables","Promise","generateUniqueNumber","postMessage","notify","functions","handler","Object","entries","_toConsumableArray","dashify","indefiniteArticle","applyModifiers","name","modifiers","reduce","modifiedName","modifier","head","charAt","toUpperCase","tail","concat","buildRegex","variable","expression","map","join","RegExp","preRenderString","string","parameters","expressionRegex","variables","expressionResult","exec","modifiersRegex","modifiersRegexResult","preRenderedParts","parts","part","split","prts","prt","prmtrs","missingParameters","renderedParts","preRenderedPart","compile","template","knownParameters","arguments","renderCode","code","renderMessage","render","causeOrMissingParameters","optionalCause","cause","err","status","module","str","options","TypeError","trim","replace","m","test","condense","toLowerCase","wrap","characterize","encode","recordingId","timeslice","record","sampleRate","typedArrays","buffer","blob","Blob","url","URL","createObjectURL","extendableMediaRecorderWavEncoder","worker","Worker","load","revokeObjectURL","encoderIds","Set","encoderId","arrayBuffers","instantiate","mimeType","addUniqueNumber","register","mediaEncoderHost","createInvalidModificationError","DOMException","createNotSupportedError","observable","noop","rethrow","emitNotSupportedError","observer","window","wrapSubscribeFunction","patch","toObserver","emptyFunction","innerSubscribe","subscribe","args","unsubscribe","isNextFunction","next","createWrapSubscribeFunction","arg","prototype","complete","bind","mutations","createAnimationFrame","htmlElement","MutationObserver","mutationObserver","records","observe","createMutations","mapSubscribableThing","subscribableThing","createMapSubscribableThing","prependSubscribableThing","prependedValue","createPrependSubscribableThing","on","createAttribute","createGeolocation","createIntersections","createMediaDevices","createMediaQueryMatch","createMetrics","createMidiInputs","createMidiOutputs","listener","event","removeEventListener","createOn","JSON_RPC_ERROR_CODES","addRecorderAudioWorkletModule","blobConstructor","urlConstructor","worklet","addAudioWorkletModule","createAddRecorderAudioWorkletModule","createRecorderAudioWorkletNode","createListener","createPostMessage","validateState","audioWorkletNodeConstructor","context","audioWorkletNode","channelCountMode","numberOfInputs","numberOfOutputs","state","defineProperties","pause","encoderPort","resume","stop","createRecorderAudioWorkletNodeFactory","ongoingRequest","createPostMessageFactory","expectedStates","currentState","includes","expectedState","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","construct","IMPORT_STATEMENT_REGEX","splitImportStatements","source","importStatements","sourceWithoutImportStatements","match","unresolvedUrl","importStatementWithResolvedUrl","toString","verifyParameterDescriptors","parameterDescriptors","Array","isArray","verifyProcessorCtor","processorCtor","constructible","Proxy","isConstructible","getValueForKey","pickElementFromSet","predicate","matchingElements","from","filter","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputs","output","input","passiveInputConnections","matchingConnection","passiveInputConnection","size","getEventListenersOfAudioNode","audioNode","setInternalStateToActive","add","forEach","eventListener","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","activeInputs","every","connections","DEFAULT_OPTIONS","channelCount","channelInterpretation","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","isOwnedByContext","nativeAudioNode","nativeContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","Float32Array","createIndexSizeError","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","numberOfChannels","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isActiveAudioNode","loop","loopEnd","loopStart","playbackRate","getAudioNodeConnections","getAudioParamConnections","audioParam","deactivateActiveAudioNodeInputConnections","trace","audioParams","isAudioBufferSourceNode","isBiquadFilterNode","Q","detune","frequency","gain","isConstantSourceNode","offset","isGainNode","isOscillatorNode","isStereoPannerNode","pan","audioParamConnections","deactivateAudioGraph","destination","isValidLatencyHint","latencyHint","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","insertElementInSet","element","ignoreDuplicates","lmnt","addActiveInputConnectionToAudioParam","activeInputConnection","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","fakeNativeDestinationAudioNode","inputs","deleteActiveInputConnection","activeInputConnections","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","disconnectNativeAudioNodeFromNativeAudioNode","getNativeAudioNode","getNativeAudioParam","isPartOfACycle","isPassiveAudioNode","testAudioNodeDisconnectMethodSupport","nativeAudioContext","nativeAudioWorkletNodeConstructor","analyzer","createScriptProcessor","dummy","createGain","ones","createBuffer","channelData","createBufferSource","onaudioprocess","chnnlDt","inputBuffer","some","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","count","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","connection","destinationOrOutput","apply","clear","filteredConnections","addConnectionToAudioParamOfAudioContext","isOffline","outputs","eventListeners","isActive","nativeAudioParam","partialConnection","deleteActiveInputConnectionToAudioParam","deleteInputsOfAudioNode","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","ReadOnlyMap","constructor","_map","callback","thisArg","keys","parameterData","processorOptions","copyFromChannel","parent","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","x","y","arrays","array","j","processBuffer","proxy","renderedBuffer","nativeOfflineAudioContext","outputChannelCount","processorConstructor","exposeCurrentFrameAndCurrentTime","numberOfInputChannels","numberOfOutputChannels","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","nodeToProcessorMap","nativeAudioWorkletNode","getAudioWorkletProcessor","k","potentiallyEmptyInputs","activeSourceFlag","process","outputChannelSplitterNodeOutput","dispatchEvent","ErrorEvent","colno","filename","lineno","disableNormalization","detachArrayBuffer","arrayBuffer","closeAndResolve","onmessage","close","delayTime","maxDelayTime","getOutputAudioNodeAtIndex","outputAudioNodes","outputAudioNode","attack","knee","release","threshold","createInvalidAccessError","filterBuffer","feedback","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","testPromiseSupport","uint32Array","Uint32Array","promise","decodeAudioData","catch","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","nativeAnalyserNode","getFloatTimeDomainData","assignNativeAudioNodeAudioParamValue","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","when","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","computeBufferSize","baseLatency","min","round","log2","createAudioWorkletProcessorPromise","audioWorkletNodeOptions","clonedAudioWorkletNodeOptions","onmessageerror","cloneAudioWorkletNodeOptions","createNativeBiquadFilterNode","nativeBiquadFilterNode","createBiquadFilter","createNativeChannelSplitterNode","nativeChannelSplitterNode","createChannelSplitter","channelSplitterNode","defineProperty","wrapChannelSplitterNode","interceptConnections","original","interceptor","createNativeDelayNode","nativeDelayNode","createDelay","createNativeGainNode","nativeGainNode","divide","a","b","denominator","evaluatePolynomial","coefficient","z","createNativeScriptProcessorNode","bufferSize","periodicWave","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","createUnknownError","curve","oversample","getFirstSample","isDCCurve","overwriteAccessors","object","property","createGetter","createSetter","hasOwnProperty","getPrototypeOf","getOwnPropertyDescriptor","setValueAtTimeUntilPossible","setValueAtTime","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeAudioBufferSourceNode","createOscillator","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","wrapEventListener","descriptor","currentTarget","handleEvent","addActiveInputConnectionToAudioNode","createAddActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","createAddPassiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioNode","createDeleteActiveInputConnectionToAudioNode","audioNodeTailTimeStore","getAudioNodeTailTime","_a","createGetAudioNodeTailTime","cacheTestResult","ongoingTests","testResults","tester","cachedTestResult","ongoingTest","synchronousTestResult","then","finalTestResult","createNativeAnalyserNode","createAnalyser","byteTimeDomainData","Uint8Array","getByteTimeDomainData","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAnalyserNodeFactory","getAudioNodeRenderer","renderer","createGetAudioNodeRenderer","renderInputsOfAudioNode","all","audioNodeRenderer","renderedNativeAudioNode","allRenderingPromises","renderingPromises","createRenderInputsOfAudioNode","createAnalyserNodeRenderer","renderedNativeAnalyserNodes","renderedNativeAnalyserNode","createAnalyserNode","createAnalyserNodeRendererFactory","getNativeContext","contextStore","nativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","anything","createIsNativeOfflineAudioContext","audioParamAudioNodeStore","eventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","nativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioContextConstructor","isNativeAudioContext","createIsNativeAudioContext","AudioNode","createIsNativeAudioNode","isNativeAudioParam","AudioParam","createIsNativeAudioParam","AudioWorkletNode","createNativeAudioWorkletNodeConstructor","audioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","decrementCycleCounter","detectCycles","super","_context","_nativeAudioNode","isPassive","maxValue","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","audioNodeConnectionsStore","tailTimeTimeoutIds","tailTime","tailTimeTimeoutId","clearTimeout","setTimeout","createAddConnectionToAudioNode","cycleCounters","cycleCounter","nativeDestinationAudioParam","createIncrementCycleCounterFactory","createDecrementCycleCounter","chain","nextLink","isDelayNode","mergedCycles","nestedCycles","createDetectCycles","analyserNodeConstructor","audionNodeConstructor","mergedOptions","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getFloatFrequencyData","createAnalyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","AudioBuffer","createNativeAudioBufferConstructor","convertNumberToUnsignedLong","unit32Array","wrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","testNativeAudioBufferConstructorSupport","hasInstance","instance","createAudioBufferConstructor","createTestAudioBufferConstructorSupport","addSilentConnection","createAddSilentConnection","renderInputsOfAudioParam","createRenderInputsOfAudioParam","connectAudioParam","createConnectAudioParam","createNativeAudioBufferSourceNode","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","createNativeAudioBufferSourceNodeFactory","clampedOffset","nullifiedBuffer","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","renderAutomation","getAudioParamRenderer","replay","createRenderAutomation","createGetAudioParamRenderer","createAudioBufferSourceNodeRenderer","renderedNativeAudioBufferSourceNodes","renderedNativeAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","createAudioBufferSourceNode","createAudioBufferSourceNodeRendererFactory","createAudioParam","addAudioParamConnections","audioParamStore","createAudioParamRenderer","isAudioParamOfOfflineAudioContext","minValue","automationEventList","audioParamRenderer","currentTime","cancelAndHoldAtTime","flush","previousLastEvent","pop","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","Number","isFinite","setTargetAtTime","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","createAudioParamFactory","audioParamConnectionsStore","audioBufferSourceNodeConstructor","createInvalidStateError","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","onended","wrappedListener","nativeOnEnded","resetInternalStateToPassive","createAudioBufferSourceNodeConstructor","audioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","createAudioDestinationNodeConstructor","renderedNativeAudioDestinationNodes","renderedNativeAudioDestinationNode","createAudioDestinationNode","isNodeOfNativeOfflineAudioContext","gainNode","createNativeAudioDestinationNodeFactory","createBiquadFilterNodeRenderer","renderedNativeBiquadFilterNodes","renderedNativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","createBiquadFilterNode","createBiquadFilterNodeRendererFactory","setAudioNodeTailTime","createSetAudioNodeTailTime","biquadFilterNodeConstructor","_Q","_detune","_frequency","_gain","log10","_nativeBiquadFilterNode","getFrequencyResponse","frequencyHz","magResponse","phaseResponse","createBiquadFilterNodeConstructor","monitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","createMonitorConnections","wrapChannelMergerNode","channelMergerNode","audioBufferSourceNode","createWrapChannelMergerNode","createNativeChannelMergerNode","nativeChannelMergerNode","createChannelMerger","createNativeChannelMergerNodeFactory","createChannelMergerNodeRenderer","renderedNativeAudioNodes","createAudioNode","createChannelMergerNodeRendererFactory","channelMergerNodeConstructor","createChannelMergerNodeConstructor","createChannelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","channelSplitterNodeConstructor","sanitizeChannelSplitterOptions","createChannelSplitterNodeConstructor","createNativeConstantSourceNodeFaker","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConstantSourceNodeFakerFactory","createNativeConstantSourceNode","createConstantSource","nativeConstantSourceNode","createNativeConstantSourceNodeFactory","createConstantSourceNodeRenderer","renderedNativeConstantSourceNodes","renderedNativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","createConstantSourceNode","createConstantSourceNodeRendererFactory","constantSourceNodeConstructor","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","createConstantSourceNodeConstructor","createNativeConvolverNode","nativeConvolverNode","createConvolver","normalize","createNativeConvolverNodeFactory","createConvolverNodeRenderer","renderedNativeConvolverNodes","renderedNativeConvolverNode","createConvolverNode","createConvolverNodeRendererFactory","convolverNodeConstructor","_nativeConvolverNode","createConvolverNodeConstructor","createDelayNodeRenderer","renderedNativeDelayNodes","renderedNativeDelayNode","nativeDelayNodeIsOwnedByContext","createDelayNode","createDelayNodeRendererFactory","delayNodeConstructor","_delayTime","createDelayNodeConstructor","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","createDynamicsCompressor","createNativeDynamicsCompressorNodeFactory","createDynamicsCompressorNodeRenderer","renderedNativeDynamicsCompressorNodes","renderedNativeDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","createDynamicsCompressorNode","createDynamicsCompressorNodeRendererFactory","dynamicsCompressorNodeConstructor","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeConstructor","createGainNodeRenderer","renderedNativeGainNodes","renderedNativeGainNode","nativeGainNodeIsOwnedByContext","createGainNode","createGainNodeRendererFactory","gainNodeConstructor","createGainNodeConstructor","createNativeIIRFilterNodeFaker","convertedFeedback","Float64Array","convertedFeedforward","scriptProcessorNode","bufferIndexes","xBuffers","yBuffers","fill","outputBuffer","nyquist","omega","PI","cos","sin","response","sqrt","atan2","createNativeIIRFilterNodeFakerFactory","renderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","startRendering","createRenderNativeOfflineAudioContext","createTestOfflineAudioContextCurrentTimeSupport","createIIRFilterNodeRenderer","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","partialOfflineAudioContext","filteredBuffer","filterFullBuffer","createIIRFilterNodeRendererFactory","createNativeIIRFilterNode","createNativeIIRFilterNodeFactory","iIRFilterNodeConstructor","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","createIIRFilterNodeConstructor","createAudioListener","nativeListener","forwardX","forwardY","forwardZ","upX","upY","upZ","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","orientation","setOrientation","positon","setPosition","createSetOrientation","createSetPosition","createFakeAudioParam","initialValue","setValue","constantSourceNode","createFakeAudioParams","createAudioListenerFactory","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","_nativeContext","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalBaseAudioContextConstructor","createNativeOscillatorNode","nativeOscillatorNode","setPeriodicWave","createNativeOscillatorNodeFactory","createOscillatorNodeRenderer","renderedNativeOscillatorNodes","renderedNativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","createOscillatorNode","createOscillatorNodeRendererFactory","oscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createConnectedNativeAudioBufferSourceNodeFactory","createNativeWaveShaperNodeFaker","negativeWaveShaperNode","createWaveShaper","positiveWaveShaperNode","inputGainNode","invertGainNode","outputGainNode","revertGainNode","disconnectNativeAudioBufferSourceNode","isConnected","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","centerIndex","createNativeWaveShaperNodeFakerFactory","createNativeWaveShaperNode","nativeWaveShaperNode","automationRate","createNativeWaveShaperNodeFactory","createNativePannerNodeFaker","pannerNode","createPanner","SINGLE_CHANNEL_OPTIONS","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePannerNodeFakerFactory","createNativePannerNode","nativePannerNode","createNativePannerNodeFactory","createPannerNodeRenderer","renderedBufferPromise","renderedNativeGainNodeOrNativePannerNode","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","createPannerNodeRendererFactory","pannerNodeConstructor","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeConstructor","createNativePeriodicWave","imag","real","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWave","createNativePeriodicWaveFactory","periodicWaveConstructor","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","createPeriodicWaveConstructor","nativeStereoPannerNodeFakerFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","connectGraph","disconnectGraph","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","createNativeStereoPannerNodeFakerFactory","createNativeStereoPannerNode","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFactory","createStereoPannerNodeRenderer","renderedNativeStereoPannerNodes","renderedNativeStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","createStereoPannerNode","createStereoPannerNodeRendererFactory","stereoPannerNodeConstructor","_pan","createStereoPannerNodeConstructor","createWaveShaperNodeRenderer","renderedNativeWaveShaperNodes","renderedNativeWaveShaperNode","createWaveShaperNode","createWaveShaperNodeRendererFactory","waveShaperNodeConstructor","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeConstructor","isSecureContext","createIsSecureContext","fn","currentFrame","configurable","createExposeCurrentFrameAndCurrentTime","backupOfflineAudioContextStore","getOrCreateBackupOfflineAudioContext","backupOfflineAudioContext","createGetOrCreateBackupOfflineAudioContext","evaluateSource","fetchSource","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","credentials","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","audioWorklet","absoluteUrl","evaluateAudioWorkletGlobalScope","_AWGS","SyntaxError","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","addModule","nativeContextOrBackupOfflineAudioContext","finally","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","createAddAudioWorkletModule","document","script","createElement","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","src","location","href","onload","appendChild","createEvaluateSource","createAbortError","fetch","ok","text","createFetchSource","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","oscillator","onprocessorerror","createTestAudioWorkletProcessorPostMessageSupport","isNativeContext","createIsNativeContext","createDataCloneError","createEncodingError","detachedArrayBuffers","anyContext","audioData","fail","createDecodeAudioData","baseAudioContextConstructor","_audioWorklet","constraints","successCallback","errorCallback","createBaseAudioContextConstructor","mediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","_nativeMediaElementAudioSourceNode","mediaElement","createMediaElementAudioSourceNodeConstructor","createMediaElementSource","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioDestinationNodeConstructor","createMediaStreamDestination","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","mediaStream","createMediaStreamAudioSourceNodeConstructor","audioStreamTracks","getAudioTracks","sort","filteredAudioStreamTracks","createMediaStreamSource","MediaStream","createNativeMediaStreamTrackAudioSourceNode","mediaStreamTrack","createMediaStreamTrackSource","kind","createNativeMediaStreamTrackAudioSourceNodeFactory","mediaStreamTrackAudioSourceNodeConstructor","createMediaStreamTrackAudioSourceNodeConstructor","getUnrenderedAudioWorkletNodes","createAudioContextConstructor","unrenderedAudioWorkletNodes","createGetUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","createAddUnrenderedAudioWorkletNode","connectMultipleOutputs","createConnectMultipleOutputs","deleteUnrenderedAudioWorkletNode","createDeleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createDisconnectMultipleOutputs","activeAudioWorkletNodeInputsStore","getActiveAudioWorkletNodeInputs","createGetActiveAudioWorkletNodeInputs","createNativeAudioWorkletNodeFaker","numberOfParameters","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","_","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","disconnectOutputsGraph","outputChannelMergerNode","activeInputIndexes","disconnectFakeGraph","connectFakeGraph","createNativeAudioWorkletNodeFakerFactory","createNativeAudioWorkletNode","testClonabilityOfAudioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createAudioWorkletNodeRenderer","processedBufferPromise","renderedNativeAudioWorkletNodeOrGainNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","nm","createAudioWorkletNodeRendererFactory","getBackupOfflineAudioContext","createGetBackupOfflineAudioContext","setActiveAudioWorkletNodeInputs","createSetActiveAudioWorkletNodeInputs","sanitizeAudioWorkletNodeOptions","testAudioWorkletNodeOptionsClonability","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","createAudioWorkletNodeConstructor","minimalAudioContextConstructor","_baseLatency","_nativeAudioContext","_nativeGainNode","_state","revokeState","resolvePromise","suspend","createMinimalAudioContextConstructor","createNativeOfflineAudioContext","createCreateNativeOfflineAudioContext","createStartRendering","ERROR_MESSAGE","createMinimalOfflineAudioContextConstructor","createOfflineAudioContextConstructor","createIsAnyAudioContext","audioNodeStore","createIsAnyAudioNode","createIsAnyAudioParam","createIsAnyOfflineAudioContext","readVariableSizeIntegerLength","dataView","byte","getUint8","encoderRegexes","createBlobEvent","nativeBlobEventConstructor","blobEventInit","eventInit","fakeBlobEvent","Event","createBlobEventFactory","BlobEvent","createNativeBlobEventConstructor","createWebAudioMediaRecorder","eventTarget","getSettings","audioContext","bufferedArrayBuffers","promisedAudioWorkletModule","abortRecording","intervalId","promisedAudioNodesAndEncoderId","promisedPartialRecording","isAudioContextRunning","dispatchDataAvailableEvent","requestNextPartialRecording","mediaStreamAudioSourceNode","recorderAudioWorkletNode","getVideoTracks","audioTracks","createPromisedAudioNodesEncoderIdAndPort","tracks","getTracks","setInterval","currentTracks","track","createWebAudioMediaRecorderFactory","readVariableSizeInteger","firstDataByteOffset","createReadVariableSizeInteger","readElementContent","lengthAndValue","content","numberOfSamples","elementOffset","getFloat32","createReadElementContent","readElementType","createReadElementType","decodeWebMChunk","elementType","contents","currentElementType","lengthAndType","contentAndLength","createDecodeWebMChunk","createWebmPcmMediaRecorder","nativeMediaRecorderConstructor","nativeMediaRecorder","stopRecording","isRecording","pendingInvocations","promisedDataViewElementTypeEncoderIdAndPort","currentDataView","MultiBufferDataView","buffers","byteOffset","remainingDataView","createWebmPcmMediaRecorderFactory","createEventTarget","createEventTargetFactory","MediaRecorder","createNativeMediaRecorderConstructor","createNativeMediaRecorder","mediaRecorderOptions","bufferedBlobs","dataAvailableListeners","errorListeners","stopListeners","wasActive","dataAvailableListener","errorListener","stopListener","startsWith","createNativeMediaRecorderFactory","mediaRecorderConstructor","isTypeSupported","internalMediaRecorder","_internalMediaRecorder","regex","_ondataavailable","_onerror","_onpause","_onresume","_onstart","_onstop","ondataavailable","boundListener","onpause","onresume","onstart","onstop","createMediaRecorderConstructor","nativeEventTarget","createEventTargetConstructor","canvasElement","getContext","captureStream","mediaRecorder","createAddUniqueNumber","number","createCache","lastNumberWeakMap","collection","nextNumber","MAX_SAFE_INTEGER","TWO_TO_THE_POWER_OF_TWENTY_NINE","TWO_TO_THE_POWER_OF_THIRTY","createGenerateUniqueNumber","cache","lastNumber","random","LAST_NUMBER_WEAK_MAP","VoiceChat","setIsRecording","useState","React","Seo","title","rel","className","ReactMediaRecorder","audio","startRecording","mediaBlobUrl","onClick","mediaUrl","console","log","audioBlob","r","audioFile","File","bodyFormData","FormData","append","handleSubmit","hidden","controls","autoPlay","phrase","word","l_word","alt_cases","indexOf","regexes","_interopDefaultLegacy","e","_slicedToArray__default","_classCallCheck__default","_createClass__default","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","F","s","n","done","_e","f","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","arr","len","arr2","availableBytes","_step","dataViews","effectiveByteLength","truncatedBuffers","consumedByteLength","truncatedByteOffset","_iterator","byteLengthOfDataView","DataView","_byteLengthOfDataView","_buffers","_byteLength","_byteOffset","_dataViews","_internalBuffer","ArrayBuffer","littleEndian","setUint8","getFloat64","getInt16","getInt32","_this$_findDataViewWi","_findDataViewWithOffset","_this$_findDataViewWi2","byteOffsetOfDataView","getInt8","getUint16","getUint32","_this$_findDataViewWi3","_this$_findDataViewWi4","setFloat32","setFloat64","setInt16","setInt32","_this$_findDataViewWi5","_this$_findDataViewWi6","setInt8","setUint16","setUint32","_this$_findDataViewWi7","_this$_findDataViewWi8","_step2","_iterator2","byteOffsetOfNextDataView","__awaiter","_arguments","P","generator","fulfilled","rejected","__generator","body","t","g","label","sent","trys","ops","verb","v","op","useReactMediaRecorder","RecorderErrors","extendable_media_recorder_1","react_1","extendable_media_recorder_wav_encoder_1","_this","_b","_c","video","_d","onStop","onStart","blobPropertyBag","_f","screen","_g","_h","customMediaStream","_j","stopStreamsOnStop","_k","askPermissionOnMount","useRef","mediaChunks","_l","setStatus","_m","isAudioMuted","setIsAudioMuted","_o","setMediaBlobUrl","_p","setError","useEffect","getMediaStream","useCallback","requiredMedia","stream_1","error_1","current","navigator","mediaDevices","getDisplayMedia","getUserMedia","audioTrack","addTrack","checkConstraints","mediaType","supportedMediaConstraints","getSupportedConstraints","unSupportedConstraints","constraint","clone","onRecordingActive","onRecordingStart","onRecordingStop","chunk","blobProperty","assign","muteAudio","mute","enabled","unMuteAudio","readyState","active","pauseRecording","resumeRecording","previewStream","previewAudioStream","clearBlobUrl","props","__esModule","arrayLikeToArray","Constructor","toPropertyKey","_defineProperties","enumerable","writable","protoProps","staticProps","iter","l","u","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","_typeof","toPrimitive","String"],"sourceRoot":""}